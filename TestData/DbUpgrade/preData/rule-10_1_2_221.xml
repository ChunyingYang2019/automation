<?xml version="1.0" encoding="UTF-8" standalone="yes"?><response timestamp="1387958640840" requestId="0"><result><eventForwardingRules></eventForwardingRules><rules><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Web_Server_1" entityVersion="2" xmlId="Rule$PH_Rule_Web_Server_1" ownerId="500150" lastModified="1387781680212" id="1386450" custId="0" creationTime="1387520454481"><activatedTime>1387781680212</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects multiple HTTP client side errors from the same IP - might indicate an attack . Thresholds are 5 errors from the samesrc IP within a 10 minute interval</description><eventFilters entityVersion="0" xmlId="EventFilter@2111904" ownerId="500150" lastModified="1387781680212" id="2111904" custId="0" creationTime="1387781680212"><groupBy>reptDevIpAddr,srcIpAddr</groupBy><groupConstraint>COUNT (*) &gt;= 5</groupConstraint><index>0</index><name>ExcessHTTPClientErr</name><singleConstraint>eventType IN ("IIS-Web-Forbidden-Access-Denied","IIS-Web-Bad-Request","IIS-Web-Length-Reqd-Access-Denied","Apache-Web-Forbidden-Access-Denied","Apache-Web-Bad-Request","Apache-Web-Length-Reqd-Access-Denied","Squid-Web-Forbidden-Access-Denied","Squid-Web-Bad-Request","Squid-Web-Length-Reqd-Access-Denied")</singleConstraint></eventFilters><name>Excessive HTTP Client Side Errors</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111904</eventFilters><incidentAttrs>
        srcIpAddr = ExcessHTTPClientErr.srcIpAddr, destIpAddr = ExcessHTTPClientErr.reptDevIpAddr,incidentCount = ExcessHTTPClientErr.COUNT(*)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_EXCESS_HTTP_CLIENT_ERR</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,srcIpAddr,user,httpMethod,uriStem,eventType,httpStatusCode,httpSubStatusCode,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Web_Server_2" entityVersion="2" xmlId="Rule$PH_Rule_Web_Server_2" ownerId="500150" lastModified="1387781680324" id="1386451" custId="0" creationTime="1387520454638"><activatedTime>1387781680324</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects multiple FTP client side errors from the same IP - might indicate an attack from the source IP</description><eventFilters entityVersion="0" xmlId="EventFilter@2111905" ownerId="500150" lastModified="1387781680324" id="2111905" custId="0" creationTime="1387781680324"><groupBy>reptDevIpAddr,srcIpAddr,user</groupBy><groupConstraint>COUNT (*) &gt;= 5</groupConstraint><index>0</index><name>ExcessFTPClientErr</name><singleConstraint>eventType IN ("IIS-FTP-Command-Not-Implemented","IIS-FTP-File-Not-Found","IIS-FTP-Illegal-File")</singleConstraint></eventFilters><name>Excessive FTP Client Side Errors</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111905</eventFilters><incidentAttrs>
        srcIpAddr = ExcessFTPClientErr.srcIpAddr, destIpAddr = ExcessFTPClientErr.reptDevIpAddr,user = ExcessFTPClientErr.user, incidentCount = ExcessFTPClientErr.COUNT(*)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_EXCESS_FTP_CLIENT_ERR</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,srcIpAddr,user,httpMethod,uriStem,httpStatusCode,httpSubStatusCode,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Web_Server_3" entityVersion="2" xmlId="Rule$PH_Rule_Web_Server_3" ownerId="500150" lastModified="1387781680478" id="1386452" custId="0" creationTime="1387520454804"><activatedTime>1387781680477</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects an external IP posting an executable site to a web server</description><eventFilters entityVersion="0" xmlId="EventFilter@2111906" ownerId="500150" lastModified="1387781680477" id="2111906" custId="0" creationTime="1387781680477"><groupBy>srcIpAddr</groupBy><groupConstraint>COUNT (*) &gt;= 1</groupConstraint><index>0</index><name>ExecFilePost</name><singleConstraint>httpMethod IN ("POST","PUT") AND eventType IN (Group@PH_SYS_EVENT_PermitWebTraffic) AND (uriStem CONTAIN ".cgi" OR uriStem CONTAIN ".asp" OR uriStem CONTAIN ".aspx" OR uriStem CONTAIN ".jar" OR uriStem CONTAIN ".php" OR uriStem CONTAIN ".exe" OR uriStem CONTAIN ".com" OR uriStem CONTAIN ".cmd" OR uriStem CONTAIN ".sh" OR uriStem CONTAIN ".bat")</singleConstraint></eventFilters><name>Executable file posting from external source</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111906</eventFilters><incidentAttrs>
        srcIpAddr = ExecFilePost.srcIpAddr
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_EXECUTABLE_FILE_POST</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,srcIpAddr,httpMethod,uriStem,httpStatusCode,httpSubStatusCode,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_VoIP_1" entityVersion="2" xmlId="Rule$PH_Rule_VoIP_1" ownerId="500150" lastModified="1387781681129" id="1386453" custId="0" creationTime="1387520455318"><activatedTime>1387781681129</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects degraded voip call quality (mos score between 2.2 and 3.5)</description><eventFilters entityVersion="0" xmlId="EventFilter@2111907" ownerId="500150" lastModified="1387781681128" id="2111907" custId="0" creationTime="1387781681128"><groupBy>srcName,destName,ipSLAProto,codec</groupBy><groupConstraint>AVG(mosScore) &gt; 2.2 AND AVG(mosScore) &lt;= 3.5 AND COUNT (*) &gt;= 2</groupConstraint><index>0</index><name>MediumCallQuality</name><singleConstraint>eventType = "PH_DEV_MON_IPSLA_VOIP_MET"</singleConstraint></eventFilters><name>Degraded VoIP Call Quality</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111907</eventFilters><incidentAttrs>
        srcName = MediumCallQuality.srcName, destName = MediumCallQuality.destName, ipSLAProto= MediumCallQuality.ipSLAProto, codec = MediumCallQuality.codec  
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_DEGRADED_VOIP_MOS</incidentType><triggerEventAttrList>phRecvTime,srcIpAddr,srcName,destIpAddr,destName,ipSLAProto,codec,mosScore,icpifScore,avgDurationMSec,avgJitterMs,pktLost,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_VoIP_2" entityVersion="2" xmlId="Rule$PH_Rule_VoIP_2" ownerId="500150" lastModified="1387781681283" id="1386454" custId="0" creationTime="1387520455431"><activatedTime>1387781681282</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects poor voip call quality (mos score less than 2.2)</description><eventFilters entityVersion="0" xmlId="EventFilter@2111908" ownerId="500150" lastModified="1387781681282" id="2111908" custId="0" creationTime="1387781681282"><groupBy>srcName,destName,ipSLAProto,codec</groupBy><groupConstraint>AVG(mosScore) &lt;= 2.2 AND COUNT (*) &gt;= 2</groupConstraint><index>0</index><name>PoorCallQuality</name><singleConstraint>eventType = "PH_DEV_MON_IPSLA_VOIP_MET"</singleConstraint></eventFilters><name>Poor VoIP Call Quality</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111908</eventFilters><incidentAttrs>
        srcName = PoorCallQuality.srcName, destName = PoorCallQuality.destName, ipSLAProto= PoorCallQuality.ipSLAProto, codec = PoorCallQuality.codec  
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_POOR_VOIP_MOS</incidentType><triggerEventAttrList>phRecvTime,srcIpAddr,srcName,destIpAddr,destName,ipSLAProto,codec,mosScore,icpifScore,avgDurationMSec,avgJitterMs,pktLost,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Server" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_8" entityVersion="2" xmlId="Rule$PH_Rule_Perf_8" ownerId="500150" lastModified="1387781681751" id="1386455" custId="0" creationTime="1387520456302"><activatedTime>1387781681751</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects high CPU usage by a server application on the basis of 3 consecutive measurements in a 15 minute period</description><eventFilters entityVersion="0" xmlId="EventFilter@2111909" ownerId="500150" lastModified="1387781681750" id="2111909" custId="0" creationTime="1387781681750"><groupBy>hostIpAddr, appName</groupBy><groupConstraint>AVG(cpuUtil) &gt;= 85 AND COUNT(*) &gt;= 3</groupConstraint><index>0</index><name>HighProcessCPU</name><singleConstraint>eventType = "PH_DEV_MON_PROC_RESOURCE_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server)</singleConstraint></eventFilters><name>High Process CPU: Server</name><triggerWindow>900</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111909</eventFilters><incidentAttrs>
        hostIpAddr = HighProcessCPU.hostIpAddr, appName = HighProcessCPU.appName, cpuUtil = HighProcessCPU.AVG(cpuUtil)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>true</incidentFired><incidentType>EventType$PH_RULE_HIGH_CPU_APPL_SERVER</incidentType><triggerEventAttrList>phRecvTime,eventType,hostIpAddr,appName,cpuUtil,memUtil,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Server" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_9" entityVersion="2" xmlId="Rule$PH_Rule_Perf_9" ownerId="500150" lastModified="1387781681953" id="1386456" custId="0" creationTime="1387520456428"><activatedTime>1387781681953</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects high memory usage by a server application on the basis of 3 consecutive measurements in a 15 minute period</description><eventFilters entityVersion="0" xmlId="EventFilter@2111910" ownerId="500150" lastModified="1387781681953" id="2111910" custId="0" creationTime="1387781681953"><groupBy>hostIpAddr, appName</groupBy><groupConstraint>AVG(memUtil) &gt;= 80 AND COUNT(*) &gt;= 3</groupConstraint><index>0</index><name>HighProcessMemory</name><singleConstraint>eventType = "PH_DEV_MON_PROC_RESOURCE_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server)</singleConstraint></eventFilters><name>High Process Memory: Server</name><triggerWindow>900</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111910</eventFilters><incidentAttrs>
        hostIpAddr = HighProcessMemory.hostIpAddr, appName = HighProcessMemory.appName, memUtil = HighProcessMemory.AVG(memUtil)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_HIGH_MEM_APPL_SERVER</incidentType><triggerEventAttrList>phRecvTime,eventType,hostIpAddr,appName,cpuUtil,memUtil,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Server" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_10" entityVersion="2" xmlId="Rule$PH_Rule_Perf_10" ownerId="500150" lastModified="1387781682074" id="1386457" custId="0" creationTime="1387520456555"><activatedTime>1387781682073</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects the process count at a server to be twice the average</description><eventFilters entityVersion="0" xmlId="EventFilter@2111911" ownerId="500150" lastModified="1387781682073" id="2111911" custId="0" creationTime="1387781682073"><groupBy>hostIpAddr</groupBy><groupConstraint>PH_FUNC_DIFF_STAT_AVG_1(AVG(procCount), 2.0) &gt;= 0 AND COUNT(*) &gt;= 3</groupConstraint><index>0</index><name>ExcessProcessCount</name><singleConstraint>eventType = "PH_DEV_MON_SYS_PROC_COUNT"</singleConstraint></eventFilters><name>Server Process Count Anomaly</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111911</eventFilters><incidentAttrs>
        hostIpAddr = ExcessProcessCount.hostIpAddr, procCount = ExcessProcessCount.AVG(procCount)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_STAT_HIGH_PROC_COUNT</incidentType><triggerEventAttrList>phRecvTime,eventType,hostIpAddr,procCount,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_21" entityVersion="1" xmlId="Rule$PH_Rule_Perf_21" ownerId="500150" lastModified="1387781682188" id="1386458" custId="0" creationTime="1387520456677"><active>false</active><custInclusive>true</custInclusive><description>Detects that the health of a network device is critical and needs immediate attention based average CPU, memory and interface utilization and interface errors - at least one of the measured attributes has crossed the specified HIGH threshold</description><eventFilters entityVersion="0" xmlId="EventFilter@2111912" ownerId="500150" lastModified="1387781682187" id="2111912" custId="0" creationTime="1387781682187"><groupBy>hostIpAddr,hostName</groupBy><index>0</index><name>NetHealthCrit</name><singleConstraint>eventType IN ("PH_RULE_NET_CPU_CRIT","PH_RULE_NET_MEM_CRIT", "PH_RULE_NET_INTF_UTIL_CRIT","PH_RULE_NET_INTF_ERR_CRIT") AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network)</singleConstraint></eventFilters><name>Network Device Health: Critical</name><triggerWindow>540</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111912</eventFilters><incidentAttrs>
        hostIpAddr = NetHealthCrit.hostIpAddr,hostName = NetHealthCrit.hostName
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_HEALTH_NET_DEV_CRITICAL</incidentType><triggerEventAttrList>phRecvTime,hostIpAddr,hostName,eventType,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Server" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_22" entityVersion="1" xmlId="Rule$PH_Rule_Perf_22" ownerId="500150" lastModified="1387781682298" id="1386459" custId="0" creationTime="1387520456798"><active>false</active><custInclusive>true</custInclusive><description>Detects that the health of a windows server is critical and needs immediate attention based average CPU, memory, disk and interface utilization and interface errors - at least one of the measured attributes has crossed the specified HIGH threshold</description><eventFilters entityVersion="0" xmlId="EventFilter@2111913" ownerId="500150" lastModified="1387781682297" id="2111913" custId="0" creationTime="1387781682297"><groupBy>hostIpAddr, hostName</groupBy><index>0</index><name>WinHealthCrit</name><singleConstraint>eventType IN ("PH_RULE_SERVER_CPU_CRIT","PH_RULE_SERVER_MEM_CRIT","PH_RULE_SERVER_DISK_SPACE_CRIT", "PH_RULE_SERVER_INTF_UTIL_CRIT","PH_RULE_SERVER_INTF_ERR_CRIT") AND hostIpAddr IN (Group@PH_SYS_DEVICE_WINDOWS_SERVER)</singleConstraint></eventFilters><name>Windows Server Health: Critical</name><triggerWindow>540</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111913</eventFilters><incidentAttrs>
        hostIpAddr = WinHealthCrit.hostIpAddr, hostName = WinHealthCrit.hostName
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_HEALTH_WIN_SERVER_CRITICAL</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Server" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_24" entityVersion="1" xmlId="Rule$PH_Rule_Perf_24" ownerId="500150" lastModified="1387781682409" id="1386460" custId="0" creationTime="1387520456914"><active>false</active><custInclusive>true</custInclusive><description>Detects that the health of a unix server is critical and needs immediate attention based average CPU, memory, disk and interface utilization and interface errors - at least one of the measured attributes has crossed the specified HIGH threshold</description><eventFilters entityVersion="0" xmlId="EventFilter@2111914" ownerId="500150" lastModified="1387781682408" id="2111914" custId="0" creationTime="1387781682408"><groupBy>hostIpAddr, hostName</groupBy><index>0</index><name>UnixHealthCrit</name><singleConstraint>eventType IN ("PH_RULE_SERVER_CPU_CRIT","PH_RULE_SERVER_MEM_CRIT","PH_RULE_SERVER_DISK_SPACE_CRIT", "PH_RULE_SERVER_INTF_UTIL_CRIT","PH_RULE_SERVER_INTF_ERR_CRIT") AND hostIpAddr IN (Group@PH_SYS_DEVICE_UNIX_SERVER)</singleConstraint></eventFilters><name>Unix Server Health: Critical</name><triggerWindow>540</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111914</eventFilters><incidentAttrs>
        hostIpAddr = UnixHealthCrit.hostIpAddr, hostName = UnixHealthCrit.hostName
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_HEALTH_UNIX_SERVER_CRITICAL</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,hostIpAddr,cpuUtil,memUtil,diskUtil,freeDiskMB,diskIOUtil,intfName,inIntfUtil,outIntfUtil,inIntfPktErrPct,outIntfPktErrPct,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_28" entityVersion="1" xmlId="Rule$PH_Rule_Perf_28" ownerId="500150" lastModified="1387781682521" id="1386461" custId="0" creationTime="1387520457030"><active>false</active><custInclusive>true</custInclusive><description>Detects that the health of a network device need to be watched carefully based average CPU, memory and interface utilization and interface errors- at least one of the measured attributes has crossed the specified LOW threshold but has not yet crossed the specified HIGH threshold</description><eventFilters entityVersion="0" xmlId="EventFilter@2111915" ownerId="500150" lastModified="1387781682520" id="2111915" custId="0" creationTime="1387781682520"><groupBy>hostIpAddr,hostName</groupBy><index>0</index><name>NetHealthWarn</name><singleConstraint>eventType IN ("PH_RULE_NET_CPU_WARN","PH_RULE_NET_MEM_WARN", "PH_RULE_NET_INTF_UTIL_WARN","PH_RULE_NET_INTF_ERR_WARN") AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network)</singleConstraint></eventFilters><name>Network Device Health: Warning</name><triggerWindow>540</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111915</eventFilters><incidentAttrs>
        hostIpAddr = NetHealthWarn.hostIpAddr, hostName = NetHealthWarn.hostName
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_HEALTH_NET_DEV_WATCH</incidentType><triggerEventAttrList>phRecvTime,eventType,hostIpAddr,hostName,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Server" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_29" entityVersion="1" xmlId="Rule$PH_Rule_Perf_29" ownerId="500150" lastModified="1387781682633" id="1386462" custId="0" creationTime="1387520457149"><active>false</active><custInclusive>true</custInclusive><description>Detects that the health of a windows server need to be watched carefully based average CPU, memory, disk and interface utilization and interface errors- at least one of the measured attributes has crossed the specified LOW threshold but has not yet crossed the specified HIGH threshold</description><eventFilters entityVersion="0" xmlId="EventFilter@2111916" ownerId="500150" lastModified="1387781682633" id="2111916" custId="0" creationTime="1387781682633"><groupBy>hostIpAddr,hostName</groupBy><index>0</index><name>WinHealthWarn</name><singleConstraint>eventType IN ("PH_RULE_SERVER_CPU_WARN","PH_RULE_SERVER_MEM_WARN","PH_RULE_SERVER_DISK_SPACE_WARN", "PH_RULE_SERVER_INTF_UTIL_WARN","PH_RULE_SERVER_INTF_ERR_WARN") AND hostIpAddr IN (Group@PH_SYS_DEVICE_WINDOWS_SERVER)</singleConstraint></eventFilters><name>Windows Server Health: Warning</name><triggerWindow>540</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111916</eventFilters><incidentAttrs>
        hostIpAddr = WinHealthWarn.hostIpAddr, hostName = WinHealthWarn.hostName
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_HEALTH_WIN_SERVER_WATCH</incidentType><phEventCategory>1</phEventCategory><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,hostIpAddr,cpuUtil,memUtil,diskUtil,diskIOUtil,intfName,inIntfUtil,outIntfUtil,inIntfPktErrPct,outIntfPktErrPct,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Server" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_30" entityVersion="1" xmlId="Rule$PH_Rule_Perf_30" ownerId="500150" lastModified="1387781682745" id="1386463" custId="0" creationTime="1387520457271"><active>false</active><custInclusive>true</custInclusive><description>Detects that the health of a unix server need to be watched carefully based average CPU, memory, disk and interface utilization and interface errors- at least one of the measured attributes has crossed the specified LOW threshold but has not yet crossed the specified HIGH threshold</description><eventFilters entityVersion="0" xmlId="EventFilter@2111917" ownerId="500150" lastModified="1387781682745" id="2111917" custId="0" creationTime="1387781682745"><groupBy>hostIpAddr,hostName</groupBy><index>0</index><name>UnixHealthWarn</name><singleConstraint>eventType IN ("PH_RULE_SERVER_CPU_WARN","PH_RULE_SERVER_MEM_WARN","PH_RULE_SERVER_DISK_SPACE_WARN", "PH_RULE_SERVER_INTF_UTIL_WARN","PH_RULE_SERVER_INTF_ERR_WARN") AND hostIpAddr IN (Group@PH_SYS_DEVICE_UNIX_SERVER)</singleConstraint></eventFilters><name>Unix Server Health: Warning</name><triggerWindow>540</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111917</eventFilters><incidentAttrs>
        hostIpAddr = UnixHealthWarn.hostIpAddr, hostName = UnixHealthWarn.hostName
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_HEALTH_UNIX_SERVER_WATCH</incidentType><phEventCategory>1</phEventCategory><triggerEventAttrList>phRecvTime,eventType,hostIpAddr,hostName,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_31" entityVersion="2" xmlId="Rule$PH_Rule_Perf_31" ownerId="500150" lastModified="1387781682858" id="1386464" custId="0" creationTime="1387520457398"><activatedTime>1387781682858</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects high CPU usage by an application on the basis of 3 consecutive measurements in a 15 minute period</description><eventFilters entityVersion="0" xmlId="EventFilter@2111918" ownerId="500150" lastModified="1387781682858" id="2111918" custId="0" creationTime="1387781682858"><groupBy>hostIpAddr, appName</groupBy><groupConstraint>AVG(cpuUtil) &gt;= 85 AND COUNT(*) &gt;= 3</groupConstraint><index>0</index><name>NetProcCPUHigh</name><singleConstraint>eventType = "PH_DEV_MON_PROC_RESOURCE_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network)</singleConstraint></eventFilters><name>High Process CPU: Network Device</name><triggerWindow>900</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111918</eventFilters><incidentAttrs>
        hostIpAddr = NetProcCPUHigh.hostIpAddr, appName = NetProcCPUHigh.appName, cpuUtil = NetProcCPUHigh.AVG(cpuUtil)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_HIGH_CPU_APPL_NET_DEV</incidentType><triggerEventAttrList>phRecvTime,eventType,hostIpAddr,appName,cpuUtil,memUtil,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_32" entityVersion="2" xmlId="Rule$PH_Rule_Perf_32" ownerId="500150" lastModified="1387781682981" id="1386465" custId="0" creationTime="1387520457525"><activatedTime>1387781682980</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects high memory usage by an application on the basis of 3 consecutive measurements in a 15 minute period</description><eventFilters entityVersion="0" xmlId="EventFilter@2111919" ownerId="500150" lastModified="1387781682980" id="2111919" custId="0" creationTime="1387781682980"><groupBy>hostIpAddr, appName</groupBy><groupConstraint>AVG(memUtil) &gt;= 80 AND COUNT(*) &gt;= 3</groupConstraint><index>0</index><name>NetProcMemHigh</name><singleConstraint>eventType = "PH_DEV_MON_PROC_RESOURCE_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network)</singleConstraint></eventFilters><name>High Process Memory: Network Device</name><triggerWindow>900</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111919</eventFilters><incidentAttrs>
        hostIpAddr = NetProcMemHigh.hostIpAddr, appName = NetProcMemHigh.appName, memUtil = NetProcMemHigh.AVG(memUtil)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_HIGH_MEM_APPL_NET_DEV</incidentType><triggerEventAttrList>phRecvTime,eventType,hostIpAddr,appName,cpuUtil,memUtil,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Virtualization" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_43" entityVersion="1" xmlId="Rule$PH_Rule_Perf_43" ownerId="500150" lastModified="1387781683099" id="1386466" custId="0" creationTime="1387520457644"><active>false</active><custInclusive>true</custInclusive><description>Detects that the health of a virtual machine need to be watched carefully based on specific VM metrics such as CPU ready percent, memory swapping rates and disk I/O activity- at least one of the measured attributes has crossed the specified LOW threshold but has not yet crossed the specified HIGH threshold</description><eventFilters entityVersion="0" xmlId="EventFilter@2111920" ownerId="500150" lastModified="1387781683098" id="2111920" custId="0" creationTime="1387781683098"><groupBy>hostName,hostIpAddr,phyMachIpAddr,phyMachName</groupBy><index>0</index><name>VMHealthWarn</name><singleConstraint>eventType IN ("PH_RULE_VM_CPU_WARN", "PH_RULE_VM_MEM_WARN", "PH_RULE_VM_DISKIO_WARN")</singleConstraint></eventFilters><name>Virtual Machine Health: Warning</name><triggerWindow>540</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111920</eventFilters><incidentAttrs>
        hostIpAddr = VMHealthWarn.hostIpAddr,hostName = VMHealthWarn.hostName,phyMachIpAddr = VMHealthWarn.phyMachIpAddr,phyMachName = VMHealthWarn.phyMachName
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_HEALTH_VM_WATCH</incidentType><triggerEventAttrList>phRecvTime,eventType,hostName,hostIpAddr,phyMachIpAddr,phyMachName,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Virtualization" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_44" entityVersion="1" xmlId="Rule$PH_Rule_Perf_44" ownerId="500150" lastModified="1387781683211" id="1386467" custId="0" creationTime="1387520457769"><active>false</active><custInclusive>true</custInclusive><description>Detects that the health of a virtual machine is critical based on specific VM metrics such as CPU ready percent, memory swapping rates and disk I/O activity- at least one of the measured attributes has crossed the specified HIGH threshold</description><eventFilters entityVersion="0" xmlId="EventFilter@2111921" ownerId="500150" lastModified="1387781683210" id="2111921" custId="0" creationTime="1387781683210"><groupBy>hostName,hostIpAddr,phyMachIpAddr,phyMachName</groupBy><index>0</index><name>VMHealthCrit</name><singleConstraint>eventType IN ("PH_RULE_VM_CPU_CRIT", "PH_RULE_VM_MEM_CRIT", "PH_RULE_VM_DISKIO_CRIT")</singleConstraint></eventFilters><name>Virtual Machine Health: Critical</name><triggerWindow>540</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111921</eventFilters><incidentAttrs>
        hostIpAddr = VMHealthCrit.hostIpAddr,hostName = VMHealthCrit.hostName,phyMachIpAddr = VMHealthCrit.phyMachIpAddr,phyMachName = VMHealthCrit.phyMachName
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_HEALTH_VM_CRITICAL</incidentType><triggerEventAttrList>phRecvTime,eventType,hostName,hostIpAddr,phyMachIpAddr,phyMachName,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Virtualization" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_47" entityVersion="1" xmlId="Rule$PH_Rule_Perf_47" ownerId="500150" lastModified="1387781683326" id="1386468" custId="0" creationTime="1387520457884"><active>false</active><custInclusive>true</custInclusive><description>Detects that the health of an ESX server is to be watched carefully since either the performance of one of the component VMs has entered a watched state or the ESX server itself is showing high resource utilization at the aggregate level.</description><eventFilters entityVersion="0" xmlId="EventFilter@2111922" ownerId="500150" lastModified="1387781683325" id="2111922" custId="0" creationTime="1387781683325"><groupBy>hostName,hostIpAddr</groupBy><index>0</index><name>VMHealthWatch</name><singleConstraint>eventType IN ("PH_RULE_ESX_CPU_WARN","PH_RULE_ESX_MEM_WARN","PH_RULE_ESX_DISKIO_WARN", "PH_RULE_ESX_INTF_WARN")</singleConstraint></eventFilters><name>ESX Server Health: Warning</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111922</eventFilters><incidentAttrs>
        hostIpAddr = VMHealthWatch.hostIpAddr, hostName = VMHealthWatch.hostName
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_HEALTH_ESX_WATCH</incidentType><triggerEventAttrList>phRecvTime,eventType,hostIpAddr,hostName,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Virtualization" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_48" entityVersion="1" xmlId="Rule$PH_Rule_Perf_48" ownerId="500150" lastModified="1387781683440" id="1386469" custId="0" creationTime="1387520458000"><active>false</active><custInclusive>true</custInclusive><description>Detects that the health of an ESX server is critical since either the performance of one of the component VMs is in critical state or the ESX server itself is showing critical resource utilization at the aggregate level.</description><eventFilters entityVersion="0" xmlId="EventFilter@2111923" ownerId="500150" lastModified="1387781683439" id="2111923" custId="0" creationTime="1387781683439"><groupBy>hostName,hostIpAddr</groupBy><index>0</index><name>VMHealthWatch</name><singleConstraint>eventType IN ("PH_RULE_ESX_CPU_CRIT","PH_RULE_ESX_MEM_CRIT","PH_RULE_ESX_DISKIO_CRIT", "PH_RULE_ESX_INTF_CRIT")</singleConstraint></eventFilters><name>ESX Server Health: Critical</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111923</eventFilters><incidentAttrs>
        hostName = VMHealthWatch.hostName,hostIpAddr = VMHealthWatch.hostIpAddr
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_HEALTH_ESX_CRITICAL</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_200" entityVersion="2" xmlId="Rule$PH_Rule_Flow_200" ownerId="500150" lastModified="1387781683734" id="1386470" custId="0" creationTime="1387520458299"><activatedTime>1387781683733</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects a host performing a port scan - this involves excessive half open TCP connections from the same source to many distinct ports on a host in a short period of time. The thresholds are at least 20 distinct ports in a 2 minute window</description><eventFilters entityVersion="0" xmlId="EventFilter@2111924" ownerId="500150" lastModified="1387781683733" id="2111924" custId="0" creationTime="1387781683733"><groupBy>srcIpAddr,destIpAddr</groupBy><groupConstraint>COUNT (DISTINCT destIpPort) &gt;= 20</groupConstraint><index>0</index><name>Filter1</name><singleConstraint>eventType IN ("IOS-NETFLOW-BI","SFLOW-BI") AND srcDestTCPFlags = 2 AND ipProto = 6 AND srcIpPort &gt;= 1024 AND srcIpAddr NOT IN (Group@PH_SYS_APP_ACCELOPS)</singleConstraint></eventFilters><name>Heavy Half-Open TCP Port Scan: Single Destination</name><triggerWindow>120</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111924</eventFilters><incidentAttrs>
        srcIpAddr = Filter1.srcIpAddr, destIpAddr = Filter1.destIpAddr, incidentCount = Filter1.COUNT (DISTINCT destIpPort)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_HEAVY_HO_TCP_PORT_SCAN</incidentType><triggerEventAttrList>phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,srcDestTCPFlags,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_200B" entityVersion="2" xmlId="Rule$PH_Rule_Flow_200B" ownerId="500150" lastModified="1387781683844" id="1386471" custId="0" creationTime="1387520458411"><activatedTime>1387781683844</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects a host performing a port scan - this involves excessive permitted TCP connections from the same source to many distinct ports on a host in a short period of time. The thresholds are at least 20 distinct ports in a 2 minute window</description><eventFilters entityVersion="0" xmlId="EventFilter@2111925" ownerId="500150" lastModified="1387781683844" id="2111925" custId="0" creationTime="1387781683844"><groupBy>srcIpAddr,destIpAddr</groupBy><groupConstraint>COUNT (DISTINCT destIpPort) &gt;= 20</groupConstraint><index>0</index><name>Filter1</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_PermitTraffic) AND eventType NOT IN ("IOS-NETFLOW-BI","SFLOW-BI") AND ipProto = 6 AND srcIpPort &gt;= 1024 AND srcIpAddr NOT IN (Group@PH_SYS_APP_ACCELOPS)</singleConstraint></eventFilters><name>Heavy TCP Port Scan: Single Destination</name><triggerWindow>120</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111925</eventFilters><incidentAttrs>
        srcIpAddr = Filter1.srcIpAddr, destIpAddr = Filter1.destIpAddr, incidentCount = Filter1.COUNT (DISTINCT destIpPort)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_HEAVY_TCP_PORT_SCAN</incidentType><triggerEventAttrList>phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,srcDestTCPFlags,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_201" entityVersion="2" xmlId="Rule$PH_Rule_Flow_201" ownerId="500150" lastModified="1387781683953" id="1386472" custId="0" creationTime="1387520458521"><activatedTime>1387781683952</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that a source is doing port scans on multiple hosts. The thresholds are port scans on at least 5 hosts in 15 minute window</description><eventFilters entityVersion="0" xmlId="EventFilter@2111926" ownerId="500150" lastModified="1387781683952" id="2111926" custId="0" creationTime="1387781683952"><groupBy>srcIpAddr</groupBy><groupConstraint>COUNT(DISTINCT destIpAddr) &gt; 30</groupConstraint><index>0</index><name>Filter1</name><singleConstraint>eventType IN ("PH_RULE_HEAVY_HO_TCP_PORT_SCAN")</singleConstraint></eventFilters><name>Heavy Half-Open TCP Port Scan: Multiple Destinations</name><triggerWindow>900</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111926</eventFilters><incidentAttrs>
        srcIpAddr = Filter1.srcIpAddr, incidentCount = Filter1.COUNT (DISTINCT destIpAddr)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_REPEAT_HEAVY_HO_TCP_PORT_SCAN</incidentType><triggerEventAttrList>phRecvTime,eventType,srcIpAddr,destIpAddr</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_201B" entityVersion="2" xmlId="Rule$PH_Rule_Flow_201B" ownerId="500150" lastModified="1387781684061" id="1386473" custId="0" creationTime="1387520458632"><activatedTime>1387781684061</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that a source is doing port scans on multiple hosts. The thresholds are port scans on at least 5 hosts in 15 minute window</description><eventFilters entityVersion="0" xmlId="EventFilter@2111927" ownerId="500150" lastModified="1387781684061" id="2111927" custId="0" creationTime="1387781684061"><groupBy>srcIpAddr</groupBy><groupConstraint>COUNT(DISTINCT destIpAddr) &gt; 30</groupConstraint><index>0</index><name>Filter1</name><singleConstraint>eventType IN ("PH_RULE_HEAVY_TCP_PORT_SCAN")</singleConstraint></eventFilters><name>Heavy TCP Port Scan: Multiple Destinations</name><triggerWindow>900</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111927</eventFilters><incidentAttrs>
        srcIpAddr = Filter1.srcIpAddr, incidentCount = Filter1.COUNT (DISTINCT destIpAddr)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_REPEAT_HEAVY_TCP_PORT_SCAN</incidentType><triggerEventAttrList>phRecvTime,eventType,srcIpAddr,destIpAddr</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_202" entityVersion="2" xmlId="Rule$PH_Rule_Flow_202" ownerId="500150" lastModified="1387781684171" id="1386474" custId="0" creationTime="1387520458745"><activatedTime>1387781684170</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects excessive UDP connections from the same source to many distinct ports on the same destination in a short period of time</description><eventFilters entityVersion="0" xmlId="EventFilter@2111928" ownerId="500150" lastModified="1387781684170" id="2111928" custId="0" creationTime="1387781684170"><groupBy>srcIpAddr,destIpAddr</groupBy><groupConstraint>COUNT (DISTINCT destIpPort) &gt;= 20</groupConstraint><index>0</index><name>Filter1</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_PermitTraffic) AND ipProto = 17 AND srcIpPort &gt;= 1024 AND srcIpAddr NOT IN (Group@PH_SYS_APP_ACCELOPS)</singleConstraint></eventFilters><name>Heavy UDP Port Scan: Single Host</name><triggerWindow>120</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111928</eventFilters><incidentAttrs>
        srcIpAddr = Filter1.srcIpAddr, destIpAddr = Filter1.destIpAddr, incidentCount = Filter1.COUNT (DISTINCT destIpPort)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_HEAVY_UDP_PORT_SCAN</incidentType><triggerEventAttrList>phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,srcDestTCPFlags,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_203" entityVersion="2" xmlId="Rule$PH_Rule_Flow_203" ownerId="500150" lastModified="1387781684283" id="1386475" custId="0" creationTime="1387520458857"><activatedTime>1387781684282</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that a source is doing UDP port scans on multiple hosts. The thresholds are port scans on at least 5 hosts in 15 minute window</description><eventFilters entityVersion="0" xmlId="EventFilter@2111929" ownerId="500150" lastModified="1387781684282" id="2111929" custId="0" creationTime="1387781684282"><groupBy>srcIpAddr</groupBy><groupConstraint>COUNT(DISTINCT destIpAddr) &gt; 30</groupConstraint><index>0</index><name>Filter1</name><singleConstraint>eventType IN ("PH_RULE_HEAVY_UDP_PORT_SCAN")</singleConstraint></eventFilters><name>Heavy UDP Port Scan: Multiple Hosts</name><triggerWindow>900</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111929</eventFilters><incidentAttrs>
        srcIpAddr = Filter1.srcIpAddr, incidentCount = Filter1.COUNT (DISTINCT destIpAddr)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_REPEAT_HEAVY_UDP_PORT_SCAN</incidentType><triggerEventAttrList>phRecvTime,eventType,srcIpAddr,destIpAddr</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_204" entityVersion="2" xmlId="Rule$PH_Rule_Flow_204" ownerId="500150" lastModified="1387781684394" id="1386476" custId="0" creationTime="1387520458972"><activatedTime>1387781684393</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects unusual ( more than 10 in 3 minutes) ICMP types, namely other than echo request/reply and destination unreachables</description><eventFilters entityVersion="0" xmlId="EventFilter@2111930" ownerId="500150" lastModified="1387781684393" id="2111930" custId="0" creationTime="1387781684393"><groupBy>srcIpAddr,icmpType</groupBy><groupConstraint>COUNT(*) &gt; 10</groupConstraint><index>0</index><name>UnusualIcmp</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_PermitTraffic) AND ipProto = 1 AND icmpType NOT IN (0,3,8)</singleConstraint></eventFilters><name>Unusual ICMP Traffic</name><triggerWindow>180</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111930</eventFilters><incidentAttrs>
        srcIpAddr = UnusualIcmp.srcIpAddr, icmpType = UnusualIcmp.icmpType, incidentCount = UnusualIcmp.COUNT(*)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_UNUSUAL_ICMP</incidentType><triggerEventAttrList>phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,icmpType,icmpCode</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_205" entityVersion="2" xmlId="Rule$PH_Rule_Flow_205" ownerId="500150" lastModified="1387781684505" id="1386477" custId="0" creationTime="1387520459094"><activatedTime>1387781684504</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects invalid TCP/UDP traffic with 0 port (more than 10 in 3 minutes)</description><eventFilters entityVersion="0" xmlId="EventFilter@2111931" ownerId="500150" lastModified="1387781684504" id="2111931" custId="0" creationTime="1387781684504"><groupBy>srcIpAddr</groupBy><groupConstraint>COUNT(*) &gt; 10</groupConstraint><index>0</index><name>InvalidTCPUDP</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_PermitTraffic) AND ipProto = 17 AND destIpPort = 0</singleConstraint></eventFilters><name>Invalid TCP/UDP Port Traffic</name><triggerWindow>180</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111931</eventFilters><incidentAttrs>
        srcIpAddr = InvalidTCPUDP.srcIpAddr, incidentCount = InvalidTCPUDP.COUNT(*)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_INVALID_TCP_UDP_PORT</incidentType><triggerEventAttrList>phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,icmpType,icmpCode</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_206" entityVersion="2" xmlId="Rule$PH_Rule_Flow_206" ownerId="500150" lastModified="1387781684617" id="1386478" custId="0" creationTime="1387520459215"><activatedTime>1387781684616</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects 100 or more flows in 5 minutes, with invalid TCP flag combinations (NULL,FIN, SYN-FIN, SYN-FIN-PUSH, SYN-FIN-RESET, SYN-FIN-RESET-PUSH,SYN-FIN-RESET-PUSH-ACK-URG) - may indcate scanning and probing activity from the sender</description><eventFilters entityVersion="0" xmlId="EventFilter@2111932" ownerId="500150" lastModified="1387781684616" id="2111932" custId="0" creationTime="1387781684616"><groupBy>srcIpAddr</groupBy><groupConstraint>COUNT(*) &gt;= 100</groupConstraint><index>0</index><name>InvalidTCPFlag</name><singleConstraint>eventType IN ("IOS-NETFLOW-BI","SFLOW-BI") AND ipProto = 6 AND srcDestTCPFlags IN (1,3,7,11,15,31,63)</singleConstraint></eventFilters><name>Invalid TCP Flags - Medium Intensity</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111932</eventFilters><incidentAttrs>
        srcIpAddr = InvalidTCPFlag.srcIpAddr,incidentCount = InvalidTCPFlag.COUNT(*)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_INVALID_TCP_FLAG_MEDIUM</incidentType><triggerEventAttrList>phRecvTime,srcIpAddr,destIpAddr,srcIpPort,ipProto,destIpPort,srcDestTCPFlags</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_207" entityVersion="2" xmlId="Rule$PH_Rule_Flow_207" ownerId="500150" lastModified="1387781684728" id="1386479" custId="0" creationTime="1387520459360"><activatedTime>1387781684727</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects 500 or more flows in 5 minutes, with invalid TCP flag combinations (FIN, SYN-FIN, SYN-FIN-PUSH, SYN-FIN-RESET, SYN-FIN-RESET-PUSH,SYN-FIN-RESET-PUSH-ACK-URG) - may indcate scanning and probing activity from the sender</description><eventFilters entityVersion="0" xmlId="EventFilter@2111933" ownerId="500150" lastModified="1387781684727" id="2111933" custId="0" creationTime="1387781684727"><groupBy>srcIpAddr</groupBy><groupConstraint>COUNT(*) &gt;= 500</groupConstraint><index>0</index><name>InvalidTCPFlag</name><singleConstraint>eventType IN ("IOS-NETFLOW-BI","SFLOW-BI") AND ipProto = 6 AND srcDestTCPFlags IN (1,3,7,11,15,31,63)</singleConstraint></eventFilters><name>Invalid TCP Flags - High Intensity</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111933</eventFilters><incidentAttrs>
        srcIpAddr = InvalidTCPFlag.srcIpAddr,incidentCount = InvalidTCPFlag.COUNT(*)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_INVALID_TCP_FLAG_HIGH</incidentType><triggerEventAttrList>phRecvTime,srcIpAddr,destIpAddr,srcIpPort,ipProto,destIpPort,srcDestTCPFlags</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_208" entityVersion="2" xmlId="Rule$PH_Rule_Flow_208" ownerId="500150" lastModified="1387781684839" id="1386480" custId="0" creationTime="1387520459507"><activatedTime>1387781684839</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects excessive (&gt; 5000 in 5 minutes) ICMP traffic from the same source</description><eventFilters entityVersion="0" xmlId="EventFilter@2111934" ownerId="500150" lastModified="1387781684839" id="2111934" custId="0" creationTime="1387781684839"><groupBy>srcIpAddr</groupBy><groupConstraint>COUNT(*) &gt; 5000</groupConstraint><index>0</index><name>ExcessIcmp</name><singleConstraint>eventType IN ("IOS-NETFLOW-BI","SFLOW-BI") AND ipProto = 1 AND srcIpAddr NOT IN (Group@PH_SYS_APP_ACCELOPS)</singleConstraint></eventFilters><name>Excessive ICMP Traffic From Same Source</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111934</eventFilters><incidentAttrs>
        srcIpAddr = ExcessIcmp.srcIpAddr, incidentCount = ExcessIcmp.COUNT(*)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_EXCESSIVE_ICMP</incidentType><triggerEventAttrList>phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,icmpType,icmpCode</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_209" entityVersion="2" xmlId="Rule$PH_Rule_Flow_209" ownerId="500150" lastModified="1387781684951" id="1386481" custId="0" creationTime="1387520459625"><activatedTime>1387781684951</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects a large outbound transfer (larger than 5MB in 10 minutes) from an internal host to an external destination</description><eventFilters entityVersion="0" xmlId="EventFilter@2111935" ownerId="500150" lastModified="1387781684950" id="2111935" custId="0" creationTime="1387781684950"><groupBy>srcIpAddr</groupBy><groupConstraint>SUM(sentBytes) &gt;= 5242880</groupConstraint><index>0</index><name>LargeXfer</name><singleConstraint>srcIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) AND destIpAddr NOT IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_FIREWALL) AND eventType IN (Group@PH_SYS_EVENT_PermitTraffic)</singleConstraint></eventFilters><name>Large Outbound Transfer</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111935</eventFilters><incidentAttrs>
        srcIpAddr = LargeXfer.srcIpAddr, sentBytes = LargeXfer.SUM(sentBytes)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_LARGE_OUTBOUND_XFER</incidentType><triggerEventAttrList>phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,sentBytes,recvBytes,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_210" entityVersion="2" xmlId="Rule$PH_Rule_Flow_210" ownerId="500150" lastModified="1387781685072" id="1386482" custId="0" creationTime="1387520459750"><activatedTime>1387781685072</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects outbound permitted traffic to bogon networks. These are IP address spaces not yet allocated by IANA and may indicate that the source host is compromised. Note that these addresses change frequently.</description><eventFilters entityVersion="0" xmlId="EventFilter@2111936" ownerId="500150" lastModified="1387781685072" id="2111936" custId="0" creationTime="1387781685072"><groupBy>srcIpAddr, destIpAddr</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>BogonTraffic</name><singleConstraint>srcIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) AND destIpAddr IN (Group@PH_SYS_NETWORK_BOGON_NET) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_FIREWALL) AND eventType IN (Group@PH_SYS_EVENT_PermitTraffic)</singleConstraint></eventFilters><name>Traffic to bogon networks</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111936</eventFilters><incidentAttrs>
        srcIpAddr = BogonTraffic.srcIpAddr, destIpAddr = BogonTraffic.destIpAddr
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_BOGON_TRAFFIC</incidentType><triggerEventAttrList>phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,sentBytes,recvBytes,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_211" entityVersion="2" xmlId="Rule$PH_Rule_Flow_211" ownerId="500150" lastModified="1387781685184" id="1386483" custId="0" creationTime="1387520459868"><activatedTime>1387781685184</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects a large outbound transfer (larger than 2MB in 10 minutes) from an internal host to an external destination that is outside my country. The rule is written for United States and may need to be tuned for other countries.</description><eventFilters entityVersion="0" xmlId="EventFilter@2111937" ownerId="500150" lastModified="1387781685184" id="2111937" custId="0" creationTime="1387781685184"><groupBy>srcIpAddr, destIpAddr</groupBy><groupConstraint>SUM(sentBytes) &gt;= 2097152</groupConstraint><index>0</index><name>LargeXfer</name><singleConstraint>srcIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) AND destIpAddr NOT IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_FIREWALL) AND eventType IN (Group@PH_SYS_EVENT_PermitTraffic) AND destGeoCountry NOT IN (Group@PH_COUNTRY_GROUP_MYHOME)</singleConstraint></eventFilters><name>Large Outbound Transfer To Outside My Country</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111937</eventFilters><incidentAttrs>
        srcIpAddr = LargeXfer.srcIpAddr, destIpAddr = LargeXfer.destIpAddr, sentBytes = LargeXfer.SUM(sentBytes)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_LARGE_OUTBOUND_XFER_OUTSIDE_COUNTRY</incidentType><triggerEventAttrList>phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,sentBytes,recvBytes,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_212" entityVersion="2" xmlId="Rule$PH_Rule_Flow_212" ownerId="500150" lastModified="1387781685296" id="1386484" custId="0" creationTime="1387520460004"><activatedTime>1387781685296</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects a large inbound transfer (larger than 2MB in 10 minutes) from an external destination that is outside my country. The rule is written for United States and may need to be tuned for other countries.</description><eventFilters entityVersion="0" xmlId="EventFilter@2111938" ownerId="500150" lastModified="1387781685296" id="2111938" custId="0" creationTime="1387781685296"><groupBy>srcIpAddr, destIpAddr</groupBy><groupConstraint>SUM(sentBytes) &gt;= 2097152</groupConstraint><index>0</index><name>LargeXfer</name><singleConstraint>srcIpAddr NOT IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) AND destIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_FIREWALL) AND eventType IN (Group@PH_SYS_EVENT_PermitTraffic) AND srcGeoCountry NOT IN (Group@PH_COUNTRY_GROUP_MYHOME)</singleConstraint></eventFilters><name>Large Inbound Transfer From Outside My Country</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111938</eventFilters><incidentAttrs>
        srcIpAddr = LargeXfer.srcIpAddr, destIpAddr = LargeXfer.destIpAddr, sentBytes = LargeXfer.SUM(sentBytes)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_LARGE_INBOUND_XFER_OUTSIDE_COUNTRY</incidentType><triggerEventAttrList>phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,sentBytes,recvBytes,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Change_1" entityVersion="2" xmlId="Rule$PH_Rule_Change_1" ownerId="500150" lastModified="1387781685733" id="1386485" custId="0" creationTime="1387520460298"><activatedTime>1387781685733</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that the startup and running configurations of a network device (router or firewall) are different. This is achieved via logging in.</description><eventFilters entityVersion="0" xmlId="EventFilter@2111939" ownerId="500150" lastModified="1387781685733" id="2111939" custId="0" creationTime="1387781685733"><groupBy>hostIpAddr, hostName, addedItem, deletedItem</groupBy><groupConstraint>COUNT (*) &gt;= 1</groupConstraint><index>0</index><name>StartupRunDelta</name><singleConstraint>hostIpAddr IN (Group@PH_SYS_DEVICE_ROUTER_SWITCH,Group@PH_SYS_DEVICE_FIREWALL) AND eventType = "PH_DEV_MON_DELTA_CONFIG"</singleConstraint></eventFilters><name>Difference in Running and Startup Config</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111939</eventFilters><incidentAttrs>
        hostIpAddr = StartupRunDelta.hostIpAddr, hostName = StartupRunDelta.hostName, addedItem = StartupRunDelta.addedItem, deletedItem = StartupRunDelta.deletedItem
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_DIFF_STARTUP_RUNNING_CONFIG</incidentType><triggerEventAttrList>phRecvTime,hostName,hostIpAddr,eventType,startUpConfVer,runningConfVer,addedItem,deletedItem</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Change_2" entityVersion="2" xmlId="Rule$PH_Rule_Change_2" ownerId="500150" lastModified="1387781685850" id="1386486" custId="0" creationTime="1387520460412"><activatedTime>1387781685850</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that the configuration of a network device (router or firewall) has changed. This is achieved via logging in and keeping track of the last configuration. The IP address of the user likely to have executed the change, is obtained from a preceding syslog that indicates a prior login. This rule requires the network devices to forward syslog to the monitoring system.</description><eventFilters entityVersion="0" xmlId="EventFilter@2111940" ownerId="500150" lastModified="1387781685850" id="2111940" custId="0" creationTime="1387781685850"><groupBy>reptDevIpAddr ,srcIpAddr</groupBy><groupConstraint>COUNT (*) &gt;= 1</groupConstraint><index>0</index><name>loginOrChangeEvent</name><singleConstraint>eventType = "IOS-SYS-CONFIG_I"  OR  eventType = "ASA-605005" OR eventType = "Foundry-Ironware-Startup-Config-Change"</singleConstraint></eventFilters><eventFilters entityVersion="0" xmlId="EventFilter@2111941" ownerId="500150" lastModified="1387781685850" id="2111941" custId="0" creationTime="1387781685850"><groupBy>hostIpAddr ,hostName ,addedItem ,deletedItem</groupBy><groupConstraint>COUNT (*) &gt;= 1</groupConstraint><index>1</index><name>delta</name><singleConstraint>eventType = "PH_DEV_MON_CHANGE_STARTUP_CONFIG"</singleConstraint></eventFilters><filterOperators><rank>0</rank><type>FOLLOWED_BY</type></filterOperators><globalConstraint>loginOrChangeEvent.reptDevIpAddr = delta.hostIpAddr</globalConstraint><name>Startup Config Change (with login info)</name><rawFOString>FOLLOWED_BY:0</rawFOString><triggerWindow>1800</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111940</eventFilters><eventFilters>EventFilter@2111941</eventFilters><incidentAttrs>srcIpAddr = loginOrChangeEvent.srcIpAddr, hostIpAddr = delta.hostIpAddr, hostName = delta.hostName, addedItem = delta.addedItem, deletedItem = delta.deletedItem</incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_CHANGE_STARTUP_CONFIG_LOGIN</incidentType><triggerEventAttrList>phRecvTime,hostName,hostIpAddr,eventType,srcIpAddr,oldSVNVersion,newSVNVersion,addedItem,deletedItem</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Change_3" entityVersion="2" xmlId="Rule$PH_Rule_Change_3" ownerId="500150" lastModified="1387781685961" id="1386487" custId="0" creationTime="1387520460522"><activatedTime>1387781685960</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects user/group configuration in a domain controller. This rule would trigger on all changes made by any person. To prevent false positives, a restriction on the user attribute should be made by excluding the domain administrators.</description><eventFilters entityVersion="0" xmlId="EventFilter@2111942" ownerId="500150" lastModified="1387781685960" id="2111942" custId="0" creationTime="1387781685960"><groupBy>reptDevIpAddr,user,computer,domain,targetUser,targetDomain</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>DCUserGrpChange</name><singleConstraint>reptDevIpAddr IN (Group@PH_SYS_APP_DOMAIN_CONTROLLER)  AND  eventType IN ( Group@PH_SYS_EVENT_AccountChanged)</singleConstraint></eventFilters><name>Domain Controller User/Group Modification</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111942</eventFilters><incidentAttrs>
        user = DCUserGrpChange.user, computer = DCUserGrpChange.computer, domain = DCUserGrpChange.domain, targetUser = DCUserGrpChange.targetUser, targetDomain = DCUserGrpChange.targetDomain
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_CHANGE_DC_USER_GRP</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,eventType,user,computer,domain,targetUser,targetDomain</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Change_3B" entityVersion="2" xmlId="Rule$PH_Rule_Change_3B" ownerId="500150" lastModified="1387781686070" id="1386488" custId="0" creationTime="1387520460633"><activatedTime>1387781686070</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects users added to domain admin group</description><eventFilters entityVersion="0" xmlId="EventFilter@2111943" ownerId="500150" lastModified="1387781686070" id="2111943" custId="0" creationTime="1387781686070"><groupBy>user,computer,domain,targetUser,targetUserGrp,targetDomain</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>DCUserGrpChange</name><singleConstraint>reptDevIpAddr IN (Group@PH_SYS_APP_DOMAIN_CONTROLLER)  AND eventType IN (Group@PH_SYS_EVENT_GroupMemberAdded) AND targetUserGrp = "Domain Admins"</singleConstraint></eventFilters><name>User added to Domain Admin Group</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111943</eventFilters><incidentAttrs>
        user = DCUserGrpChange.user, computer = DCUserGrpChange.computer, domain = DCUserGrpChange.domain, targetUser = DCUserGrpChange.targetUser, targetDomain = DCUserGrpChange.targetDomain,targetUserGrp = DCUserGrpChange.targetUserGrp
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_ADD_DOMAIN_ADMIN</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,eventType,user,computer,domain,targetUser,targetDomain</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Change_3C" entityVersion="2" xmlId="Rule$PH_Rule_Change_3C" ownerId="500150" lastModified="1387781686179" id="1386489" custId="0" creationTime="1387520460744"><activatedTime>1387781686179</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects users deleted from domain admin group</description><eventFilters entityVersion="0" xmlId="EventFilter@2111944" ownerId="500150" lastModified="1387781686179" id="2111944" custId="0" creationTime="1387781686179"><groupBy>user,computer,domain,targetUser,targetUserGrp,targetDomain</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>DCUserGrpChange</name><singleConstraint>reptDevIpAddr IN (Group@PH_SYS_APP_DOMAIN_CONTROLLER)  AND eventType IN (Group@PH_SYS_EVENT_GroupMemberRemoved) AND targetUserGrp = "Domain Admins"</singleConstraint></eventFilters><name>User deleted from Domain Admin Group</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111944</eventFilters><incidentAttrs>
        user = DCUserGrpChange.user, computer = DCUserGrpChange.computer, domain = DCUserGrpChange.domain, targetUser = DCUserGrpChange.targetUser, targetDomain = DCUserGrpChange.targetDomain,targetUserGrp = DCUserGrpChange.targetUserGrp
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_DELETE_DOMAIN_ADMIN</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,eventType,user,computer,domain,targetUser,targetDomain,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Change_3D" entityVersion="2" xmlId="Rule$PH_Rule_Change_3D" ownerId="500150" lastModified="1387781686289" id="1386490" custId="0" creationTime="1387520460856"><activatedTime>1387781686288</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects users added to remote desktop user group</description><eventFilters entityVersion="0" xmlId="EventFilter@2111945" ownerId="500150" lastModified="1387781686288" id="2111945" custId="0" creationTime="1387781686288"><groupBy>user,computer,domain,targetUser,targetUserGrp,targetDomain</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>DCUserGrpChange</name><singleConstraint>reptDevIpAddr IN (Group@PH_SYS_DEVICE_WINDOWS_SERVER)  AND eventType IN (Group@PH_SYS_EVENT_GroupMemberAdded) AND targetUserGrp = "Remote Desktop Users"</singleConstraint></eventFilters><name>User added to Remote Desktop User Group</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111945</eventFilters><incidentAttrs>
        user = DCUserGrpChange.user, computer = DCUserGrpChange.computer, domain = DCUserGrpChange.domain, targetUser = DCUserGrpChange.targetUser, targetDomain = DCUserGrpChange.targetDomain,targetUserGrp = DCUserGrpChange.targetUserGrp
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_ADD_REMOTE_DESKTOP_USER</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,eventType,user,computer,domain,targetUser,targetDomain,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Change_3E" entityVersion="2" xmlId="Rule$PH_Rule_Change_3E" ownerId="500150" lastModified="1387781686399" id="1386491" custId="0" creationTime="1387520460969"><activatedTime>1387781686398</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects users deleted from remote desktop user group</description><eventFilters entityVersion="0" xmlId="EventFilter@2111946" ownerId="500150" lastModified="1387781686398" id="2111946" custId="0" creationTime="1387781686398"><groupBy>user,computer,domain,targetUser,targetUserGrp,targetDomain</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>DCUserGrpChange</name><singleConstraint>reptDevIpAddr IN (Group@PH_SYS_DEVICE_WINDOWS_SERVER)  AND eventType IN (Group@PH_SYS_EVENT_GroupMemberRemoved) AND targetUserGrp = "Remote Desktop Users"</singleConstraint></eventFilters><name>User deleted from Remote Desktop User Group</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111946</eventFilters><incidentAttrs>
        user = DCUserGrpChange.user, computer = DCUserGrpChange.computer, domain = DCUserGrpChange.domain, targetUser = DCUserGrpChange.targetUser, targetDomain = DCUserGrpChange.targetDomain,targetUserGrp = DCUserGrpChange.targetUserGrp
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_DELETE_REMOTE_DESKTOP_USER</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,eventType,user,computer,domain,targetUser,targetDomain,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Change_3F" entityVersion="2" xmlId="Rule$PH_Rule_Change_3F" ownerId="500150" lastModified="1387781686509" id="1386492" custId="0" creationTime="1387520461082"><activatedTime>1387781686509</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects users added to administrator group</description><eventFilters entityVersion="0" xmlId="EventFilter@2111947" ownerId="500150" lastModified="1387781686509" id="2111947" custId="0" creationTime="1387781686509"><groupBy>user,computer,domain,targetUser,targetUserGrp,targetDomain</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>DCUserGrpChange</name><singleConstraint>reptDevIpAddr IN (Group@PH_SYS_DEVICE_WINDOWS_SERVER)  AND eventType IN (Group@PH_SYS_EVENT_GroupMemberAdded) AND targetUserGrp = "Administrators"</singleConstraint></eventFilters><name>User added to Administrator Group</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111947</eventFilters><incidentAttrs>
        user = DCUserGrpChange.user, computer = DCUserGrpChange.computer, domain = DCUserGrpChange.domain, targetUser = DCUserGrpChange.targetUser, targetDomain = DCUserGrpChange.targetDomain,targetUserGrp = DCUserGrpChange.targetUserGrp
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_ADD_WIN_ADMINISTRATOR</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,eventType,user,computer,domain,targetUser,targetDomain,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Change_3G" entityVersion="2" xmlId="Rule$PH_Rule_Change_3G" ownerId="500150" lastModified="1387781686619" id="1386493" custId="0" creationTime="1387520461197"><activatedTime>1387781686619</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects users deleted from administrator group</description><eventFilters entityVersion="0" xmlId="EventFilter@2111948" ownerId="500150" lastModified="1387781686619" id="2111948" custId="0" creationTime="1387781686619"><groupBy>user,computer,domain,targetUser,targetUserGrp,targetDomain</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>DCUserGrpChange</name><singleConstraint>reptDevIpAddr IN (Group@PH_SYS_DEVICE_WINDOWS_SERVER)  AND eventType IN (Group@PH_SYS_EVENT_GroupMemberRemoved) AND targetUserGrp = "Administrator"</singleConstraint></eventFilters><name>User deleted from Administrator Group</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111948</eventFilters><incidentAttrs>
        user = DCUserGrpChange.user, computer = DCUserGrpChange.computer, domain = DCUserGrpChange.domain, targetUser = DCUserGrpChange.targetUser, targetDomain = DCUserGrpChange.targetDomain,targetUserGrp = DCUserGrpChange.targetUserGrp
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_DELETE_WIN_ADMINISTRATOR</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,eventType,user,computer,domain,targetUser,targetDomain,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Change_3H" entityVersion="2" xmlId="Rule$PH_Rule_Change_3H" ownerId="500150" lastModified="1387781686733" id="1386494" custId="0" creationTime="1387520461312"><activatedTime>1387781686732</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects users added to backup operator group</description><eventFilters entityVersion="0" xmlId="EventFilter@2111949" ownerId="500150" lastModified="1387781686732" id="2111949" custId="0" creationTime="1387781686732"><groupBy>user,computer,domain,targetUser,targetUserGrp,targetDomain</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>DCUserGrpChange</name><singleConstraint>reptDevIpAddr IN (Group@PH_SYS_DEVICE_WINDOWS_SERVER)  AND eventType IN (Group@PH_SYS_EVENT_GroupMemberAdded) AND targetUserGrp = "Backup Operators"</singleConstraint></eventFilters><name>User added to Backup Operator Group</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111949</eventFilters><incidentAttrs>
        user = DCUserGrpChange.user, computer = DCUserGrpChange.computer, domain = DCUserGrpChange.domain, targetUser = DCUserGrpChange.targetUser, targetDomain = DCUserGrpChange.targetDomain,targetUserGrp = DCUserGrpChange.targetUserGrp
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_ADD_BACKUP_OPERATOR</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,eventType,user,computer,domain,targetUser,targetDomain,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Change_3I" entityVersion="2" xmlId="Rule$PH_Rule_Change_3I" ownerId="500150" lastModified="1387781686844" id="1386495" custId="0" creationTime="1387520461430"><activatedTime>1387781686844</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects users deleted from backup operator group</description><eventFilters entityVersion="0" xmlId="EventFilter@2111950" ownerId="500150" lastModified="1387781686843" id="2111950" custId="0" creationTime="1387781686843"><groupBy>user,computer,domain,targetUser,targetUserGrp,targetDomain</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>DCUserGrpChange</name><singleConstraint>reptDevIpAddr IN (Group@PH_SYS_DEVICE_WINDOWS_SERVER)  AND eventType IN (Group@PH_SYS_EVENT_GroupMemberRemoved) AND targetUserGrp = "Backup Operators"</singleConstraint></eventFilters><name>User deleted from Backup Operator Group</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111950</eventFilters><incidentAttrs>
        user = DCUserGrpChange.user, computer = DCUserGrpChange.computer, domain = DCUserGrpChange.domain, targetUser = DCUserGrpChange.targetUser, targetDomain = DCUserGrpChange.targetDomain,targetUserGrp = DCUserGrpChange.targetUserGrp
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_DELETE_BACKUP_OPERATOR</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,eventType,user,computer,domain,targetUser,targetDomain,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Change_3J" entityVersion="2" xmlId="Rule$PH_Rule_Change_3J" ownerId="500150" lastModified="1387781686982" id="1386496" custId="0" creationTime="1387520461545"><activatedTime>1387781686982</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects users added to DNS Admin group</description><eventFilters entityVersion="0" xmlId="EventFilter@2111951" ownerId="500150" lastModified="1387781686981" id="2111951" custId="0" creationTime="1387781686981"><groupBy>user,computer,domain,targetUser,targetUserGrp,targetDomain</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>DCUserGrpChange</name><singleConstraint>reptDevIpAddr IN (Group@PH_SYS_APP_DOMAIN_CONTROLLER)  AND eventType IN (Group@PH_SYS_EVENT_GroupMemberAdded) AND targetUserGrp = "DnsAdmins"</singleConstraint></eventFilters><name>User added to DNS Admin Group</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111951</eventFilters><incidentAttrs>
        user = DCUserGrpChange.user, computer = DCUserGrpChange.computer, domain = DCUserGrpChange.domain, targetUser = DCUserGrpChange.targetUser, targetDomain = DCUserGrpChange.targetDomain,targetUserGrp = DCUserGrpChange.targetUserGrp
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_ADD_DNS_ADMIN</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,eventType,user,computer,domain,targetUser,targetDomain,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Change_3K" entityVersion="2" xmlId="Rule$PH_Rule_Change_3K" ownerId="500150" lastModified="1387781687093" id="1386497" custId="0" creationTime="1387520461660"><activatedTime>1387781687093</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects users deleted from backup operator group</description><eventFilters entityVersion="0" xmlId="EventFilter@2111952" ownerId="500150" lastModified="1387781687093" id="2111952" custId="0" creationTime="1387781687093"><groupBy>user,computer,domain,targetUser,targetUserGrp,targetDomain</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>DCUserGrpChange</name><singleConstraint>reptDevIpAddr IN (Group@PH_SYS_APP_DOMAIN_CONTROLLER)  AND eventType IN (Group@PH_SYS_EVENT_GroupMemberRemoved) AND targetUserGrp = "DnsAdmins"</singleConstraint></eventFilters><name>User deleted from DNS Admins Group</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111952</eventFilters><incidentAttrs>
        user = DCUserGrpChange.user, computer = DCUserGrpChange.computer, domain = DCUserGrpChange.domain, targetUser = DCUserGrpChange.targetUser, targetDomain = DCUserGrpChange.targetDomain,targetUserGrp = DCUserGrpChange.targetUserGrp
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_DELETE_DNS_ADMIN</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,eventType,user,computer,domain,targetUser,targetDomain,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Change_4" entityVersion="2" xmlId="Rule$PH_Rule_Change_4" ownerId="500150" lastModified="1387781687204" id="1386498" custId="0" creationTime="1387520461774"><activatedTime>1387781687203</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that the configuration of a network device (router or firewall) has changed. This is achieved via logging in and keeping track of the last config. The IP address of the user likely to have executed the change, is obtained from a preceding syslog that indicates a prior login. This rule requires the network devices to forward syslog to the monitoring system.</description><eventFilters entityVersion="0" xmlId="EventFilter@2111953" ownerId="500150" lastModified="1387781687203" id="2111953" custId="0" creationTime="1387781687203"><groupBy>reptDevIpAddr ,srcIpAddr</groupBy><groupConstraint>COUNT (*) &gt;= 1</groupConstraint><index>0</index><name>loginOrChangeEvent</name><singleConstraint>eventType = "IOS-SYS-CONFIG_I"  OR  eventType = "ASA-605005" OR eventType = "Foundry-Ironware-Running-Config-Change"</singleConstraint></eventFilters><eventFilters entityVersion="0" xmlId="EventFilter@2111954" ownerId="500150" lastModified="1387781687203" id="2111954" custId="0" creationTime="1387781687203"><groupBy>hostIpAddr ,hostName ,addedItem ,deletedItem</groupBy><groupConstraint>COUNT (*) &gt;= 1</groupConstraint><index>1</index><name>delta</name><singleConstraint>eventType = "PH_DEV_MON_CHANGE_RUN_CONFIG"</singleConstraint></eventFilters><filterOperators><rank>0</rank><type>FOLLOWED_BY</type></filterOperators><globalConstraint>loginOrChangeEvent.reptDevIpAddr = delta.hostIpAddr</globalConstraint><name>Running Config Change (with login info)</name><rawFOString>FOLLOWED_BY:0</rawFOString><triggerWindow>1800</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111953</eventFilters><eventFilters>EventFilter@2111954</eventFilters><incidentAttrs>srcIpAddr = loginOrChangeEvent.srcIpAddr, hostIpAddr = delta.hostIpAddr, hostName = delta.hostName, addedItem = delta.addedItem, deletedItem = delta.deletedItem</incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_CHANGE_RUN_CONFIG_LOGIN</incidentType><triggerEventAttrList>phRecvTime,hostName,hostIpAddr,eventType,srcIpAddr,oldSVNVersion,newSVNVersion,addedItem,deletedItem</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Change_5" entityVersion="2" xmlId="Rule$PH_Rule_Change_5" ownerId="500150" lastModified="1387781687315" id="1386499" custId="0" creationTime="1387520461892"><activatedTime>1387781687315</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that the configuration of a network device (router or firewall) has changed. This is achieved via logging in and keeping track of the last change</description><eventFilters entityVersion="0" xmlId="EventFilter@2111955" ownerId="500150" lastModified="1387781687315" id="2111955" custId="0" creationTime="1387781687315"><groupBy>hostIpAddr ,hostName ,addedItem ,deletedItem</groupBy><groupConstraint>COUNT ( * )&gt;= 1</groupConstraint><index>0</index><name>delta</name><singleConstraint>eventType = "PH_DEV_MON_CHANGE_STARTUP_CONFIG"</singleConstraint></eventFilters><name>Startup Config Change</name><triggerWindow>1800</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111955</eventFilters><incidentAttrs>hostIpAddr = delta.hostIpAddr, hostName = delta.hostName, addedItem = delta.addedItem, deletedItem = delta.deletedItem</incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_CHANGE_STARTUP_CONFIG</incidentType><triggerEventAttrList>phRecvTime,hostName,hostIpAddr,eventType,oldSVNVersion,newSVNVersion,addedItem,deletedItem</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Change_6" entityVersion="2" xmlId="Rule$PH_Rule_Change_6" ownerId="500150" lastModified="1387781687450" id="1386650" custId="0" creationTime="1387520462049"><activatedTime>1387781687450</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that the configuration of a network device (router or firewall) has changed.  This is achieved via logging in and keeping track of the last change</description><eventFilters entityVersion="0" xmlId="EventFilter@2111956" ownerId="500150" lastModified="1387781687450" id="2111956" custId="0" creationTime="1387781687450"><groupBy>hostIpAddr ,hostName ,addedItem ,deletedItem</groupBy><groupConstraint>COUNT ( * )&gt;= 1</groupConstraint><index>0</index><name>delta</name><singleConstraint>eventType = "PH_DEV_MON_CHANGE_RUN_CONFIG"</singleConstraint></eventFilters><name>Running Config Change</name><triggerWindow>1800</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111956</eventFilters><incidentAttrs>hostIpAddr = delta.hostIpAddr, hostName = delta.hostName, addedItem = delta.addedItem, deletedItem = delta.deletedItem</incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>true</incidentFired><incidentType>EventType$PH_RULE_CHANGE_RUN_CONFIG</incidentType><triggerEventAttrList>phRecvTime,hostName,hostIpAddr,eventType,oldSVNVersion,newSVNVersion,addedItem,deletedItem</triggerEventAttrList></rule><rule phIncidentCategory="Server" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Change_7" entityVersion="2" xmlId="Rule$PH_Rule_Change_7" ownerId="500150" lastModified="1387781687561" id="1386651" custId="0" creationTime="1387520462217"><activatedTime>1387781687561</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that a new software has been installed on a server or an existing software has been deleted.</description><eventFilters entityVersion="0" xmlId="EventFilter@2111957" ownerId="500150" lastModified="1387781687561" id="2111957" custId="0" creationTime="1387781687561"><groupBy>hostIpAddr,hostName,addedItem ,deletedItem</groupBy><groupConstraint>COUNT ( * )&gt;= 1</groupConstraint><index>0</index><name>delta</name><singleConstraint>eventType = "PH_DEV_MON_CHANGE_INST_SW"</singleConstraint></eventFilters><name>Server Installed Software Change</name><triggerWindow>1800</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111957</eventFilters><incidentAttrs>hostIpAddr = delta.hostIpAddr, hostName = delta.hostName, addedItem = delta.addedItem, deletedItem = delta.deletedItem</incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_CHANGE_INST_SW</incidentType><triggerEventAttrList>phRecvTime,hostName,hostIpAddr,eventType,oldSVNVersion,newSVNVersion,addedItem,deletedItem</triggerEventAttrList></rule><rule phIncidentCategory="Server" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Change_8" entityVersion="2" xmlId="Rule$PH_Rule_Change_8" ownerId="500150" lastModified="1387781687673" id="1386652" custId="0" creationTime="1387520462338"><activatedTime>1387781687672</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that a user modified either the content or the attributes of a file or directory</description><eventFilters entityVersion="0" xmlId="EventFilter@2111958" ownerId="500150" lastModified="1387781687672" id="2111958" custId="0" creationTime="1387781687672"><groupBy>reptDevIpAddr,user,osObjType,osObjAction,osObjName,targetOsObjType,targetOsObjName</groupBy><groupConstraint>COUNT (*) &gt;= 1</groupConstraint><index>0</index><name>FileChange</name><singleConstraint>eventType = "LINUX_FILE_CHANGE"</singleConstraint></eventFilters><name>Linux file change</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111958</eventFilters><incidentAttrs>
        hostIpAddr = FileChange.reptDevIpAddr, user = FileChange.user, osObjType = FileChange.osObjType, osObjAction = FileChange.osObjAction, osObjName = FileChange.osObjName, targetOsObjType =FileChange.targetOsObjType, targetOsObjName = FileChange.targetOsObjName 
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_LINUX_FILE_CHANGE</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,user,osObjType,osObjAction,osObjName,targetOsObjType,targetOsObjName</triggerEventAttrList></rule><rule phIncidentCategory="Server" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Change_9" entityVersion="2" xmlId="Rule$PH_Rule_Change_9" ownerId="500150" lastModified="1387781687785" id="1386653" custId="0" creationTime="1387520462439"><activatedTime>1387781687784</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that a user failed to modify either the content or the attributes of a file or directory</description><eventFilters entityVersion="0" xmlId="EventFilter@2111959" ownerId="500150" lastModified="1387781687784" id="2111959" custId="0" creationTime="1387781687784"><groupBy>user,domain,osObjName,reptDevIpAddr</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>FileAccessFailure</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_FileChange)  AND  reptDevIpAddr IN (Group@PH_SYS_DEVICE_WINDOWS_SERVER)  AND  eventAction = 1 AND user NOT CONTAIN "$"</singleConstraint></eventFilters><name>Windows failed file access</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111959</eventFilters><incidentAttrs>
        reptDevIpAddr = FileAccessFailure.reptDevIpAddr, user = FileAccessFailure.user, domain = FileAccessFailure.domain, osObjName = FileAccessFailure.osObjName 
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_WINDOWS_FAILED_FILE_ACCESS</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,user,domain,osObjType,osObjAction,osObjName,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Server" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Change_10" entityVersion="1" xmlId="Rule$PH_Rule_Change_10" ownerId="500150" lastModified="1387781687897" id="1386654" custId="0" creationTime="1387520462538"><active>false</active><custInclusive>true</custInclusive><description>Detects that a user successfully modified either the content or the attributes of a file or directory</description><eventFilters entityVersion="0" xmlId="EventFilter@2111960" ownerId="500150" lastModified="1387781687896" id="2111960" custId="0" creationTime="1387781687896"><groupBy>user,domain,osObjName,reptDevIpAddr</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>FileAccessSuccess</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_FileChange)  AND  reptDevIpAddr IN (Group@PH_SYS_DEVICE_WINDOWS_SERVER) AND  eventAction = 0 AND user NOT CONTAIN "$"</singleConstraint></eventFilters><name>Windows successful file access</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111960</eventFilters><incidentAttrs>
        reptDevIpAddr = FileAccessSuccess.reptDevIpAddr, user = FileAccessSuccess.user, domain = FileAccessSuccess.domain, osObjName = FileAccessSuccess.osObjName 
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_WINDOWS_SUCCESS_FILE_ACCESS</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,user,domain,osObjType,osObjAction,osObjName,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Change_11" entityVersion="2" xmlId="Rule$PH_Rule_Change_11" ownerId="500150" lastModified="1387781688009" id="1386655" custId="0" creationTime="1387520462637"><activatedTime>1387781688008</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that an user successfully installed a policy on a Checkpoint Firewall</description><eventFilters entityVersion="0" xmlId="EventFilter@2111961" ownerId="500150" lastModified="1387781688008" id="2111961" custId="0" creationTime="1387781688008"><groupBy>reptDevIpAddr,user,srcName,policyName</groupBy><groupConstraint>COUNT ( * )&gt;= 1</groupConstraint><index>0</index><name>delta</name><singleConstraint>eventType = "CheckPoint-InstallPolicy-Success"</singleConstraint></eventFilters><name>Successful Checkpoint Firewall Policy Install</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111961</eventFilters><incidentAttrs>destIpAddr = delta.reptDevIpAddr, srcName = delta.srcName, user = delta.user, policyName = delta.policyName </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_CHKP_FW_INSTALL_SUCCESS</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,eventAction,user,srcName,policyName,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Change_12" entityVersion="2" xmlId="Rule$PH_Rule_Change_12" ownerId="500150" lastModified="1387781688122" id="1386656" custId="0" creationTime="1387520462737"><activatedTime>1387781688121</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that an user failed to install a policy on a Checkpoint Firewall</description><eventFilters entityVersion="0" xmlId="EventFilter@2111962" ownerId="500150" lastModified="1387781688121" id="2111962" custId="0" creationTime="1387781688121"><groupBy>reptDevIpAddr,user,srcName,policyName</groupBy><groupConstraint>COUNT ( * )&gt;= 1</groupConstraint><index>0</index><name>delta</name><singleConstraint>eventType = "CheckPoint-InstallPolicy-Failure"</singleConstraint></eventFilters><name>Failed Checkpoint Firewall Policy Install</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111962</eventFilters><incidentAttrs>destIpAddr = delta.reptDevIpAddr, srcName = delta.srcName, user = delta.user, policyName = delta.policyName </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_CHKP_FW_INSTALL_FAILURE</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,eventAction,user,srcName,policyName,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Server" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Change_13" entityVersion="2" xmlId="Rule$PH_Rule_Change_13" ownerId="500150" lastModified="1387781688235" id="1386657" custId="0" creationTime="1387520462837"><activatedTime>1387781688234</activatedTime><active>true</active><custInclusive>true</custInclusive><description>A system user is created</description><eventFilters entityVersion="0" xmlId="EventFilter@2111963" ownerId="500150" lastModified="1387781688234" id="2111963" custId="0" creationTime="1387781688234"><groupBy>user,domain,targetUser,targetDomain</groupBy><groupConstraint>COUNT (*)&gt;= 1</groupConstraint><index>0</index><name>Created</name><singleConstraint>eventType = "PH_AUDIT_USER_ADDED"</singleConstraint></eventFilters><name>System User Created</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111963</eventFilters><incidentAttrs>user = Created.user, domain = Created.domain,targetUser = Created.targetUser, targetDomain = Created.targetDomain </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>true</incidentFired><incidentType>EventType$PH_RULE_SYS_USER_CREATED</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,user,domain,targetUser,targetDomain,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_1" entityVersion="2" xmlId="Rule$PH_Rule_Access_1" ownerId="500150" lastModified="1387781688771" id="1386658" custId="0" creationTime="1387520463302"><activatedTime>1387781688771</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects multiple logon failures at a network device - 5 consecutive failures in a 10 minute period. This rule triggers for network devices that do not report a source IP address.</description><eventFilters entityVersion="0" xmlId="EventFilter@2111964" ownerId="500150" lastModified="1387781688770" id="2111964" custId="0" creationTime="1387781688770"><groupBy>reptDevIpAddr, user</groupBy><groupConstraint>COUNT (*) &gt;= 5</groupConstraint><index>0</index><name>ExcessNetLoginFailure</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_HostLogonFailure) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_Network) AND srcIpAddr IS NULL</singleConstraint></eventFilters><name>Multiple Admin Login Failures: Net Device (no Source IP)</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111964</eventFilters><incidentAttrs>
        destIpAddr = ExcessNetLoginFailure.reptDevIpAddr, user = ExcessNetLoginFailure.user, incidentCount = ExcessNetLoginFailure.COUNT(*)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_EXCESS_FAILED_LOGON_NET_DEV</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,user,destIpPort,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_2" entityVersion="2" xmlId="Rule$PH_Rule_Access_2" ownerId="500150" lastModified="1387781688880" id="1386659" custId="0" creationTime="1387520463414"><activatedTime>1387781688880</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects excessive logon failures at a network device - 5 consecutive failures in a 10 minute period. This rule triggers for network devices that report a source IP address.</description><eventFilters entityVersion="0" xmlId="EventFilter@2111965" ownerId="500150" lastModified="1387781688880" id="2111965" custId="0" creationTime="1387781688880"><groupBy>srcIpAddr, reptDevIpAddr, user</groupBy><groupConstraint>COUNT (*) &gt;= 5</groupConstraint><index>0</index><name>ExcessNetLoginFailure</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_HostLogonFailure) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_Network) AND srcIpAddr IS NOT NULL</singleConstraint></eventFilters><name>Multiple Admin Login Failures: Net Device</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111965</eventFilters><incidentAttrs>
        srcIpAddr = ExcessNetLoginFailure.srcIpAddr, destIpAddr = ExcessNetLoginFailure.reptDevIpAddr, user = ExcessNetLoginFailure.user, incidentCount = ExcessNetLoginFailure.COUNT(*)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_EXCESS_FAILED_LOGON_2_NET_DEV</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,srcIpAddr,user,destIpPort,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_3" entityVersion="1" xmlId="Rule$PH_Rule_Access_3" ownerId="500150" lastModified="1387781688995" id="1386660" custId="0" creationTime="1387520463525"><active>false</active><custInclusive>true</custInclusive><description>Detects repeating occurrences of multiple logon failures at a network device</description><eventFilters entityVersion="0" xmlId="EventFilter@2111966" ownerId="500150" lastModified="1387781688994" id="2111966" custId="0" creationTime="1387781688994"><groupBy>srcIpAddr,eventType,destIpAddr</groupBy><groupConstraint>COUNT (*) &gt;= 3</groupConstraint><index>0</index><name>RepeatExcessNetLoginFailure</name><singleConstraint>eventType = "PH_RULE_EXCESS_FAILED_LOGON_2_NET_DEV"</singleConstraint></eventFilters><name>Repeated Admin Multiple Login Failures: Net Device</name><triggerWindow>86400</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111966</eventFilters><incidentAttrs>
        srcIpAddr = RepeatExcessNetLoginFailure.srcIpAddr, destIpAddr = RepeatExcessNetLoginFailure.destIpAddr, incidentCount =RepeatExcessNetLoginFailure.COUNT(*)  
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_REPEAT_EXCESS_FAILED_LOGON_2_NET_DEV</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,srcIpAddr,destIpAddr,user,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Server" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_5" entityVersion="2" xmlId="Rule$PH_Rule_Access_5" ownerId="500150" lastModified="1387781689402" id="1386661" custId="0" creationTime="1387520463637"><activatedTime>1387781689402</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects excessive logon failures at a server - 5 consecutive failures in a 10 minute period</description><eventFilters entityVersion="0" xmlId="EventFilter@2111967" ownerId="500150" lastModified="1387781689402" id="2111967" custId="0" creationTime="1387781689402"><groupBy>srcIpAddr, reptDevIpAddr, user</groupBy><groupConstraint>COUNT (*) &gt;= 5</groupConstraint><index>0</index><name>ExcessServerLoginFailure</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_HostLogonFailure) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_Server) AND reptDevIpAddr NOT IN (Group@PH_SYS_APP_DOMAIN_CONTROLLER)</singleConstraint></eventFilters><name>Multiple Logon Failures: Server</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111967</eventFilters><incidentAttrs>
        srcIpAddr = ExcessServerLoginFailure.srcIpAddr, destIpAddr = ExcessServerLoginFailure.reptDevIpAddr, user = ExcessServerLoginFailure.user, incidentCount = ExcessServerLoginFailure.COUNT(*)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_EXCESS_FAILED_LOGON_SERVER</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,srcIpAddr,user,destIpPort,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Server" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_6" entityVersion="1" xmlId="Rule$PH_Rule_Access_6" ownerId="500150" lastModified="1387781689510" id="1386662" custId="0" creationTime="1387520463748"><active>false</active><custInclusive>true</custInclusive><description>Detects repeating occurrences of multiple logon failures at a server from the same user.</description><eventFilters entityVersion="0" xmlId="EventFilter@2111968" ownerId="500150" lastModified="1387781689509" id="2111968" custId="0" creationTime="1387781689509"><groupBy>srcIpAddr,eventType,destIpAddr</groupBy><groupConstraint>COUNT (*) &gt;= 3</groupConstraint><index>0</index><name>RepeatExcessServerLoginFailure</name><singleConstraint>eventType = "PH_RULE_EXCESS_FAILED_LOGON_SERVER"</singleConstraint></eventFilters><name>Repeated Multiple Logon Failures: Server</name><triggerWindow>86400</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111968</eventFilters><incidentAttrs>
        srcIpAddr = RepeatExcessServerLoginFailure.srcIpAddr, destIpAddr = RepeatExcessServerLoginFailure.destIpAddr, incidentCount = RepeatExcessServerLoginFailure.COUNT(*)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_REPEAT_EXCESS_FAILED_LOGON_SERVER</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,srcIpAddr,destIpAddr,user,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Server" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_10" entityVersion="2" xmlId="Rule$PH_Rule_Access_10" ownerId="500150" lastModified="1387781689619" id="1386663" custId="0" creationTime="1387520463858"><activatedTime>1387781689619</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects excessive privileged logon failures at a server - 3 consecutive failures in a 10 minute period</description><eventFilters entityVersion="0" xmlId="EventFilter@2111969" ownerId="500150" lastModified="1387781689619" id="2111969" custId="0" creationTime="1387781689619"><groupBy>reptDevIpAddr, user</groupBy><groupConstraint>COUNT (*) &gt;= 1</groupConstraint><index>0</index><name>ExcessPrivLoginFailure</name><singleConstraint>(eventType IN (Group@PH_SYS_EVENT_HostPrivLogonFailure) OR (eventType IN ("PH_RULE_EXCESS_FAILED_LOGON_SERVER","PH_RULE_EXCESS_FAILED_LOGON_DOMAIN") AND user CONTAIN "Admin")) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_Server)</singleConstraint></eventFilters><name>Multiple Privileged Logon Failures: Server</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111969</eventFilters><incidentAttrs>
        destIpAddr = ExcessPrivLoginFailure.reptDevIpAddr, user = ExcessPrivLoginFailure.user, incidentCount = ExcessPrivLoginFailure.COUNT(*)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_EXCESS_FAILED_PRIV_LOGON_SERVER</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,user,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_15A" entityVersion="2" xmlId="Rule$PH_Rule_Access_15A" ownerId="500150" lastModified="1387781689729" id="1386664" custId="0" creationTime="1387520463969"><activatedTime>1387781689729</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects excessive application logon failures - 5 consecutive failures in a 10 minute period. Application logsons include the one that may require authentication for accessing the authentication, such as HTTP, SNMP, FTP, POP3, IMAP etc.</description><eventFilters entityVersion="0" xmlId="EventFilter@2111970" ownerId="500150" lastModified="1387781689729" id="2111970" custId="0" creationTime="1387781689729"><groupBy>srcIpAddr, reptDevIpAddr, user</groupBy><groupConstraint>COUNT (*) &gt;= 5</groupConstraint><index>0</index><name>ExcessWebLoginFailure</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_WebLogonFailure)</singleConstraint></eventFilters><name>Multiple Logon Failures: Web Server</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111970</eventFilters><incidentAttrs>
        srcIpAddr = ExcessWebLoginFailure.srcIpAddr, destIpAddr = ExcessWebLoginFailure.reptDevIpAddr, user = ExcessWebLoginFailure.user, incidentCount = ExcessWebLoginFailure.COUNT(*)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_EXCESS_FAILED_LOGON_WEB</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,srcIpAddr,user,destIpPort,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_16A" entityVersion="1" xmlId="Rule$PH_Rule_Access_16A" ownerId="500150" lastModified="1387781689838" id="1386665" custId="0" creationTime="1387520464080"><active>false</active><custInclusive>true</custInclusive><description>Detects repeating occurrences of multiple application logon failures</description><eventFilters entityVersion="0" xmlId="EventFilter@2111971" ownerId="500150" lastModified="1387781689838" id="2111971" custId="0" creationTime="1387781689838"><groupBy>srcIpAddr,eventType,destIpAddr</groupBy><groupConstraint>COUNT (*) &gt;= 3</groupConstraint><index>0</index><name>Filter_Rule_Access_16_1</name><singleConstraint>eventType = "PH_RULE_EXCESS_FAILED_LOGON_APPL"</singleConstraint></eventFilters><name>Repeated Multiple Logon Failures: Web Server</name><triggerWindow>86400</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111971</eventFilters><incidentAttrs>
        srcIpAddr = Filter_Rule_Access_16_1.srcIpAddr, destIpAddr = Filter_Rule_Access_16_1.destIpAddr, incidentCount = Filter_Rule_Access_16_1.COUNT(*)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_REPEAT_EXCESS_FAILED_LOGON_WEB</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,srcIpAddr,destIpAddr,user,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_15B" entityVersion="2" xmlId="Rule$PH_Rule_Access_15B" ownerId="500150" lastModified="1387781689949" id="1386666" custId="0" creationTime="1387520464193"><activatedTime>1387781689949</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects excessive application logon failures - 5 consecutive failures in a 10 minute period. Application logsons include the one that may require authentication for accessing the authentication, such as HTTP, SNMP, FTP, POP3, IMAP etc.</description><eventFilters entityVersion="0" xmlId="EventFilter@2111972" ownerId="500150" lastModified="1387781689948" id="2111972" custId="0" creationTime="1387781689948"><groupBy>srcIpAddr, reptDevIpAddr, user</groupBy><groupConstraint>COUNT (*) &gt;= 5</groupConstraint><index>0</index><name>ExcessDBLoginFailure1</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_DBLogonFailure)</singleConstraint></eventFilters><eventFilters entityVersion="0" xmlId="EventFilter@2111973" ownerId="500150" lastModified="1387781689948" id="2111973" custId="0" creationTime="1387781689948"><groupBy>srcName, reptDevIpAddr, user</groupBy><groupConstraint>COUNT (*) &gt;= 5</groupConstraint><index>1</index><name>ExcessDBLoginFailure2</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_DBLogonFailure)</singleConstraint></eventFilters><filterOperators><rank>0</rank><type>OR</type></filterOperators><name>Multiple Logon Failures: Database</name><rawFOString>OR:0</rawFOString><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111972</eventFilters><eventFilters>EventFilter@2111973</eventFilters><incidentAttrs>
        srcIpAddr = ExcessDBLoginFailure1.srcIpAddr, srcName = ExcessDBLoginFailure2.srcName, destIpAddr = ExcessDBLoginFailure1.reptDevIpAddr, user = ExcessDBLoginFailure1.user, incidentCount = ExcessDBLoginFailure1.COUNT(*)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_EXCESS_FAILED_LOGON_DB</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,srcIpAddr,srcName,user,destIpPort,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_16B" entityVersion="1" xmlId="Rule$PH_Rule_Access_16B" ownerId="500150" lastModified="1387781690059" id="1386667" custId="0" creationTime="1387520464306"><active>false</active><custInclusive>true</custInclusive><description>Detects repeating occurrences of multiple application logon failures</description><eventFilters entityVersion="0" xmlId="EventFilter@2111974" ownerId="500150" lastModified="1387781690058" id="2111974" custId="0" creationTime="1387781690058"><groupBy>srcIpAddr,eventType,destIpAddr</groupBy><groupConstraint>COUNT (*) &gt;= 3</groupConstraint><index>0</index><name>Filter_Rule_Access_16_1</name><singleConstraint>eventType = "PH_RULE_EXCESS_FAILED_LOGON_DB"</singleConstraint></eventFilters><eventFilters entityVersion="0" xmlId="EventFilter@2111975" ownerId="500150" lastModified="1387781690058" id="2111975" custId="0" creationTime="1387781690058"><groupBy>srcName,eventType,destIpAddr</groupBy><groupConstraint>COUNT (*) &gt;= 3</groupConstraint><index>1</index><name>Filter_Rule_Access_16_2</name><singleConstraint>eventType = "PH_RULE_EXCESS_FAILED_LOGON_DB"</singleConstraint></eventFilters><filterOperators><rank>0</rank><type>OR</type></filterOperators><name>Repeated Multiple Logon Failures: Database</name><rawFOString>OR:0</rawFOString><triggerWindow>86400</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111974</eventFilters><eventFilters>EventFilter@2111975</eventFilters><incidentAttrs>
        srcIpAddr = Filter_Rule_Access_16_1.srcIpAddr, srcName = Filter_Rule_Access_16_2.srcName, destIpAddr = Filter_Rule_Access_16_1.destIpAddr, incidentCount = Filter_Rule_Access_16_1.COUNT(*)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_REPEAT_EXCESS_FAILED_LOGON_DB</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,srcIpAddr,srcName,destIpAddr,user,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_15C" entityVersion="2" xmlId="Rule$PH_Rule_Access_15C" ownerId="500150" lastModified="1387781690170" id="1386668" custId="0" creationTime="1387520464422"><activatedTime>1387781690169</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects excessive application logon failures - 5 consecutive failures in a 10 minute period. Application logsons include the one that may require authentication for accessing the authentication, such as HTTP, SNMP, FTP, POP3, IMAP etc.</description><eventFilters entityVersion="0" xmlId="EventFilter@2111976" ownerId="500150" lastModified="1387781690169" id="2111976" custId="0" creationTime="1387781690169"><groupBy>srcIpAddr, reptDevIpAddr, user</groupBy><groupConstraint>COUNT (*) &gt;= 5</groupConstraint><index>0</index><name>ExcessMiscAppLoginFailure1</name><singleConstraint>srcIpAddr IS NOT NULL AND eventType IN (Group@PH_SYS_EVENT_AppLogonFailure) AND eventType NOT IN (Group@PH_SYS_EVENT_AAALogonFailure)</singleConstraint></eventFilters><eventFilters entityVersion="0" xmlId="EventFilter@2111977" ownerId="500150" lastModified="1387781690169" id="2111977" custId="0" creationTime="1387781690169"><groupBy>reptDevIpAddr, user</groupBy><groupConstraint>COUNT (*) &gt;= 5</groupConstraint><index>1</index><name>ExcessMiscAppLoginFailure2</name><singleConstraint>srcIpAddr IS NULL AND eventType IN (Group@PH_SYS_EVENT_AppLogonFailure) AND eventType NOT IN (Group@PH_SYS_EVENT_AAALogonFailure)</singleConstraint></eventFilters><filterOperators><rank>0</rank><type>OR</type></filterOperators><name>Multiple Logon Failures: Misc App</name><rawFOString>OR:0</rawFOString><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111976</eventFilters><eventFilters>EventFilter@2111977</eventFilters><incidentAttrs>
        srcIpAddr = ExcessMiscAppLoginFailure1.srcIpAddr, destIpAddr = ExcessMiscAppLoginFailure1.reptDevIpAddr, user = ExcessMiscAppLoginFailure1.user, incidentCount = ExcessMiscAppLoginFailure1.COUNT(*), destIpAddr = ExcessMiscAppLoginFailure2.reptDevIpAddr, user = ExcessMiscAppLoginFailure2.user, incidentCount = ExcessMiscAppLoginFailure2.COUNT(*)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_EXCESS_FAILED_LOGON_APPL</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,srcIpAddr,user,destIpPort,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_16C" entityVersion="1" xmlId="Rule$PH_Rule_Access_16C" ownerId="500150" lastModified="1387781690322" id="1386669" custId="0" creationTime="1387520464538"><active>false</active><custInclusive>true</custInclusive><description>Detects repeating occurrences of multiple application logon failures</description><eventFilters entityVersion="0" xmlId="EventFilter@2111978" ownerId="500150" lastModified="1387781690321" id="2111978" custId="0" creationTime="1387781690321"><groupBy>srcIpAddr,eventType,destIpAddr</groupBy><groupConstraint>COUNT (*) &gt;= 3</groupConstraint><index>0</index><name>RepeatExcessMiscAppLoginFailure1</name><singleConstraint>srcIpAddr IS NOT NULL AND eventType = "PH_RULE_EXCESS_FAILED_LOGON_APPL"</singleConstraint></eventFilters><eventFilters entityVersion="0" xmlId="EventFilter@2111979" ownerId="500150" lastModified="1387781690322" id="2111979" custId="0" creationTime="1387781690322"><groupBy>eventType,destIpAddr</groupBy><groupConstraint>COUNT (*) &gt;= 3</groupConstraint><index>1</index><name>RepeatExcessMiscAppLoginFailure2</name><singleConstraint>srcIpAddr IS NULL AND eventType = "PH_RULE_EXCESS_FAILED_LOGON_APPL"</singleConstraint></eventFilters><filterOperators><rank>0</rank><type>OR</type></filterOperators><name>Repeated Multiple Logon Failures: Misc App</name><rawFOString>OR:0</rawFOString><triggerWindow>86400</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111978</eventFilters><eventFilters>EventFilter@2111979</eventFilters><incidentAttrs>
        srcIpAddr = RepeatExcessMiscAppLoginFailure1.srcIpAddr, destIpAddr = RepeatExcessMiscAppLoginFailure1.destIpAddr, incidentCount = RepeatExcessMiscAppLoginFailure1.COUNT(*), destIpAddr = RepeatExcessMiscAppLoginFailure2.destIpAddr, incidentCount = RepeatExcessMiscAppLoginFailure2.COUNT(*)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_REPEAT_EXCESS_FAILED_LOGON_APPL</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,srcIpAddr,destIpAddr,user,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_20" entityVersion="2" xmlId="Rule$PH_Rule_Access_20" ownerId="500150" lastModified="1387781690435" id="1386670" custId="0" creationTime="1387520464652"><activatedTime>1387781690435</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects multiple domain logon failures - 5 consecutive failures in a 10 minute period</description><eventFilters entityVersion="0" xmlId="EventFilter@2111980" ownerId="500150" lastModified="1387781690435" id="2111980" custId="0" creationTime="1387781690435"><groupBy>srcIpAddr, reptDevIpAddr, user, domain</groupBy><groupConstraint>COUNT (*) &gt;= 5</groupConstraint><index>0</index><name>ExcessDomainLoginFailure</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_DomainLogonFailure) AND reptDevIpAddr IN (Group@PH_SYS_APP_DOMAIN_CONTROLLER)</singleConstraint></eventFilters><name>Multiple Logon Failures: Domain</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111980</eventFilters><incidentAttrs>
        srcIpAddr = ExcessDomainLoginFailure.srcIpAddr, destIpAddr = ExcessDomainLoginFailure.reptDevIpAddr, domain = ExcessDomainLoginFailure.domain, user = ExcessDomainLoginFailure.user, incidentCount = ExcessDomainLoginFailure.COUNT(*)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_EXCESS_FAILED_LOGON_DOMAIN</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,srcIpAddr,user,computer,winLogonType,winLogonFailCode,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_21" entityVersion="1" xmlId="Rule$PH_Rule_Access_21" ownerId="500150" lastModified="1387781690545" id="1386671" custId="0" creationTime="1387520464768"><active>false</active><custInclusive>true</custInclusive><description>Detects repeating occurrences of multiple domain logon failures</description><eventFilters entityVersion="0" xmlId="EventFilter@2111981" ownerId="500150" lastModified="1387781690544" id="2111981" custId="0" creationTime="1387781690544"><groupBy>srcIpAddr,eventType,destIpAddr</groupBy><groupConstraint>COUNT (*) &gt;= 3</groupConstraint><index>0</index><name>RepeatExcessDomainLoginFailure</name><singleConstraint>eventType = "PH_RULE_EXCESS_FAILED_LOGON_DOMAIN"</singleConstraint></eventFilters><name>Repeated Multiple Logon Failures: Domain</name><triggerWindow>86400</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111981</eventFilters><incidentAttrs>
        srcIpAddr = RepeatExcessDomainLoginFailure.srcIpAddr, destIpAddr = RepeatExcessDomainLoginFailure.destIpAddr, incidentCount = RepeatExcessDomainLoginFailure.COUNT(*)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_REPEAT_EXCESS_FAILED_LOGON_DOMAIN</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,srcIpAddr,destIpAddr,user,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_25" entityVersion="2" xmlId="Rule$PH_Rule_Access_25" ownerId="500150" lastModified="1387781690659" id="1386672" custId="0" creationTime="1387520464883"><activatedTime>1387781690658</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects multiple VPN logon failures - 5 consecutive failures in a 10 minute period</description><eventFilters entityVersion="0" xmlId="EventFilter@2111982" ownerId="500150" lastModified="1387781690658" id="2111982" custId="0" creationTime="1387781690658"><groupBy>srcIpAddr, reptDevIpAddr, user</groupBy><groupConstraint>COUNT (*) &gt;= 5</groupConstraint><index>0</index><name>ExcessVPNLoginFailure</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_VPNLogonFailure)</singleConstraint></eventFilters><name>Multiple Logon Failures: VPN</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111982</eventFilters><incidentAttrs>
        srcIpAddr = ExcessVPNLoginFailure.srcIpAddr, destIpAddr = ExcessVPNLoginFailure.reptDevIpAddr, user = ExcessVPNLoginFailure.user, incidentCount = ExcessVPNLoginFailure.COUNT(*)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_EXCESS_FAILED_LOGON_VPN</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,srcIpAddr,user,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_26" entityVersion="1" xmlId="Rule$PH_Rule_Access_26" ownerId="500150" lastModified="1387781690769" id="1386673" custId="0" creationTime="1387520464997"><active>false</active><custInclusive>true</custInclusive><description>Detects repeating occurrences of excessive VPN logon failures</description><eventFilters entityVersion="0" xmlId="EventFilter@2111983" ownerId="500150" lastModified="1387781690768" id="2111983" custId="0" creationTime="1387781690768"><groupBy>srcIpAddr,eventType,destIpAddr</groupBy><groupConstraint>COUNT (*) &gt;= 3</groupConstraint><index>0</index><name>RepeatExcessVPNLoginFailure</name><singleConstraint>eventType = "PH_RULE_EXCESS_FAILED_LOGON_VPN"</singleConstraint></eventFilters><name>Repeated Multiple Logon Failures: VPN</name><triggerWindow>86400</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111983</eventFilters><incidentAttrs>
        srcIpAddr = RepeatExcessVPNLoginFailure.srcIpAddr, destIpAddr = RepeatExcessVPNLoginFailure.destIpAddr, incidentCount = RepeatExcessVPNLoginFailure.COUNT(*)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_REPEAT_EXCESS_FAILED_LOGON_VPN</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,srcIpAddr,destIpAddr,user,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_30" entityVersion="2" xmlId="Rule$PH_Rule_Access_30" ownerId="500150" lastModified="1387781690881" id="1386674" custId="0" creationTime="1387520465095"><activatedTime>1387781690881</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects multiple Wireless logon failures - 5 consecutive failures in a 10 minute period</description><eventFilters entityVersion="0" xmlId="EventFilter@2111984" ownerId="500150" lastModified="1387781690881" id="2111984" custId="0" creationTime="1387781690881"><groupBy>srcMACAddr,reptDevIpAddr,user,eventType</groupBy><groupConstraint>COUNT (*) &gt;= 5</groupConstraint><index>0</index><name>ExcessWLANLoginFailure</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_WirelessLogonFailure)</singleConstraint></eventFilters><name>Multiple Logon Failures: WLAN</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111984</eventFilters><incidentAttrs>
        srcMACAddr = ExcessWLANLoginFailure.srcMACAddr, destIpAddr = ExcessWLANLoginFailure.reptDevIpAddr, user = ExcessWLANLoginFailure.user, incidentCount = ExcessWLANLoginFailure.COUNT(*)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_EXCESS_FAILED_LOGON_WIRELESS</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,srcMACAddr,user,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_31" entityVersion="1" xmlId="Rule$PH_Rule_Access_31" ownerId="500150" lastModified="1387781690992" id="1386675" custId="0" creationTime="1387520465195"><active>false</active><custInclusive>true</custInclusive><description>Detects repeating occurrences of excessive wireless LAN logon failures</description><eventFilters entityVersion="0" xmlId="EventFilter@2111985" ownerId="500150" lastModified="1387781690991" id="2111985" custId="0" creationTime="1387781690991"><groupBy>srcMACAddr,user,destIpAddr,eventType</groupBy><groupConstraint>COUNT (*) &gt;= 3</groupConstraint><index>0</index><name>RepeatExcessWLANLoginFailure</name><singleConstraint>eventType = "PH_RULE_EXCESS_FAILED_LOGON_WIRELESS"</singleConstraint></eventFilters><name>Repeated Multiple Logon Failures: WLAN</name><triggerWindow>86400</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111985</eventFilters><incidentAttrs>
        srcMACAddr = RepeatExcessWLANLoginFailure.srcMACAddr, destIpAddr = RepeatExcessWLANLoginFailure.destIpAddr, incidentCount = RepeatExcessWLANLoginFailure.COUNT(*)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_REPEAT_EXCESS_FAILED_LOGON_WIRELESS</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,srcIpAddr,destIpAddr,user,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_51A" entityVersion="2" xmlId="Rule$PH_Rule_Access_51A" ownerId="500150" lastModified="1387781691103" id="1386676" custId="0" creationTime="1387520465295"><activatedTime>1387781691103</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects account lockout caused by excessive logon failures</description><eventFilters entityVersion="0" xmlId="EventFilter@2111986" ownerId="500150" lastModified="1387781691103" id="2111986" custId="0" creationTime="1387781691103"><groupBy>reptDevIpAddr, user</groupBy><groupConstraint>COUNT (*) &gt;= 1</groupConstraint><index>0</index><name>DomainAcctLockout</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_DomainAccountLocked) AND reptDevIpAddr IN (Group@PH_SYS_APP_DOMAIN_CONTROLLER)</singleConstraint></eventFilters><name>Account Locked: Domain</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111986</eventFilters><incidentAttrs>
        destIpAddr = DomainAcctLockout.reptDevIpAddr, user = DomainAcctLockout.user, incidentCount = DomainAcctLockout.COUNT(*)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_ACCOUNT_LOCKOUT_DOMAIN</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,srcIpAddr,user,computer,winLogonType,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_51B" entityVersion="2" xmlId="Rule$PH_Rule_Access_51B" ownerId="500150" lastModified="1387781691215" id="1386677" custId="0" creationTime="1387520465397"><activatedTime>1387781691214</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects account lockout caused by excessive logon failures</description><eventFilters entityVersion="0" xmlId="EventFilter@2111987" ownerId="500150" lastModified="1387781691214" id="2111987" custId="0" creationTime="1387781691214"><groupBy>srcIpAddr,reptDevIpAddr, user</groupBy><groupConstraint>COUNT (*) &gt;= 1</groupConstraint><index>0</index><name>NetDevAcctLockout</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_HostAccountLocked) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_Network)</singleConstraint></eventFilters><name>Account Locked: Network Device</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111987</eventFilters><incidentAttrs>
        srcIpAddr = NetDevAcctLockout.srcIpAddr, destIpAddr = NetDevAcctLockout.reptDevIpAddr, user = NetDevAcctLockout.user, incidentCount = NetDevAcctLockout.COUNT(*)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_ACCOUNT_LOCKOUT_NET_DEV</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,srcIpAddr,user,computer,winLogonType,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Server" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_51C" entityVersion="2" xmlId="Rule$PH_Rule_Access_51C" ownerId="500150" lastModified="1387781691329" id="1386678" custId="0" creationTime="1387520465499"><activatedTime>1387781691328</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects account lockout caused by excessive logon failures</description><eventFilters entityVersion="0" xmlId="EventFilter@2111988" ownerId="500150" lastModified="1387781691328" id="2111988" custId="0" creationTime="1387781691328"><groupBy>reptDevIpAddr, user</groupBy><groupConstraint>COUNT (*) &gt;= 1</groupConstraint><index>0</index><name>ServerAcctLockout</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_HostAccountLocked) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_Server) AND reptDevIpAddr NOT IN (Group@PH_SYS_APP_DOMAIN_CONTROLLER) AND eventType != "PH_AUDIT_ACCOUNT_LOCKED"</singleConstraint></eventFilters><name>Account Locked: Server</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111988</eventFilters><incidentAttrs>
        destIpAddr = ServerAcctLockout.reptDevIpAddr, user = ServerAcctLockout.user, incidentCount = ServerAcctLockout.COUNT(*)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_ACCOUNT_LOCKOUT_SERVER</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,srcIpAddr,user,computer,winLogonType,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Server" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_51D" entityVersion="2" xmlId="Rule$PH_Rule_Access_51D" ownerId="500150" lastModified="1387781691442" id="1386679" custId="0" creationTime="1387520465599"><activatedTime>1387781691441</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects system (AccelOps) account lockout caused by excessive logon failures</description><eventFilters entityVersion="0" xmlId="EventFilter@2111989" ownerId="500150" lastModified="1387781691441" id="2111989" custId="0" creationTime="1387781691441"><groupBy>reptDevIpAddr, srcIpAddr, user</groupBy><groupConstraint>COUNT (*) &gt;= 1</groupConstraint><index>0</index><name>AOLockout</name><singleConstraint>eventType = "PH_AUDIT_ACCOUNT_LOCKED"</singleConstraint></eventFilters><name>Account Locked: System</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111989</eventFilters><incidentAttrs>
        destIpAddr = AOLockout.reptDevIpAddr, srcIpAddr = AOLockout.srcIpAddr, user = AOLockout.user, incidentCount = AOLockout.COUNT(*)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_ACCOUNT_LOCKOUT_SYSTEM</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,srcIpAddr,user,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Server" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_52" entityVersion="2" xmlId="Rule$PH_Rule_Access_52" ownerId="500150" lastModified="1387781691556" id="1386680" custId="0" creationTime="1387520465698"><activatedTime>1387781691555</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects logon attempts to disabled accounts</description><eventFilters entityVersion="0" xmlId="EventFilter@2111990" ownerId="500150" lastModified="1387781691555" id="2111990" custId="0" creationTime="1387781691555"><groupBy>reptDevIpAddr, user</groupBy><groupConstraint>COUNT (*) &gt;= 3</groupConstraint><index>0</index><name>DisabledAcctLogin</name><singleConstraint>eventType = "Win-Security-531"</singleConstraint></eventFilters><name>Disabled Account Logon Attempt</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111990</eventFilters><incidentAttrs>
        destIpAddr = DisabledAcctLogin.reptDevIpAddr, user = DisabledAcctLogin.user, incidentCount = DisabledAcctLogin.COUNT(*)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_DISABLED_ACCOUNT_ACCESS</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,srcIpAddr,user,computer,winLogonType,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Server" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_53" entityVersion="2" xmlId="Rule$PH_Rule_Access_53" ownerId="500150" lastModified="1387781691671" id="1386681" custId="0" creationTime="1387520465797"><activatedTime>1387781691670</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects logon attempts at times which are not permitted by policy</description><eventFilters entityVersion="0" xmlId="EventFilter@2111991" ownerId="500150" lastModified="1387781691670" id="2111991" custId="0" creationTime="1387781691670"><groupBy>reptDevIpAddr, user</groupBy><groupConstraint>COUNT (*) &gt;= 3</groupConstraint><index>0</index><name>LoginTimeViolation</name><singleConstraint>eventType = "Win-Security-530"</singleConstraint></eventFilters><name>Logon Time Restriction Violation</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111991</eventFilters><incidentAttrs>
        destIpAddr = LoginTimeViolation.reptDevIpAddr, user = LoginTimeViolation.user, incidentCount = LoginTimeViolation.COUNT(*)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_LOGON_TIME_VIOLATION</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,srcIpAddr,user,computer,winLogonType,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Other" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_54" entityVersion="2" xmlId="Rule$PH_Rule_Access_54" ownerId="500150" lastModified="1387781691792" id="1386682" custId="0" creationTime="1387520465897"><activatedTime>1387781691791</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects the same source having excessive logon failures at distinct hosts</description><eventFilters entityVersion="0" xmlId="EventFilter@2111992" ownerId="500150" lastModified="1387781691791" id="2111992" custId="0" creationTime="1387781691791"><groupBy>srcIpAddr</groupBy><groupConstraint>COUNT (DISTINCT destIpAddr) &gt;= 10</groupConstraint><index>0</index><name>PasswordScan_ManyDest</name><singleConstraint>eventType IN ("PH_RULE_EXCESS_FAILED_LOGON_2_NET_DEVICE","PH_RULE_EXCESS_FAILED_LOGON_SERVER","PH_RULE_EXCESS_FAILED_PRIV_LOGON_SERVER","PH_RULE_EXCESS_FAILED_LOGON_DB", "PH_RULE_REPEAT_EXCESS_FAILED_LOGON_WEB", "PH_RULE_EXCESS_FAILED_LOGON_APPL","PH_RULE_EXCESS_FAILED_LOGON_DOMAIN", "PH_RULE_EXCESS_FAILED_LOGON_VPN", "PH_RULE_EXCESS_FAILED_LOGON_WIRELESS")</singleConstraint></eventFilters><name>Multiple Logon Failures: Same Src, Multiple Hosts</name><triggerWindow>3600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111992</eventFilters><incidentAttrs>
        srcIpAddr = PasswordScan_ManyDest.srcIpAddr, incidentCount = PasswordScan_ManyDest.COUNT (DISTINCT destIpAddr)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_FAILED_LOGON_MULTIPLE_HOSTS</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,srcIpAddr,destIpAddr,user,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Other" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_55" entityVersion="2" xmlId="Rule$PH_Rule_Access_55" ownerId="500150" lastModified="1387781691907" id="1386683" custId="0" creationTime="1387520465995"><activatedTime>1387781691906</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects same source having excessive login failures at the same destination host but multiple distinct accounts are used during the logon failure</description><eventFilters entityVersion="0" xmlId="EventFilter@2111993" ownerId="500150" lastModified="1387781691905" id="2111993" custId="0" creationTime="1387781691905"><groupBy>srcIpAddr,destIpAddr</groupBy><groupConstraint>COUNT (DISTINCT user) &gt;= 3</groupConstraint><index>0</index><name>PasswordScan_SameDest_ManyAcct</name><singleConstraint>eventType IN ("PH_RULE_EXCESS_FAILED_LOGON_2_NET_DEVICE","PH_RULE_EXCESS_FAILED_LOGON_SERVER","PH_RULE_EXCESS_FAILED_PRIV_LOGON_SERVER","PH_RULE_EXCESS_FAILED_LOGON_DB", "PH_RULE_REPEAT_EXCESS_FAILED_LOGON_WEB", "PH_RULE_EXCESS_FAILED_LOGON_APPL","PH_RULE_EXCESS_FAILED_LOGON_DOMAIN", "PH_RULE_EXCESS_FAILED_LOGON_VPN","PH_RULE_EXCESS_FAILED_LOGON_WIRELESS")</singleConstraint></eventFilters><name>Multiple Logon Failures: Same Src and Dest, Multiple Accounts</name><triggerWindow>3600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111993</eventFilters><incidentAttrs>
        srcIpAddr = PasswordScan_SameDest_ManyAcct.srcIpAddr, destIpAddr = PasswordScan_SameDest_ManyAcct.destIpAddr, incidentCount = PasswordScan_SameDest_ManyAcct.COUNT (DISTINCT user)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_FAILED_LOGON_MULTIPLE_ACCOUNTS</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,srcIpAddr,destIpAddr,user,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Other" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_56" entityVersion="2" xmlId="Rule$PH_Rule_Access_56" ownerId="500150" lastModified="1387781692019" id="1386684" custId="0" creationTime="1387520466094"><activatedTime>1387781692018</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects an unusual condition where a source has authentication failures at a host but that is not followed by a successful authentication at the same host within 2 hours</description><eventFilters entityVersion="0" xmlId="EventFilter@2111994" ownerId="500150" lastModified="1387781692018" id="2111994" custId="0" creationTime="1387781692018"><groupBy>srcIpAddr,destIpAddr,user</groupBy><groupConstraint>COUNT (*) &gt;= 1</groupConstraint><index>0</index><name>FailedLogin</name><singleConstraint>eventType IN ("PH_RULE_EXCESS_FAILED_LOGON_NET_DEVICE","PH_RULE_EXCESS_FAILED_LOGON_SERVER","PH_RULE_EXCESS_FAILED_PRIV_LOGON_SERVER","PH_RULE_EXCESS_FAILED_LOGON_DB", "PH_RULE_REPEAT_EXCESS_FAILED_LOGON_WEB", "PH_RULE_EXCESS_FAILED_LOGON_APPL","PH_RULE_EXCESS_FAILED_LOGON_DOMAIN", "PH_RULE_EXCESS_FAILED_LOGON_VPN","PH_RULE_EXCESS_FAILED_LOGON_WIRELESS")</singleConstraint></eventFilters><eventFilters entityVersion="0" xmlId="EventFilter@2111995" ownerId="500150" lastModified="1387781692018" id="2111995" custId="0" creationTime="1387781692018"><groupBy>srcIpAddr,reptDevIpAddr,user</groupBy><index>1</index><name>SuccessLogin</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_HostLogonSuccess, Group@PH_SYS_EVENT_HostPrivLogonSuccess, Group@PH_SYS_EVENT_DomainLogonSuccess, Group@PH_SYS_EVENT_VPNLogonSuccess, Group@PH_SYS_EVENT_WirelessLogonSuccess, Group@PH_SYS_EVENT_AppLogonSuccess)</singleConstraint></eventFilters><filterOperators><rank>0</rank><type>NOT_FOLLOWED_BY</type></filterOperators><globalConstraint>FailedLogin.destIpAddr = SuccessLogin.reptDevIpAddr, FailedLogin.srcIpAddr = SuccessLogin.srcIpAddr, FailedLogin.user = SuccessLogin.user   </globalConstraint><name>Suspicious Logon Failure: no following successful login</name><rawFOString>NOT_FOLLOWED_BY:0</rawFOString><triggerWindow>7200</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111994</eventFilters><eventFilters>EventFilter@2111995</eventFilters><incidentAttrs>
        srcIpAddr = FailedLogin.srcIpAddr, destIpAddr = FailedLogin.destIpAddr, user = FailedLogin.user
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_SUSPICIOUS_FAILED_LOGON_NO_SUCCESS</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,srcIpAddr,destIpAddr,user,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_57" entityVersion="2" xmlId="Rule$PH_Rule_Access_57" ownerId="500150" lastModified="1387781692172" id="1386685" custId="0" creationTime="1387520466196"><activatedTime>1387781692171</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects VPN logon from outside my country. My Country is set to "United States" and may need to be changed for outside United States deployments</description><eventFilters entityVersion="0" xmlId="EventFilter@2111996" ownerId="500150" lastModified="1387781692171" id="2111996" custId="0" creationTime="1387781692171"><groupBy>srcIpAddr, user</groupBy><groupConstraint>COUNT (*) &gt;= 1</groupConstraint><index>0</index><name>VPNLoginOutside</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_VPNLogonSuccess, Group@PH_SYS_EVENT_VPNLogoff) AND srcGeoCountry NOT IN (Group@PH_COUNTRY_GROUP_MYHOME) AND eventType NOT IN ("ASA-713049-SiteToSite-VPN-Logon-success")</singleConstraint></eventFilters><name>Successful VPN Logon From Outside My Country</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111996</eventFilters><incidentAttrs>
        srcIpAddr = VPNLoginOutside.srcIpAddr, user = VPNLoginOutside.user
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_VPN_LOGON_SUCCESS_OUTSIDE_COUNTRY</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,srcIpAddr,user,computer,winLogonType,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_58" entityVersion="2" xmlId="Rule$PH_Rule_Access_58" ownerId="500150" lastModified="1387781692287" id="1386686" custId="0" creationTime="1387520466296"><activatedTime>1387781692286</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects VPN logon from outside my country. My Country is set to "United States" and may need to be changed for outside United States deployments</description><eventFilters entityVersion="0" xmlId="EventFilter@2111997" ownerId="500150" lastModified="1387781692285" id="2111997" custId="0" creationTime="1387781692285"><groupBy>srcIpAddr, user</groupBy><groupConstraint>COUNT (*) &gt;= 3</groupConstraint><index>0</index><name>VPNLoginOutside</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_VPNLogonFailure) AND srcGeoCountry NOT IN (Group@PH_COUNTRY_GROUP_MYHOME)</singleConstraint></eventFilters><name>Failed VPN Logon From Outside My Country</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111997</eventFilters><incidentAttrs>
        srcIpAddr = VPNLoginOutside.srcIpAddr, user = VPNLoginOutside.user
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_VPN_FAILED_LOGON_OUTSIDE_COUNTRY</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,srcIpAddr,user,computer,winLogonType,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Server" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_59" entityVersion="2" xmlId="Rule$PH_Rule_Access_59" ownerId="500150" lastModified="1387781692402" id="1386687" custId="0" creationTime="1387520466397"><activatedTime>1387781692401</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects successful account activity to a recently disabled account</description><eventFilters entityVersion="0" xmlId="EventFilter@2111998" ownerId="500150" lastModified="1387781692400" id="2111998" custId="0" creationTime="1387781692400"><groupBy>reptDevIpAddr,user</groupBy><groupConstraint>COUNT (*) &gt;= 1</groupConstraint><index>0</index><name>AcctDisabled</name><singleConstraint>eventType IN ("Win-Security-629","Win-Security-4725")</singleConstraint></eventFilters><eventFilters entityVersion="0" xmlId="EventFilter@2111999" ownerId="500150" lastModified="1387781692401" id="2111999" custId="0" creationTime="1387781692401"><groupBy>reptDevIpAddr,user</groupBy><groupConstraint>COUNT (*) &gt;= 1</groupConstraint><index>1</index><name>SuccessLogin</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_HostLogonSuccess, Group@PH_SYS_EVENT_DomainLogonSuccess)</singleConstraint></eventFilters><filterOperators><rank>0</rank><type>FOLLOWED_BY</type></filterOperators><globalConstraint>AcctDisabled.reptDevIpAddr = SuccessLogin.reptDevIpAddr, AcctDisabled.user = SuccessLogin.user </globalConstraint><name>Successful Account Activity On a Disabled Account</name><rawFOString>FOLLOWED_BY:0</rawFOString><triggerWindow>86400</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2111998</eventFilters><eventFilters>EventFilter@2111999</eventFilters><incidentAttrs>
        reptDevIpAddr = AcctDisabled.reptDevIpAddr, user = AcctDisabled.user
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_SUCCESS_ACTIVITY_ON_DISABLED_ACCT</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,srcIpAddr,user,computer,winLogonType,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Server" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_60" entityVersion="2" xmlId="Rule$PH_Rule_Access_60" ownerId="500150" lastModified="1387781692537" id="1386688" custId="0" creationTime="1387520466499"><activatedTime>1387781692534</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects failedaccount activity to a recently disabled account</description><eventFilters entityVersion="0" xmlId="EventFilter@2112000" ownerId="500150" lastModified="1387781692533" id="2112000" custId="0" creationTime="1387781692533"><groupBy>reptDevIpAddr,user</groupBy><groupConstraint>COUNT (*) &gt;= 1</groupConstraint><index>0</index><name>AcctDisabled</name><singleConstraint>eventType IN ("Win-Security-629","Win-Security-4725")</singleConstraint></eventFilters><eventFilters entityVersion="0" xmlId="EventFilter@2112001" ownerId="500150" lastModified="1387781692534" id="2112001" custId="0" creationTime="1387781692534"><groupBy>reptDevIpAddr,user</groupBy><groupConstraint>COUNT (*) &gt;= 1</groupConstraint><index>1</index><name>FailedLogin</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_HostLogonFailure,Group@PH_SYS_EVENT_DomainLogonFailure)</singleConstraint></eventFilters><filterOperators><rank>0</rank><type>FOLLOWED_BY</type></filterOperators><globalConstraint>AcctDisabled.reptDevIpAddr = FailedLogin.reptDevIpAddr, AcctDisabled.user = FailedLogin.user </globalConstraint><name>Failed Account Activity On Disabled Account</name><rawFOString>FOLLOWED_BY:0</rawFOString><triggerWindow>86400</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112000</eventFilters><eventFilters>EventFilter@2112001</eventFilters><incidentAttrs>
        reptDevIpAddr = AcctDisabled.reptDevIpAddr, user = AcctDisabled.user
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_FAILED_ACTIVITY_ON_DISABLED_ACCT</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,srcIpAddr,user,computer,winLogonType,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Server" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_61" entityVersion="2" xmlId="Rule$PH_Rule_Access_61" ownerId="500150" lastModified="1387781692665" id="1386689" custId="0" creationTime="1387520466600"><activatedTime>1387781692662</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects simultaneous successful server/network device/domain authentications to the same system and the same account from different countries. This may indicate stolen credentials unless it is an administrative account and is supposed to be accessed by administrators from multiple countries.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112002" ownerId="500150" lastModified="1387781692662" id="2112002" custId="0" creationTime="1387781692662"><groupBy>reptDevIpAddr,user</groupBy><groupConstraint>COUNT (DISTINCT srcGeoCountry) &gt;= 2</groupConstraint><index>0</index><name>MultiCountryLogon</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_HostLogonSuccess,Group@PH_SYS_EVENT_DomainLogonSuccess)</singleConstraint></eventFilters><name>Concurrent Successful Authentications To Same Account From Multiple Countries</name><triggerWindow>3600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112002</eventFilters><incidentAttrs>
        destIpAddr = MultiCountryLogon.reptDevIpAddr, user = MultiCountryLogon.user
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_CONCURRENT_SUCCESS_AUTH_MULTI_COUNTRY</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,srcIpAddr,srcGeoCountry,user,winLogonType,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Server" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_62" entityVersion="2" xmlId="Rule$PH_Rule_Access_62" ownerId="500150" lastModified="1387781692815" id="1386690" custId="0" creationTime="1387520466700"><activatedTime>1387781692813</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects simultaneous successful server/network device/domain authentications to the same system and the same account from different countries. This may indicate stolen credentials unless it is an administrative account and is supposed to be accessed by administrators from multiple countries.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112003" ownerId="500150" lastModified="1387781692813" id="2112003" custId="0" creationTime="1387781692813"><groupBy>reptDevIpAddr,user</groupBy><groupConstraint>COUNT (DISTINCT srcGeoCity) &gt;= 2</groupConstraint><index>0</index><name>MultiCityLogon</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_HostLogonSuccess,Group@PH_SYS_EVENT_DomainLogonSuccess)</singleConstraint></eventFilters><name>Concurrent Successful Authentications To Same Account From Multiple Cities</name><triggerWindow>3600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112003</eventFilters><incidentAttrs>
        destIpAddr = MultiCityLogon.reptDevIpAddr, user = MultiCityLogon.user
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_CONCURRENT_SUCCESS_AUTH_MULTI_CITY</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,srcIpAddr,srcGeoCountry,srcGeoCity,user,winLogonType,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Server" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_63" entityVersion="2" xmlId="Rule$PH_Rule_Access_63" ownerId="500150" lastModified="1387781692936" id="1386691" custId="0" creationTime="1387520466800"><activatedTime>1387781692934</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects simultaneous failed server/network device/domain authentications to the same system and the same account from different countries. This may indicate stolen credentials unless it is an administrative account and is supposed to be accessed by administrators from multiple countries.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112004" ownerId="500150" lastModified="1387781692934" id="2112004" custId="0" creationTime="1387781692934"><groupBy>reptDevIpAddr,user</groupBy><groupConstraint>COUNT (DISTINCT srcGeoCountry) &gt;= 2</groupConstraint><index>0</index><name>MultiCountryLogon</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_HostLogonFailure,Group@PH_SYS_EVENT_DomainLogonFailure)</singleConstraint></eventFilters><name>Concurrent Failed Authentications To Same Account  From Multiple Countries</name><triggerWindow>3600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112004</eventFilters><incidentAttrs>
        destIpAddr = MultiCountryLogon.reptDevIpAddr, user = MultiCountryLogon.user
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_CONCURRENT_FAILED_AUTH_MULTI_COUNTRY</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,srcIpAddr,srcGeoCountry,user,winLogonType,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Server" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_64" entityVersion="2" xmlId="Rule$PH_Rule_Access_64" ownerId="500150" lastModified="1387781693052" id="1386692" custId="0" creationTime="1387520466901"><activatedTime>1387781693051</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects simultaneous failed server/network device/domain authentications to the same system and the same account from different countries. This may indicate stolen credentials unless it is an administrative account and is supposed to be accessed by administrators from multiple countries.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112005" ownerId="500150" lastModified="1387781693051" id="2112005" custId="0" creationTime="1387781693051"><groupBy>reptDevIpAddr,user</groupBy><groupConstraint>COUNT (DISTINCT srcGeoCity) &gt;= 2</groupConstraint><index>0</index><name>MultiCityLogon</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_HostLogonFailure,Group@PH_SYS_EVENT_DomainLogonFailure)</singleConstraint></eventFilters><name>Concurrent Failed Authentications To Same Account From Multiple Cities</name><triggerWindow>3600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112005</eventFilters><incidentAttrs>
        destIpAddr = MultiCityLogon.reptDevIpAddr, user = MultiCityLogon.user
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_CONCURRENT_FAILED_AUTH_MULTI_CITY</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,srcIpAddr,srcGeoCountry,srcGeoCity,user,winLogonType,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_65" entityVersion="2" xmlId="Rule$PH_Rule_Access_65" ownerId="500150" lastModified="1387781693169" id="1386693" custId="0" creationTime="1387520467002"><activatedTime>1387781693167</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects simultaneous VPN authentications to the same account within a short period of time from different cities. This may indicate a stolen credential.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112006" ownerId="500150" lastModified="1387781693167" id="2112006" custId="0" creationTime="1387781693167"><groupBy>user</groupBy><groupConstraint>COUNT(DISTINCT srcGeoCity) &gt;= 2</groupConstraint><index>0</index><name>VPNLogonDistinctCity</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_VPNLogonSuccess,Group@PH_SYS_EVENT_VPNLogonFailure)</singleConstraint></eventFilters><name>Concurrent VPN Authentications To Same Account From Different Cities</name><triggerWindow>3600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112006</eventFilters><incidentAttrs>
        user = VPNLogonDistinctCity.user
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_CONCURRENT_VPN_AUTH_MULTI_CITY</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,srcIpAddr,srcGeoCountry,srcGeoCity,user,winLogonType,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Server" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_66" entityVersion="1" xmlId="Rule$PH_Rule_Access_66" ownerId="500150" lastModified="1387781693349" id="1386694" custId="0" creationTime="1387520467112"><active>false</active><custInclusive>true</custInclusive><description>Detects that an account that has been dormant for more than 60 days have been successfully logged on to</description><eventFilters entityVersion="0" xmlId="EventFilter@2112007" ownerId="500150" lastModified="1387781693348" id="2112007" custId="0" creationTime="1387781693348"><groupBy>hostIpAddr,user,userFullName</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>DormantUser</name><singleConstraint>eventType = "PH_DISCOV_ADS_DORMANT_ACCT" AND daysSinceLastLogon &gt;= 60</singleConstraint></eventFilters><eventFilters entityVersion="0" xmlId="EventFilter@2112008" ownerId="500150" lastModified="1387781693348" id="2112008" custId="0" creationTime="1387781693348"><groupBy>reptDevIpAddr,user</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>1</index><name>LogonSuccess</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_HostLogonSuccess,Group@PH_SYS_EVENT_DomainLogonSuccess)</singleConstraint></eventFilters><filterOperators><rank>0</rank><type>FOLLOWED_BY</type></filterOperators><globalConstraint>DormantUser.hostIpAddr = LogonSuccess.reptDevIpAddr, DormantUser.user = LogonSuccess.user </globalConstraint><name>Dormant Account Successful Logon</name><rawFOString>FOLLOWED_BY:0</rawFOString><triggerWindow>3600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112007</eventFilters><eventFilters>EventFilter@2112008</eventFilters><incidentAttrs>
        hostIpAddr = DormantUser.hostIpAddr, user = DormantUser.user, userFullName = DormantUser.userFullName
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_DORMANT_USER_LOGON</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,srcIpAddr,srcGeoCountry,user,userFullName,daysSinceLastLogon,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Server" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_67" entityVersion="2" xmlId="Rule$PH_Rule_Access_67" ownerId="500150" lastModified="1387781693468" id="1386695" custId="0" creationTime="1387520467245"><activatedTime>1387781693466</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that an account was created, used and then deleted within a short period of time</description><eventFilters entityVersion="0" xmlId="EventFilter@2112009" ownerId="500150" lastModified="1387781693466" id="2112009" custId="0" creationTime="1387781693466"><groupBy>user,targetUser</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>AccountCreated</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_AccountCreated)</singleConstraint></eventFilters><eventFilters entityVersion="0" xmlId="EventFilter@2112010" ownerId="500150" lastModified="1387781693466" id="2112010" custId="0" creationTime="1387781693466"><groupBy>user</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>1</index><name>LogonSuccess</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_HostLogonSuccess,Group@PH_SYS_EVENT_DomainLogonSuccess)</singleConstraint></eventFilters><eventFilters entityVersion="0" xmlId="EventFilter@2112011" ownerId="500150" lastModified="1387781693466" id="2112011" custId="0" creationTime="1387781693466"><groupBy>targetUser</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>2</index><name>AccountDeleted</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_AccountDeleted)</singleConstraint></eventFilters><filterOperators><rank>0</rank><type>FOLLOWED_BY</type></filterOperators><filterOperators><rank>1</rank><type>FOLLOWED_BY</type></filterOperators><globalConstraint>AccountCreated.targetUser = LogonSuccess.user, LogonSuccess.user = AccountDeleted.targetUser</globalConstraint><name>Transient Account Usage</name><rawFOString>FOLLOWED_BY:0,FOLLOWED_BY:1</rawFOString><triggerWindow>3600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112009</eventFilters><eventFilters>EventFilter@2112010</eventFilters><eventFilters>EventFilter@2112011</eventFilters><incidentAttrs>
        user = AccountCreated.user, targetUser = AccountCreated.targetUser 
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_TRANSIENT_ACCT_USAGE</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,srcIpAddr,srcGeoCountry,user,targetUser,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Server" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_68" entityVersion="2" xmlId="Rule$PH_Rule_Access_68" ownerId="500150" lastModified="1387781693596" id="1386696" custId="0" creationTime="1387520467384"><activatedTime>1387781693595</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects excessive privileged command execution (e.g. sudo exec) failure at a server</description><eventFilters entityVersion="0" xmlId="EventFilter@2112012" ownerId="500150" lastModified="1387781693595" id="2112012" custId="0" creationTime="1387781693595"><groupBy>reptDevIpAddr, user</groupBy><groupConstraint>COUNT (*) &gt;= 1</groupConstraint><index>0</index><name>PrivExecFailure</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_HostPrivExecFailure) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_Server)</singleConstraint></eventFilters><name>Privileged Command Execution Failure</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112012</eventFilters><incidentAttrs>
        destIpAddr = PrivExecFailure.reptDevIpAddr, user = PrivExecFailure.user, incidentCount = PrivExecFailure.COUNT(*)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_FAILED_PRIV_EXEC</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,user,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Server" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_69" entityVersion="2" xmlId="Rule$PH_Rule_Access_69" ownerId="500150" lastModified="1387781693717" id="1386697" custId="0" creationTime="1387520467485"><activatedTime>1387781693715</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects suspicious logon attempts that indicate policy violations, e.g. root logon to database servers, default passwords, attempts to bypass authentication, root logon over unencrypted protocols such as Telnet, ftp, anonymous logons etc.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112013" ownerId="500150" lastModified="1387781693715" id="2112013" custId="0" creationTime="1387781693715"><groupBy>srcIpAddr, destIpAddr</groupBy><groupConstraint>COUNT (*) &gt;= 1</groupConstraint><index>0</index><name>SuspiciousLogon</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_SuspiciousLogon)</singleConstraint></eventFilters><name>Suspicious logon attempt detected</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112013</eventFilters><incidentAttrs>
        srcIpAddr = SuspiciousLogon.srcIpAddr,destIpAddr = SuspiciousLogon.destIpAddr,incidentCount = SuspiciousLogon.COUNT(*)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_SUSPICIOUS_LOGON</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,user,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_RV_1" entityVersion="2" xmlId="Rule$PH_Rule_RV_1" ownerId="500150" lastModified="1387781695778" id="1386698" custId="0" creationTime="1387520469313"><activatedTime>1387781695778</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that the Radvision gateway is down. Cleared by the up event</description><eventFilters entityVersion="0" xmlId="EventFilter@2112020" ownerId="500150" lastModified="1387781695778" id="2112020" custId="0" creationTime="1387781695778"><groupBy>reptDevIpAddr</groupBy><groupConstraint>COUNT (*) &gt;= 1</groupConstraint><index>0</index><name>Down</name><singleConstraint>eventType = "RV-powerDown"</singleConstraint></eventFilters><name>Radvision Gateway Down</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112020</eventFilters><incidentAttrs>
        hostIpAddr = Down.reptDevIpAddr  
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_RV_DOWN</incidentType><triggerEventAttrList>phRecvTime</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_RV_2" entityVersion="2" xmlId="Rule$PH_Rule_RV_2" ownerId="500150" lastModified="1387781695900" id="1386699" custId="0" creationTime="1387520469428"><activatedTime>1387781695900</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that loss of Radvision gateway ISDN link.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112022" ownerId="500150" lastModified="1387781695899" id="2112022" custId="0" creationTime="1387781695899"><groupBy>reptDevIpAddr</groupBy><groupConstraint>COUNT (*) &gt;= 1</groupConstraint><index>0</index><name>Down</name><singleConstraint>eventType = "RV-lossIsdn" AND eventAction = 0</singleConstraint></eventFilters><name>Radvision ISDN Loss</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112022</eventFilters><incidentAttrs>
        hostIpAddr = Down.reptDevIpAddr  
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_RV_ISDN_DOWN</incidentType><triggerEventAttrList>phRecvTime</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_RV_3" entityVersion="2" xmlId="Rule$PH_Rule_RV_3" ownerId="500150" lastModified="1387781696040" id="1386850" custId="0" creationTime="1387520469540"><activatedTime>1387781696040</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that loss of Radvision gateway Ethernet link.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112024" ownerId="500150" lastModified="1387781696040" id="2112024" custId="0" creationTime="1387781696040"><groupBy>reptDevIpAddr</groupBy><groupConstraint>COUNT (*) &gt;= 1</groupConstraint><index>0</index><name>Down</name><singleConstraint>eventType = "RV-lossEthernet" AND eventAction = 0</singleConstraint></eventFilters><name>Radvision Ethernet Loss</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112024</eventFilters><incidentAttrs>
        hostIpAddr = Down.reptDevIpAddr  
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_RV_ETHERNET_DOWN</incidentType><triggerEventAttrList>phRecvTime</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_RV_4" entityVersion="2" xmlId="Rule$PH_Rule_RV_4" ownerId="500150" lastModified="1387781696171" id="1386851" custId="0" creationTime="1387520469654"><activatedTime>1387781696170</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects call setup problems with peer gateways</description><eventFilters entityVersion="0" xmlId="EventFilter@2112026" ownerId="500150" lastModified="1387781696170" id="2112026" custId="0" creationTime="1387781696170"><groupBy>reptDevIpAddr,eventType</groupBy><groupConstraint>COUNT (*) &gt;= 1</groupConstraint><index>0</index><name>Down</name><singleConstraint>eventType IN ("RV-peerCallRejected","RV-peerCallRejectedCapacity","RV-peerCallRejectedByAll","RV-peerCallFailedNoPeers", "RV-peerCallRejectedNonPeer","RV-maxHighLevelResMeter")</singleConstraint></eventFilters><name>Radvision call setup issues</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112026</eventFilters><incidentAttrs>
        hostIpAddr = Down.reptDevIpAddr, compEventType = Down.eventType  
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_RV_CALL_PROBLEMS</incidentType><triggerEventAttrList>phRecvTime</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_RV_5" entityVersion="2" xmlId="Rule$PH_Rule_RV_5" ownerId="500150" lastModified="1387781696283" id="1386852" custId="0" creationTime="1387520469766"><activatedTime>1387781696283</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects a card removed from/inserted into chassis under power, or when the gateway enters maintenance mode</description><eventFilters entityVersion="0" xmlId="EventFilter@2112027" ownerId="500150" lastModified="1387781696283" id="2112027" custId="0" creationTime="1387781696283"><groupBy>reptDevIpAddr</groupBy><groupConstraint>COUNT (*) &gt;= 1</groupConstraint><index>0</index><name>Down</name><singleConstraint>eventType = "RV-cardExtractHotSwap" AND eventAction = 0</singleConstraint></eventFilters><name>Radvision Hardware Removed/Swapped</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112027</eventFilters><incidentAttrs>
        hostIpAddr = Down.reptDevIpAddr  
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_RV_HW_REMOVE</incidentType><triggerEventAttrList>phRecvTime</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_RV_6" entityVersion="2" xmlId="Rule$PH_Rule_RV_6" ownerId="500150" lastModified="1387781696407" id="1386853" custId="0" creationTime="1387520469879"><activatedTime>1387781696407</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects Corrupt or empty video packets present in the gateway</description><eventFilters entityVersion="0" xmlId="EventFilter@2112029" ownerId="500150" lastModified="1387781696407" id="2112029" custId="0" creationTime="1387781696407"><groupBy>reptDevIpAddr</groupBy><groupConstraint>COUNT (*) &gt;= 1</groupConstraint><index>0</index><name>Down</name><singleConstraint>eventType = "RV-badVideo" AND eventAction = 0</singleConstraint></eventFilters><name>Radvision Corrupt video packets</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112029</eventFilters><incidentAttrs>
        hostIpAddr = Down.reptDevIpAddr  
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_RV_CORRUPT_VIDEO</incidentType><triggerEventAttrList>phRecvTime</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_IPS_1" entityVersion="2" xmlId="Rule$PH_Rule_IPS_1" ownerId="500150" lastModified="1387781696814" id="1386854" custId="0" creationTime="1387520470309"><activatedTime>1387781696813</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects multiple IPS events from the same source IP in a short period of time - the source IP may have been infected</description><eventFilters entityVersion="0" xmlId="EventFilter@2112031" ownerId="500150" lastModified="1387781696813" id="2112031" custId="0" creationTime="1387781696813"><groupBy>srcIpAddr</groupBy><groupConstraint>COUNT (DISTINCT eventType) &gt;= 3</groupConstraint><index>0</index><name>DistinctIPSEvents</name><singleConstraint>(reptDevIpAddr IN (Group@PH_SYS_DEVICE_NETWORK_IPS) OR (reptDevIpAddr IN (Group@PH_SYS_APP_NETWORK_IPS) AND eventType CONTAIN "Snort-")) AND eventSeverity &gt;= 7</singleConstraint></eventFilters><name>Multiple Distinct IPS Events From Same Src</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112031</eventFilters><incidentAttrs>
        srcIpAddr = DistinctIPSEvents.srcIpAddr, incidentCount = DistinctIPSEvents.COUNT (DISTINCT eventType)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_MULTIPLE_IPS_SAME_SRC</incidentType><triggerEventAttrList>phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_IPS_2" entityVersion="2" xmlId="Rule$PH_Rule_IPS_2" ownerId="500150" lastModified="1387781696924" id="1386855" custId="0" creationTime="1387520470420"><activatedTime>1387781696924</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects multiple IPS scans from the same source IP in a short period of time.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112032" ownerId="500150" lastModified="1387781696923" id="2112032" custId="0" creationTime="1387781696923"><groupBy>srcIpAddr</groupBy><groupConstraint>COUNT(*) &gt;= 2</groupConstraint><index>0</index><name>IPSScan</name><singleConstraint>(reptDevIpAddr IN (Group@PH_SYS_DEVICE_NETWORK_IPS) OR (reptDevIpAddr IN (Group@PH_SYS_APP_NETWORK_IPS) AND eventType CONTAIN "Snort-")) AND eventType IN (Group@PH_SYS_EVENT_Reconn)</singleConstraint></eventFilters><name>Multiple IPS Scans From Same Src</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112032</eventFilters><incidentAttrs>
        srcIpAddr = IPSScan.srcIpAddr, incidentCount = IPSScan.COUNT(*)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_SCAN_IPS_SAME_SRC</incidentType><triggerEventAttrList>phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_IPS_3" entityVersion="2" xmlId="Rule$PH_Rule_IPS_3" ownerId="500150" lastModified="1387781697033" id="1386856" custId="0" creationTime="1387520470528"><activatedTime>1387781697032</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects a high risk rating IPS exploit event. This is applicable for Cisco IPS.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112033" ownerId="500150" lastModified="1387781697032" id="2112033" custId="0" creationTime="1387781697032"><groupBy>srcIpAddr,eventType,eventName</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>IPSHighRR</name><singleConstraint>reptDevIpAddr IN (Group@PH_SYS_DEVICE_NETWORK_IPS) AND eventType NOT IN (Group@PH_SYS_EVENT_Logon,Group@PH_SYS_EVENT_Reconn) AND ipsEvRR &gt;= 85</singleConstraint></eventFilters><name>High Risk Rating Cisco IPS Exploit</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112033</eventFilters><incidentAttrs>
        srcIpAddr = IPSHighRR.srcIpAddr, compEventType = IPSHighRR.eventType, compEventName = IPSHighRR.eventName, incidentCount = IPSHighRR.COUNT(*)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_HIGH_RR_IPS</incidentType><triggerEventAttrList>phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_IPS_4" entityVersion="2" xmlId="Rule$PH_Rule_IPS_4" ownerId="500150" lastModified="1387781697180" id="1386857" custId="0" creationTime="1387520470639"><activatedTime>1387781697180</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects a high severity IPS exploit detected by non-Cisco IPS</description><eventFilters entityVersion="0" xmlId="EventFilter@2112034" ownerId="500150" lastModified="1387781697180" id="2112034" custId="0" creationTime="1387781697180"><groupBy>srcIpAddr,eventType</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>NonCiscoIPSHighSev</name><singleConstraint>(reptDevIpAddr IN (Group@PH_SYS_DEVICE_NETWORK_IPS) OR (reptDevIpAddr IN (Group@PH_SYS_APP_NETWORK_IPS) AND eventType CONTAIN "Snort-")) AND reptVendor != "Cisco" AND eventType NOT IN (Group@PH_SYS_EVENT_Logon,Group@PH_SYS_EVENT_Reconn) AND eventSeverity &gt;= 8</singleConstraint></eventFilters><name>High Severity Non-Cisco IPS Exploit</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112034</eventFilters><incidentAttrs>
        srcIpAddr = NonCiscoIPSHighSev.srcIpAddr, compEventType = NonCiscoIPSHighSev.eventType, incidentCount = NonCiscoIPSHighSev.COUNT(*)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_HIGH_SEV_IPS</incidentType><triggerEventAttrList>phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_IPS_5" entityVersion="2" xmlId="Rule$PH_Rule_IPS_5" ownerId="500150" lastModified="1387781697289" id="1386858" custId="0" creationTime="1387520470749"><activatedTime>1387781697288</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects a high severity IPS security exploit from outside that is permitted. This rule makes sense only from an IPS positioned inside the firewall. Since this attack went through the firewall, its consequence must be monitored.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112035" ownerId="500150" lastModified="1387781697288" id="2112035" custId="0" creationTime="1387781697288"><groupBy>srcIpAddr,eventType</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>NonIPSHighSev</name><singleConstraint>reptDevIpAddr IN (Group@PH_SYS_DEVICE_NETWORK_IPS,Group@PH_SYS_APP_NETWORK_IPS) AND (eventSeverity &gt;= 8 OR ipsEvRR &gt;= 85) AND srcIpAddr NOT IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) AND eventAction = 0</singleConstraint></eventFilters><name>High Severity Inbound Permitted IPS Exploit</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112035</eventFilters><incidentAttrs>
        srcIpAddr = NonIPSHighSev.srcIpAddr, compEventType = NonIPSHighSev.eventType, incidentCount = NonIPSHighSev.COUNT(*)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_HIGH_SEV_SEC_IPS_IN_PERMIT</incidentType><triggerEventAttrList>phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_IPS_6" entityVersion="2" xmlId="Rule$PH_Rule_IPS_6" ownerId="500150" lastModified="1387781697397" id="1386859" custId="0" creationTime="1387520470859"><activatedTime>1387781697397</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects a high severity IPS security exploit from outside that is denied by IPS. This rule makes sense only from an IPS positioned inside the firewall.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112036" ownerId="500150" lastModified="1387781697397" id="2112036" custId="0" creationTime="1387781697397"><groupBy>srcIpAddr,eventType</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>NonIPSHighSev</name><singleConstraint>reptDevIpAddr IN (Group@PH_SYS_DEVICE_NETWORK_IPS,Group@PH_SYS_APP_NETWORK_IPS) AND (eventSeverity &gt;= 8 OR ipsEvRR &gt;= 85) AND srcIpAddr NOT IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) AND eventAction = 1</singleConstraint></eventFilters><name>High Severity Inbound Denied Security Exploit</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112036</eventFilters><incidentAttrs>
        srcIpAddr = NonIPSHighSev.srcIpAddr, compEventType = NonIPSHighSev.eventType, incidentCount = NonIPSHighSev.COUNT(*)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_HIGH_SEV_SEC_IPS_IN_DENY</incidentType><triggerEventAttrList>phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_IPS_7" entityVersion="2" xmlId="Rule$PH_Rule_IPS_7" ownerId="500150" lastModified="1387781697506" id="1386860" custId="0" creationTime="1387520470978"><activatedTime>1387781697506</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects high severity SQL Injection Attacks</description><eventFilters entityVersion="0" xmlId="EventFilter@2112037" ownerId="500150" lastModified="1387781697506" id="2112037" custId="0" creationTime="1387781697506"><groupBy>srcIpAddr,destIpAddr</groupBy><groupConstraint>COUNT (*) &gt;= 1</groupConstraint><index>0</index><name>SQLInjection</name><singleConstraint>(reptDevIpAddr IN (Group@PH_SYS_DEVICE_NETWORK_IPS) OR (reptDevIpAddr IN (Group@PH_SYS_APP_NETWORK_IPS) AND eventType CONTAIN "Snort-")) AND eventType IN (Group@PH_SYS_EVENT_CodeInjectionExploit) AND eventSeverity &gt;= 7</singleConstraint></eventFilters><name>SQL Injection Attack detected by NIPS</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112037</eventFilters><incidentAttrs>
        srcIpAddr = SQLInjection.srcIpAddr, destIpAddr = SQLInjection.destIpAddr 
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_IPS_SQL_INJECTION</incidentType><triggerEventAttrList>phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_IPS_8" entityVersion="2" xmlId="Rule$PH_Rule_IPS_8" ownerId="500150" lastModified="1387781697615" id="1386861" custId="0" creationTime="1387520471093"><activatedTime>1387781697614</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects high severity Denial of Service Attacks on a server that typically exploits a code vulnerability and causes excessive resource (CPU or memory) utilization on the server</description><eventFilters entityVersion="0" xmlId="EventFilter@2112038" ownerId="500150" lastModified="1387781697614" id="2112038" custId="0" creationTime="1387781697614"><groupBy>srcIpAddr,destIpAddr</groupBy><groupConstraint>COUNT (*) &gt;= 1</groupConstraint><index>0</index><name>DoS</name><singleConstraint>(reptDevIpAddr IN (Group@PH_SYS_DEVICE_NETWORK_IPS) OR (reptDevIpAddr IN (Group@PH_SYS_APP_NETWORK_IPS) AND eventType CONTAIN "Snort-")) AND eventType IN (Group@PH_SYS_EVENT_DoSExploit) AND eventSeverity &gt;= 7</singleConstraint></eventFilters><name>DoS Attack detected by NIPS</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112038</eventFilters><incidentAttrs>
        srcIpAddr = DoS.srcIpAddr, destIpAddr = DoS.destIpAddr 
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_IPS_HOST_DOS</incidentType><triggerEventAttrList>phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_IPS_9" entityVersion="2" xmlId="Rule$PH_Rule_IPS_9" ownerId="500150" lastModified="1387781697725" id="1386862" custId="0" creationTime="1387520471204"><activatedTime>1387781697725</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects high severity distributed Denial of Service Attacks on servers or network devices. These attacks can be launched from geographically dispersed servers making them hard to defend against.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112039" ownerId="500150" lastModified="1387781697725" id="2112039" custId="0" creationTime="1387781697725"><groupBy>srcIpAddr,destIpAddr</groupBy><groupConstraint>COUNT (*) &gt;= 1</groupConstraint><index>0</index><name>DDoS</name><singleConstraint>(reptDevIpAddr IN (Group@PH_SYS_DEVICE_NETWORK_IPS) OR (reptDevIpAddr IN (Group@PH_SYS_APP_NETWORK_IPS) AND eventType CONTAIN "Snort-")) AND eventType IN (Group@PH_SYS_EVENT_DDoSExploit) AND eventSeverity &gt;= 7</singleConstraint></eventFilters><name>Distributed DoS Attack detected by NIPS</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112039</eventFilters><incidentAttrs>
        srcIpAddr = DDoS.srcIpAddr, destIpAddr = DDoS.destIpAddr 
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_IPS_HOST_DDOS</incidentType><triggerEventAttrList>phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_IPS_10" entityVersion="2" xmlId="Rule$PH_Rule_IPS_10" ownerId="500150" lastModified="1387781697837" id="1386863" custId="0" creationTime="1387520471298"><activatedTime>1387781697836</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects high severity WLAN attack</description><eventFilters entityVersion="0" xmlId="EventFilter@2112040" ownerId="500150" lastModified="1387781697836" id="2112040" custId="0" creationTime="1387781697836"><groupBy>srcMACAddr,eventType,wirelessSigName</groupBy><groupConstraint>COUNT (*) &gt;= 3</groupConstraint><index>0</index><name>WLANSig</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_WirelessSig) AND eventSeverity &gt;= 5</singleConstraint></eventFilters><name>Excessive WLAN Exploits</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112040</eventFilters><incidentAttrs>
        srcMACAddr = WLANSig.srcMACAddr,compEventType = WLANSig.eventType,wirelessSigName = WLANSig.wirelessSigName
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_WLAN_EXPLOIT</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,hostMACAddr,wirelessSigName,wlanRadioId,wlanSsid,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_IPS_11" entityVersion="2" xmlId="Rule$PH_Rule_IPS_11" ownerId="500150" lastModified="1387781697951" id="1386864" custId="0" creationTime="1387520471392"><activatedTime>1387781697950</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects high severity WLAN attack</description><eventFilters entityVersion="0" xmlId="EventFilter@2112041" ownerId="500150" lastModified="1387781697950" id="2112041" custId="0" creationTime="1387781697950"><groupBy>srcMACAddr</groupBy><groupConstraint>COUNT (DISTINCT eventType) &gt;= 3 OR COUNT(DISTINCT wirelessSigName) &gt;= 3</groupConstraint><index>0</index><name>WLANSig</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_WirelessSig)</singleConstraint></eventFilters><name>Excessive WLAN Exploits: Same Source</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112041</eventFilters><incidentAttrs>
        srcMACAddr = WLANSig.srcMACAddr
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_WLAN_EXPLOIT_SAME_SRC</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,hostMACAddr,wirelessSigName,wlanRadioId,wlanSsid,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_IIS_1" entityVersion="2" xmlId="Rule$PH_Rule_Perf_IIS_1" ownerId="500150" lastModified="1387781698822" id="1386865" custId="0" creationTime="1387520472298"><activatedTime>1387781698822</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that IIS is using at least 1.9 GB of virtual memory and is fast approaching the 2 GB limit.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112042" ownerId="500150" lastModified="1387781698822" id="2112042" custId="0" creationTime="1387781698822"><groupBy>hostIpAddr,hostName</groupBy><groupConstraint>AVG(virtMemKBytes) &gt;= 1900000  AND COUNT(*) &gt;= 2</groupConstraint><index>0</index><name>IISVMWarn</name><singleConstraint>eventType = "PH_DEV_MON_PROC_RESOURCE_UTIL" AND appName = "Microsoft IIS"</singleConstraint></eventFilters><name>IIS Virtual Memory Critical</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112042</eventFilters><fireInternalIncident>false</fireInternalIncident><incidentAttrs>
        hostIpAddr = IISVMWarn.hostIpAddr, hostName = IISVMWarn.hostName, virtMemKBytes = IISVMWarn.AVG(virtMemKBytes)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_APP_IIS_VM_CRIT</incidentType><triggerEventAttrList>phRecvTime,eventType,hostIpAddr,hostName,swProcName,appName,memUtil,cpuUtil,realMemPeakKBytes,virtMemKBytes,peakVirtMemKBytes,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Excessive_ICMP_Unreachables" entityVersion="2" xmlId="Rule$PH_Rule_Excessive_ICMP_Unreachables" ownerId="500150" lastModified="1387781699826" id="1386866" custId="0" creationTime="1387520473308"><activatedTime>1387781699826</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects an usually high frequency of ICMP destination unreachable packets between the same source and destination - this indicates routing error</description><eventFilters entityVersion="0" xmlId="EventFilter@2112044" ownerId="500150" lastModified="1387781699826" id="2112044" custId="0" creationTime="1387781699826"><groupBy>srcIpAddr, destIpAddr</groupBy><groupConstraint>COUNT (*) &gt;= 10</groupConstraint><index>0</index><name>ExcessICMPUnreach</name><singleConstraint>ipProto = 1 AND icmpType = 3 AND eventType IN ("IOS-NETFLOW-BI", Group@PH_SYS_EVENT_PermitTraffic,Group@PH_SYS_EVENT_DenyTraffic) AND srcIpAddr NOT IN (Group@PH_SYS_APP_ACCELOPS)</singleConstraint></eventFilters><name>Excessive ICMP Unreachables</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112044</eventFilters><incidentAttrs>
        srcIpAddr = ExcessICMPUnreach.srcIpAddr, destIpAddr =ExcessICMPUnreach.destIpAddr   
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_ICMP_UNREACH_SAME_HOSTS</incidentType><triggerEventAttrList>phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,icmpType,icmpCode,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_No_Response_To_Ping_Net" entityVersion="2" xmlId="Rule$PH_Rule_No_Response_To_Ping_Net" ownerId="500150" lastModified="1387781699938" id="1386867" custId="0" creationTime="1387520473420"><activatedTime>1387781699938</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects a device does not respond to ping - 10 out of 10 ping packets are lost - either the host is down or there is a routing problem</description><eventFilters entityVersion="0" xmlId="EventFilter@2112045" ownerId="500150" lastModified="1387781699937" id="2112045" custId="0" creationTime="1387781699937"><groupBy>hostIpAddr</groupBy><groupConstraint>AVG(pktLossPct) = 100 AND COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>AllPingLossNet</name><singleConstraint>eventType = "PH_DEV_MON_PING_STAT" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network)</singleConstraint></eventFilters><name>Network Device Down - no ping response</name><triggerWindow>120</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112045</eventFilters><incidentAttrs>
        hostIpAddr = AllPingLossNet.hostIpAddr
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_NON_RESPONSIVE_NET_DEV</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,hostIpAddr,pktLossPct,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Degraded_Ping_Net" entityVersion="2" xmlId="Rule$PH_Rule_Degraded_Ping_Net" ownerId="500150" lastModified="1387781700080" id="1386868" custId="0" creationTime="1387520473532"><activatedTime>1387781700080</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects a host with degraded ping response - more than 50% packet loss and more than 100 ms avg response time</description><eventFilters entityVersion="0" xmlId="EventFilter@2112047" ownerId="500150" lastModified="1387781700079" id="2112047" custId="0" creationTime="1387781700079"><groupBy>hostIpAddr</groupBy><groupConstraint>AVG(pktLossPct) &gt;= 50 AND AVG(pktLossPct) &lt; 100 AND COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>PartPingLossNet</name><singleConstraint>eventType = "PH_DEV_MON_PING_STAT" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network)</singleConstraint></eventFilters><name>Network Device Degraded - Lossy Ping Response</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112047</eventFilters><incidentAttrs>
        hostIpAddr = PartPingLossNet.hostIpAddr,pktLossPct=PartPingLossNet.AVG(pktLossPct))
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_DEGRADED_PING_NET_DEV</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,hostIpAddr,avgDurationMSec,minDurationMSec,pktLossPct,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Server" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_No_Response_To_Ping_Server" entityVersion="2" xmlId="Rule$PH_Rule_No_Response_To_Ping_Server" ownerId="500150" lastModified="1387781700194" id="1386869" custId="0" creationTime="1387520473643"><activatedTime>1387781700193</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects a device does not respond to ping - 10 out of 10 ping packets are lost - either the host is down or there is a routing problem</description><eventFilters entityVersion="0" xmlId="EventFilter@2112049" ownerId="500150" lastModified="1387781700193" id="2112049" custId="0" creationTime="1387781700193"><groupBy>hostIpAddr</groupBy><groupConstraint>AVG(pktLossPct) = 100 AND COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>AllPingLossSrv</name><singleConstraint>eventType = "PH_DEV_MON_PING_STAT" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server)</singleConstraint></eventFilters><name>Server Down - No Ping Response</name><triggerWindow>120</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112049</eventFilters><incidentAttrs>
        hostIpAddr = AllPingLossSrv.hostIpAddr
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>true</incidentFired><incidentType>EventType$PH_RULE_NON_RESPONSIVE_SERVER</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,hostIpAddr,pktLossPct,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Server" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Degraded_Ping_Server" entityVersion="2" xmlId="Rule$PH_Rule_Degraded_Ping_Server" ownerId="500150" lastModified="1387781700310" id="1386870" custId="0" creationTime="1387520473755"><activatedTime>1387781700310</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects a host with degraded ping response - more than 50% packet loss and more than 100 ms avg response time</description><eventFilters entityVersion="0" xmlId="EventFilter@2112151" ownerId="500150" lastModified="1387781700310" id="2112151" custId="0" creationTime="1387781700310"><groupBy>hostIpAddr</groupBy><groupConstraint>AVG(pktLossPct) &gt;= 50 AND AVG(pktLossPct) &lt; 100 AND COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>PartPingLossSrv</name><singleConstraint>eventType = "PH_DEV_MON_PING_STAT" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server)</singleConstraint></eventFilters><name>Server Degraded - Lossy Ping Response</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112151</eventFilters><incidentAttrs>
        hostIpAddr = PartPingLossSrv.hostIpAddr,pktLossPct=PartPingLossSrv.AVG(pktLossPct)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>true</incidentFired><incidentType>EventType$PH_RULE_DEGRADED_PING_SERVER</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,hostIpAddr,avgDurationMSec,minDurationMSec,pktLossPct,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_10" entityVersion="2" xmlId="Rule$PH_Rule_Avail_10" ownerId="500150" lastModified="1387781700426" id="1386871" custId="0" creationTime="1387520473868"><activatedTime>1387781700426</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that a non-critical interface of a network device is staying down - that is didn't come up within 5 minutes of going down</description><eventFilters entityVersion="0" xmlId="EventFilter@2112153" ownerId="500150" lastModified="1387781700426" id="2112153" custId="0" creationTime="1387781700426"><groupBy>hostIpAddr,intfName</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>IntfDownNetDev</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_NetIntfShutdown) AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network) AND isHostIntfCritical = "No"</singleConstraint></eventFilters><eventFilters entityVersion="0" xmlId="EventFilter@2112154" ownerId="500150" lastModified="1387781700426" id="2112154" custId="0" creationTime="1387781700426"><groupBy>hostIpAddr,intfName</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>1</index><name>IntfUpNetDev</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_NetIntfRestart) AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network) AND isHostIntfCritical = "No"</singleConstraint></eventFilters><filterOperators><rank>0</rank><type>NOT_FOLLOWED_BY</type></filterOperators><globalConstraint>IntfDownNetDev.hostIpAddr = IntfUpNetDev.hostIpAddr, IntfDownNetDev.intfName = IntfUpNetDev.intfName 
       </globalConstraint><name>Non-critical Network Device Interface Staying Down</name><rawFOString>NOT_FOLLOWED_BY:0</rawFOString><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112153</eventFilters><eventFilters>EventFilter@2112154</eventFilters><incidentAttrs>
        hostIpAddr = IntfDownNetDev.hostIpAddr,intfName = IntfDownNetDev.intfName
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_DOWN_INTF_NET_NONCRIT</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,hostIpAddr,intfName,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_11" entityVersion="2" xmlId="Rule$PH_Rule_Avail_11" ownerId="500150" lastModified="1387781700543" id="1386872" custId="0" creationTime="1387520473981"><activatedTime>1387781700543</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that a network interface of a server stays down - that is didn't come up within 5 minutes of going down</description><eventFilters entityVersion="0" xmlId="EventFilter@2112157" ownerId="500150" lastModified="1387781700543" id="2112157" custId="0" creationTime="1387781700543"><groupBy>hostIpAddr,intfName</groupBy><index>0</index><name>IntfDownSrv</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_NetIntfShutdown) AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server)</singleConstraint></eventFilters><eventFilters entityVersion="0" xmlId="EventFilter@2112158" ownerId="500150" lastModified="1387781700543" id="2112158" custId="0" creationTime="1387781700543"><groupBy>hostIpAddr,intfName</groupBy><index>1</index><name>IntfUpSrv</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_NetIntfRestart) AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server)</singleConstraint></eventFilters><filterOperators><rank>0</rank><type>NOT_FOLLOWED_BY</type></filterOperators><globalConstraint>IntfDownSrv.hostIpAddr = IntfUpSrv.hostIpAddr, IntfDownSrv.intfName = IntfUpSrv.intfName 
       </globalConstraint><name>Server Network Interface Staying Down</name><rawFOString>NOT_FOLLOWED_BY:0</rawFOString><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112157</eventFilters><eventFilters>EventFilter@2112158</eventFilters><incidentAttrs>
        hostIpAddr = IntfDownSrv.hostIpAddr, intfName = IntfDownSrv.intfName
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_DOWN_INTF_SERVER</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,hostIpAddr,intfName,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_12" entityVersion="2" xmlId="Rule$PH_Rule_Avail_12" ownerId="500150" lastModified="1387781700655" id="1386873" custId="0" creationTime="1387520474099"><activatedTime>1387781700655</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that a network interface of a network device is flapping - that is, coming up and down more than 3 times in 15 minutes. This may indicate hardware issues.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112159" ownerId="500150" lastModified="1387781700654" id="2112159" custId="0" creationTime="1387781700654"><groupBy>hostIpAddr,intfName</groupBy><groupConstraint>COUNT(*) &gt;= 3</groupConstraint><index>0</index><name>IntfDownNetDev</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_NetIntfShutdown) AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network)</singleConstraint></eventFilters><eventFilters entityVersion="0" xmlId="EventFilter@2112160" ownerId="500150" lastModified="1387781700654" id="2112160" custId="0" creationTime="1387781700654"><groupBy>hostIpAddr,intfName</groupBy><groupConstraint>COUNT(*) &gt;= 3</groupConstraint><index>1</index><name>IntfUpNetDev</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_NetIntfRestart) AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network)</singleConstraint></eventFilters><filterOperators><rank>0</rank><type>AND</type></filterOperators><globalConstraint>IntfDownNetDev.hostIpAddr = IntfUpNetDev.hostIpAddr, IntfDownNetDev.intfName = IntfUpNetDev.intfName 
       </globalConstraint><name>Network Device Interface Flapping</name><rawFOString>AND:0</rawFOString><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112159</eventFilters><eventFilters>EventFilter@2112160</eventFilters><incidentAttrs>
        hostIpAddr = IntfDownNetDev.hostIpAddr, intfName = IntfDownNetDev.intfName
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_INTF_FLAP_NET_DEV</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,hostIpAddr,intfName,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Server" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_13" entityVersion="2" xmlId="Rule$PH_Rule_Avail_13" ownerId="500150" lastModified="1387781700767" id="1386874" custId="0" creationTime="1387520474213"><activatedTime>1387781700767</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that a network interface of a server is flapping - that is, coming up and down more than 3 times in 15 minutes. This may indicate hardware issues.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112161" ownerId="500150" lastModified="1387781700767" id="2112161" custId="0" creationTime="1387781700767"><groupBy>hostIpAddr,intfName</groupBy><groupConstraint>COUNT(*) &gt;= 3</groupConstraint><index>0</index><name>IntfDownSrv</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_NetIntfShutdown) AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server)</singleConstraint></eventFilters><eventFilters entityVersion="0" xmlId="EventFilter@2112162" ownerId="500150" lastModified="1387781700767" id="2112162" custId="0" creationTime="1387781700767"><groupBy>hostIpAddr,intfName</groupBy><groupConstraint>COUNT(*) &gt;= 3</groupConstraint><index>1</index><name>IntfUpSrv</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_NetIntfRestart) AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server)</singleConstraint></eventFilters><filterOperators><rank>0</rank><type>AND</type></filterOperators><globalConstraint>IntfDownSrv.hostIpAddr = IntfUpSrv.hostIpAddr, IntfDownSrv.intfName = IntfUpSrv.intfName 
       </globalConstraint><name>Server Network Interface Flapping</name><rawFOString>AND:0</rawFOString><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112161</eventFilters><eventFilters>EventFilter@2112162</eventFilters><incidentAttrs>
        hostIpAddr = IntfDownSrv.hostIpAddr, intfName = IntfDownSrv.intfName
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_INTF_FLAP_SERVER</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,hostIpAddr,intfName,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_14" entityVersion="2" xmlId="Rule$PH_Rule_Avail_14" ownerId="500150" lastModified="1387781700880" id="1386875" custId="0" creationTime="1387520474332"><activatedTime>1387781700879</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects half/Full duplex mismatch on an network interface. This indicates configuration issues.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112163" ownerId="500150" lastModified="1387781700879" id="2112163" custId="0" creationTime="1387781700879"><groupBy>reptDevIpAddr,srcIntfName,destName,destIntfName</groupBy><groupConstraint>COUNT(*) &gt; 5</groupConstraint><index>0</index><name>IntfDuplexMismatch</name><singleConstraint>eventType = "IOS-CDP-DUPLEX_MISMATCH" AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_Network)</singleConstraint></eventFilters><name>Network Interface Duplex Mismatch</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112163</eventFilters><incidentAttrs>
        srcIpAddr = IntfDuplexMismatch.reptDevIpAddr,srcIntfName = IntfDuplexMismatch.srcIntfName,destName = IntfDuplexMismatch.destName,destIntfName = IntfDuplexMismatch.destIntfName	
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_INTF_DUPLEX_MISMATCH</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,srcIntfName,destName,destIntfName,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_No_Service_Response" entityVersion="2" xmlId="Rule$PH_Rule_No_Service_Response" ownerId="500150" lastModified="1387781700998" id="1386876" custId="0" creationTime="1387520474464"><activatedTime>1387781700997</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects a service suddenly went down from up state and is no longer responding to synthetic transaction monitoring probes.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112164" ownerId="500150" lastModified="1387781700997" id="2112164" custId="0" creationTime="1387781700997"><groupBy>hostName,hostIpAddr,endUserMonitorName</groupBy><groupConstraint>COUNT(*) &gt;= 2</groupConstraint><index>0</index><name>AppDown</name><singleConstraint>eventType = "PH_DEV_MON_EUM_FAIL"</singleConstraint></eventFilters><name>Service Down - No Response to STM</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112164</eventFilters><incidentAttrs>
        hostName=AppDown.hostName,hostIpAddr=AppDown.hostIpAddr,endUserMonitorName=AppDown.endUserMonitorName
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_NON_RESPONSIVE_SERVICE</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,hostName,hostIpAddr,appGroupName,endUserMonitorName,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_15" entityVersion="2" xmlId="Rule$PH_Rule_Avail_15" ownerId="500150" lastModified="1387781701150" id="1386877" custId="0" creationTime="1387520474590"><activatedTime>1387781701149</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that an important server process staying down - that is didn't come up within 5 minutes of going down</description><eventFilters entityVersion="0" xmlId="EventFilter@2112166" ownerId="500150" lastModified="1387781701149" id="2112166" custId="0" creationTime="1387781701149"><groupBy>hostIpAddr,appName,swProcName</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>AppDownSrv</name><singleConstraint>eventType = "PH_DEV_MON_PROC_STOP" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server)</singleConstraint></eventFilters><eventFilters entityVersion="0" xmlId="EventFilter@2112167" ownerId="500150" lastModified="1387781701149" id="2112167" custId="0" creationTime="1387781701149"><groupBy>hostIpAddr,appName,swProcName</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>1</index><name>AppUpSrv</name><singleConstraint>eventType = "PH_DEV_MON_PROC_START" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server)</singleConstraint></eventFilters><filterOperators><rank>0</rank><type>NOT_FOLLOWED_BY</type></filterOperators><globalConstraint>AppDownSrv.hostIpAddr = AppUpSrv.hostIpAddr, AppDownSrv.appName = AppUpSrv.appName 
       </globalConstraint><name>Important process staying Down</name><rawFOString>NOT_FOLLOWED_BY:0</rawFOString><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112166</eventFilters><eventFilters>EventFilter@2112167</eventFilters><incidentAttrs>
        hostIpAddr = AppDownSrv.hostIpAddr, appName = AppDownSrv.appName, swProcName = AppDownSrv.swProcName
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_IMPORTANT_APP_STAY_DOWN</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,hostIpAddr,hostName,appName,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_15B" entityVersion="2" xmlId="Rule$PH_Rule_Avail_15B" ownerId="500150" lastModified="1387781701263" id="1386878" custId="0" creationTime="1387520474707"><activatedTime>1387781701262</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that an important server process stopped</description><eventFilters entityVersion="0" xmlId="EventFilter@2112168" ownerId="500150" lastModified="1387781701262" id="2112168" custId="0" creationTime="1387781701262"><groupBy>hostIpAddr,appName,swProcName</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>AppDownSrv</name><singleConstraint>eventType = "PH_DEV_MON_PROC_STOP" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server)</singleConstraint></eventFilters><name>Important process down</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112168</eventFilters><incidentAttrs>
        hostIpAddr = AppDownSrv.hostIpAddr, appName = AppDownSrv.appName, swProcName = AppDownSrv.swProcName
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_IMPORTANT_APP_DOWN</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,hostIpAddr,hostName,appName,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_15C" entityVersion="2" xmlId="Rule$PH_Rule_Avail_15C" ownerId="500150" lastModified="1387781701380" id="1386879" custId="0" creationTime="1387520474828"><activatedTime>1387781701380</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that an automatically running service stopped. Currently this works for windows servers and is detected via WMI.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112170" ownerId="500150" lastModified="1387781701380" id="2112170" custId="0" creationTime="1387781701380"><groupBy>hostIpAddr,hostName,serviceName,servicePath</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>SrvcDown</name><singleConstraint>eventType = "PH_DEV_MON_AUTO_SVC_START_TO_STOP"</singleConstraint></eventFilters><name>Auto Service Stopped</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112170</eventFilters><incidentAttrs>
        hostIpAddr = SrvcDown.hostIpAddr, hostName = SrvcDown.hostName, serviceName = SrvcDown.serviceName, servicePath = SrvcDown.servicePath
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_AUTO_SRVC_DOWN</incidentType><triggerEventAttrList>phRecvTime,hostIpAddr,hostName,serviceName,servicePath,serviceDesc</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Cont_No_Service_Response" entityVersion="1" xmlId="Rule$PH_Rule_Cont_No_Service_Response" ownerId="500150" lastModified="1387781701498" id="1386880" custId="0" creationTime="1387520474948"><active>false</active><custInclusive>true</custInclusive><description>Detects a service staying down - that is went from up to down and did not come up and is no longer responding to end user monitoring probes.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112172" ownerId="500150" lastModified="1387781701497" id="2112172" custId="0" creationTime="1387781701497"><groupBy>hostName,hostIpAddr,endUserMonitorName</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>AppDown</name><singleConstraint>eventType = "PH_DEV_MON_EUM_FAIL"</singleConstraint></eventFilters><eventFilters entityVersion="0" xmlId="EventFilter@2112173" ownerId="500150" lastModified="1387781701497" id="2112173" custId="0" creationTime="1387781701497"><groupBy>hostName,hostIpAddr,endUserMonitorName</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>1</index><name>AppStillDown</name><singleConstraint>eventType = "PH_DEV_MON_EUM_SUCCESS"</singleConstraint></eventFilters><filterOperators><rank>0</rank><type>NOT_FOLLOWED_BY</type></filterOperators><globalConstraint>
	 AppStillDown.hostName = AppDown.hostName, AppStillDown.hostIpAddr = AppDown.hostIpAddr, AppStillDown.endUserMonitorName = AppDown.endUserMonitorName
       </globalConstraint><name>Service Staying Down - No Response to STM</name><rawFOString>NOT_FOLLOWED_BY:0</rawFOString><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112172</eventFilters><eventFilters>EventFilter@2112173</eventFilters><incidentAttrs>
        hostName=AppDown.hostName,hostIpAddr=AppDown.hostIpAddr,endUserMonitorName=AppDown.endUserMonitorName
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_NON_RESPONSIVE_SERVICE_CONTINUE</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,hostName,hostIpAddr,appGroupName,appPort,endUserMonitorName,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Degraded_Service_Response" entityVersion="2" xmlId="Rule$PH_Rule_Degraded_Service_Response" ownerId="500150" lastModified="1387781701616" id="1386881" custId="0" creationTime="1387520475066"><activatedTime>1387781701615</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that the response time of a end user monitored service is greater than a defined threshold (average over 3 samples in 15 minutes is more than 5 seconds)</description><eventFilters entityVersion="0" xmlId="EventFilter@2112175" ownerId="500150" lastModified="1387781701615" id="2112175" custId="0" creationTime="1387781701615"><groupBy>hostName,hostIpAddr,endUserMonitorName,endUserMonitorStep</groupBy><groupConstraint>COUNT(*) &gt;= 3 AND AVG(appResponseTimeMSec) &gt; 5000</groupConstraint><index>0</index><name>ResponseHigh</name><singleConstraint>eventType = "PH_DEV_MON_EUM_SUCCESS"</singleConstraint></eventFilters><name>Service Degraded - Slow Response to STM</name><triggerWindow>900</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112175</eventFilters><incidentAttrs>
        hostName=ResponseHigh.hostName,hostIpAddr=ResponseHigh.hostIpAddr,endUserMonitorName=ResponseHigh.endUserMonitorName,endUserMonitorStep=ResponseHigh.endUserMonitorStep,appResponseTimeMSec=ResponseHigh.AVG(appResponseTimeMSec)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_DEGRADED_SERVICE</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,hostName,hostIpAddr,appGroupName,appName,endUserMonitorName,endUserMonitorStep,appResponseTimeMSec</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_21" entityVersion="2" xmlId="Rule$PH_Rule_Avail_21" ownerId="500150" lastModified="1387781701734" id="1386882" custId="0" creationTime="1387520475187"><activatedTime>1387781701733</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects a network device hardware issue that is of warning criticality.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112177" ownerId="500150" lastModified="1387781701733" id="2112177" custId="0" creationTime="1387781701733"><groupBy>hostName,hostIpAddr,hwComponentName,hwComponentStatus</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>HwIssueWarn</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_HwProblem) AND eventSeverityCat = "MEDIUM" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network)</singleConstraint></eventFilters><name>Network Device Hardware Warning</name><triggerWindow>900</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112177</eventFilters><incidentAttrs>
        hostName=HwIssueWarn.hostName,hostIpAddr=HwIssueWarn.hostIpAddr,hwComponentName=HwIssueWarn.hwComponentName,hwComponentStatus = HwIssueWarn.hwComponentStatus
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_NET_HW_WARN</incidentType><triggerEventAttrList>phRecvTime,hostName,hostIpAddr,hwStatusCode,hwComponentName,hwComponentStatus,hwFailReason,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_22" entityVersion="2" xmlId="Rule$PH_Rule_Avail_22" ownerId="500150" lastModified="1387781701847" id="1386883" custId="0" creationTime="1387520475286"><activatedTime>1387781701846</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects a critical network device hardware alert.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112178" ownerId="500150" lastModified="1387781701846" id="2112178" custId="0" creationTime="1387781701846"><groupBy>hostName,hostIpAddr,hwComponentName,hwComponentStatus</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>HwIssueCrit</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_HwProblem) AND eventSeverityCat = "HIGH" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network)</singleConstraint></eventFilters><name>Network Device Hardware Critical</name><triggerWindow>900</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112178</eventFilters><incidentAttrs>
        hostName=HwIssueCrit.hostName,hostIpAddr=HwIssueCrit.hostIpAddr,hwComponentName=HwIssueCrit.hwComponentName,hwComponentStatus = HwIssueCrit.hwComponentStatus
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_NET_HW_CRITICAL</incidentType><triggerEventAttrList>phRecvTime,hostName,hostIpAddr,hwStatusCode,hwComponentName,hwComponentStatus,hwFailReason,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Server" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_23" entityVersion="2" xmlId="Rule$PH_Rule_Avail_23" ownerId="500150" lastModified="1387781701963" id="1386884" custId="0" creationTime="1387520475387"><activatedTime>1387781701962</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects a server hardware issue that is of warning criticality.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112179" ownerId="500150" lastModified="1387781701962" id="2112179" custId="0" creationTime="1387781701962"><groupBy>hostName,hostIpAddr,hwComponentName,hwComponentStatus</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>HwIssueWarn</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_HwProblem) AND eventSeverityCat = "MEDIUM" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server)</singleConstraint></eventFilters><name>Server Hardware Warning</name><triggerWindow>900</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112179</eventFilters><incidentAttrs>
        hostName=HwIssueWarn.hostName,hostIpAddr=HwIssueWarn.hostIpAddr,hwComponentName=HwIssueWarn.hwComponentName,hwComponentStatus = HwIssueWarn.hwComponentStatus
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_SERVER_HW_WARN</incidentType><triggerEventAttrList>phRecvTime,hostName,hostIpAddr,hwStatusCode,hwComponentName,hwComponentStatus,hwFailReason,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Server" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_24" entityVersion="2" xmlId="Rule$PH_Rule_Avail_24" ownerId="500150" lastModified="1387781702077" id="1386885" custId="0" creationTime="1387520475494"><activatedTime>1387781702076</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects a critical server hardware alert.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112180" ownerId="500150" lastModified="1387781702076" id="2112180" custId="0" creationTime="1387781702076"><groupBy>hostName,hostIpAddr,hwComponentName,hwComponentStatus</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>HwIssueCrit</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_HwProblem) AND eventSeverityCat = "HIGH" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server)</singleConstraint></eventFilters><name>Server Hardware Critical</name><triggerWindow>900</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112180</eventFilters><incidentAttrs>
        hostName=HwIssueCrit.hostName,hostIpAddr=HwIssueCrit.hostIpAddr,hwComponentName=HwIssueCrit.hwComponentName,hwComponentStatus = HwIssueCrit.hwComponentStatus
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_SERVER_HW_CRITICAL</incidentType><triggerEventAttrList>phRecvTime,hostName,hostIpAddr,hwStatusCode,hwComponentName,hwComponentStatus,hwFailReason,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Server" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_25" entityVersion="2" xmlId="Rule$PH_Rule_Avail_25" ownerId="500150" lastModified="1387781702192" id="1386886" custId="0" creationTime="1387520475604"><activatedTime>1387781702191</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects a low TCP/UDP port on a server staying down - that is, went from up to down and did not come up in 10 min</description><eventFilters entityVersion="0" xmlId="EventFilter@2112181" ownerId="500150" lastModified="1387781702191" id="2112181" custId="0" creationTime="1387781702191"><groupBy>hostName,hostIpAddr,serviceName,ipProto,ipPort</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>PortDown</name><singleConstraint>eventType = "PH_DEV_MON_PORT_CLOSE" AND ipPort &lt;= 1024 AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server)</singleConstraint></eventFilters><eventFilters entityVersion="0" xmlId="EventFilter@2112182" ownerId="500150" lastModified="1387781702191" id="2112182" custId="0" creationTime="1387781702191"><groupBy>hostName,hostIpAddr,serviceName,ipProto,ipPort</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>1</index><name>PortStillDown</name><singleConstraint>eventType = "PH_DEV_MON_PORT_OPEN" AND ipPort &lt;= 1024 AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server)</singleConstraint></eventFilters><filterOperators><rank>0</rank><type>NOT_FOLLOWED_BY</type></filterOperators><globalConstraint>
	 PortStillDown.hostName = PortDown.hostName, PortStillDown.hostIpAddr = PortDown.hostIpAddr, PortStillDown.serviceName = PortDown.serviceName, PortStillDown.ipPort = PortDown.ipPort, PortStillDown.ipProto = PortDown.ipProto
       </globalConstraint><name>Server Network Low Port Staying Down</name><rawFOString>NOT_FOLLOWED_BY:0</rawFOString><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112181</eventFilters><eventFilters>EventFilter@2112182</eventFilters><incidentAttrs>
        hostName=PortDown.hostName,hostIpAddr=PortDown.hostIpAddr,serviceName=PortDown.serviceName,ipPort=PortDown.ipPort,ipProto=PortDown.ipProto
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_NETWORK_PORT_STAY_DOWN</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,hostName,hostIpAddr,serviceName,ipProto,ipPort,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_31" entityVersion="2" xmlId="Rule$PH_Rule_Avail_31" ownerId="500150" lastModified="1387781702349" id="1386887" custId="0" creationTime="1387520475704"><activatedTime>1387781702348</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that a BGP neighbor is down</description><eventFilters entityVersion="0" xmlId="EventFilter@2112183" ownerId="500150" lastModified="1387781702348" id="2112183" custId="0" creationTime="1387781702348"><groupBy>reptDevIpAddr,destIpAddr</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>BGPDown</name><singleConstraint>eventType = "IOS-BGP-ADJCHANGE-TO-DOWN"</singleConstraint></eventFilters><name>BGP Neighbor Down</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112183</eventFilters><incidentAttrs>
        srcIpAddr = BGPDown.reptDevIpAddr,destIpAddr = BGPDown.destIpAddr 
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_BGP_NBR_DOWN</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,srcIpAddr,destIpAddr,srcASNum,destASNum,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_32" entityVersion="2" xmlId="Rule$PH_Rule_Avail_32" ownerId="500150" lastModified="1387781702470" id="1386888" custId="0" creationTime="1387520475813"><activatedTime>1387781702469</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that a OSPF neighbor is down</description><eventFilters entityVersion="0" xmlId="EventFilter@2112185" ownerId="500150" lastModified="1387781702469" id="2112185" custId="0" creationTime="1387781702469"><groupBy>reptDevIpAddr,destIpAddr,srcIntfName</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>OSPFDown</name><singleConstraint>eventType = "IOS-OSPF-ADJCHG-TO-DOWN"</singleConstraint></eventFilters><name>OSPF Neighbor Down</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112185</eventFilters><incidentAttrs>
        srcIpAddr = OSPFDown.reptDevIpAddr,srcIntfName = OSPFDown.srcIntfName,destIpAddr = OSPFDown.destIpAddr 
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_OSPF_NBR_DOWN</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,srcIpAddr,destIpAddr,ospfAreaId,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Storage" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_33" entityVersion="2" xmlId="Rule$PH_Rule_Avail_33" ownerId="500150" lastModified="1387781702593" id="1386889" custId="0" creationTime="1387520475921"><activatedTime>1387781702592</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects a storage hardware issue that is of warning criticality.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112187" ownerId="500150" lastModified="1387781702591" id="2112187" custId="0" creationTime="1387781702591"><groupBy>hostName,hostIpAddr,hwComponentName,hwComponentStatus</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>HwIssueWarn</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_HwProblem) AND eventSeverityCat = "MEDIUM" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Storage)</singleConstraint></eventFilters><name>Storage Hardware Warning</name><triggerWindow>900</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112187</eventFilters><incidentAttrs>
        hostName=HwIssueWarn.hostName,hostIpAddr=HwIssueWarn.hostIpAddr,hwComponentName=HwIssueWarn.hwComponentName,hwComponentStatus = HwIssueWarn.hwComponentStatus
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_STORAGE_HW_WARN</incidentType><triggerEventAttrList>phRecvTime,hostName,hostIpAddr,hwStatusCode,hwComponentName,hwComponentStatus,hwFailReason,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Storage" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_34" entityVersion="2" xmlId="Rule$PH_Rule_Avail_34" ownerId="500150" lastModified="1387781702708" id="1386890" custId="0" creationTime="1387520476034"><activatedTime>1387781702706</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects a critical storage hardware alert.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112188" ownerId="500150" lastModified="1387781702706" id="2112188" custId="0" creationTime="1387781702706"><groupBy>hostName,hostIpAddr,hwComponentName,hwComponentStatus</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>HwIssueCrit</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_HwProblem) AND eventSeverityCat = "HIGH" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Storage)</singleConstraint></eventFilters><name>Storage Hardware Critical</name><triggerWindow>900</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112188</eventFilters><incidentAttrs>
        hostName=HwIssueCrit.hostName,hostIpAddr=HwIssueCrit.hostIpAddr,hwComponentName=HwIssueCrit.hwComponentName,hwComponentStatus = HwIssueCrit.hwComponentStatus
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_STORAGE_HW_CRITICAL</incidentType><triggerEventAttrList>phRecvTime,hostName,hostIpAddr,hwStatusCode,hwComponentName,hwComponentStatus,hwFailReason,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Storage" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_35" entityVersion="2" xmlId="Rule$PH_Rule_Avail_35" ownerId="500150" lastModified="1387781702824" id="1386891" custId="0" creationTime="1387520476140"><activatedTime>1387781702823</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that a host has logged in but not registered</description><eventFilters entityVersion="0" xmlId="EventFilter@2112189" ownerId="500150" lastModified="1387781702823" id="2112189" custId="0" creationTime="1387781702823"><groupBy>srcName,srcIpAddr,srcWWN,destName,spPortName</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>UnregHost</name><singleConstraint>eventType = "PH_RULE_CLARION_UNREG_HOST"</singleConstraint></eventFilters><name>Unregistered EMC Clariion Host</name><triggerWindow>900</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112189</eventFilters><incidentAttrs>
        srcName=UnregHost.srcName,srcIpAddr=UnregHost.srcIpAddr,srcWWN=UnregHost.srcWWN,destName=UnregHost.destName,spPortName=UnregHost.spPortName
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_STORAGE_CLARION_UNREG_HOST</incidentType><triggerEventAttrList>phRecvTime,srcName,srcIpAddr,srcWWN,destName,spPortName,destIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="System" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_36" entityVersion="2" xmlId="Rule$PH_Rule_Avail_36" ownerId="500150" lastModified="1387781702941" id="1386892" custId="0" creationTime="1387520476247"><activatedTime>1387781702940</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that SNMP service is unavailable</description><eventFilters entityVersion="0" xmlId="EventFilter@2112190" ownerId="500150" lastModified="1387781702940" id="2112190" custId="0" creationTime="1387781702940"><groupBy>hostIpAddr,hostName</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>SnmpDown</name><singleConstraint>eventType = "PH_JOB_STAT" AND jobName = "SNMP_PING_STATUS" AND (jobStatus = 1 OR jobStatus = 2) AND phEventCategory = 3</singleConstraint></eventFilters><name>SNMP Service Unavailable</name><triggerWindow>240</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112190</eventFilters><incidentAttrs>
        hostIpAddr = SnmpDown.hostIpAddr, hostName = SnmpDown.hostName
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>true</incidentFired><incidentType>EventType$PH_RULE_SNMP_DOWN</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,hostIpAddr,hostName,eventType,jobName,jobType,jobStatus,jobDetail,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="System" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_37" entityVersion="2" xmlId="Rule$PH_Rule_Avail_37" ownerId="500150" lastModified="1387781703078" id="1386893" custId="0" creationTime="1387520476357"><activatedTime>1387781703076</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that WMI service is unavailable</description><eventFilters entityVersion="0" xmlId="EventFilter@2112192" ownerId="500150" lastModified="1387781703076" id="2112192" custId="0" creationTime="1387781703076"><groupBy>hostIpAddr,hostName</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>WmiDown</name><singleConstraint>eventType = "PH_JOB_STAT" AND jobName = "WMI_PING_STATUS" AND (jobStatus = 1 OR jobStatus = 2) AND phEventCategory = 3</singleConstraint></eventFilters><name>WMI Service Unavailable</name><triggerWindow>240</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112192</eventFilters><incidentAttrs>
        hostIpAddr = WmiDown.hostIpAddr, hostName = WmiDown.hostName
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>true</incidentFired><incidentType>EventType$PH_RULE_WMI_DOWN</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,hostIpAddr,hostName,eventType,jobName,jobType,jobStatus,jobDetail,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Server" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_38" entityVersion="2" xmlId="Rule$PH_Rule_Avail_38" ownerId="500150" lastModified="1387781703265" id="1386894" custId="0" creationTime="1387520476467"><activatedTime>1387781703264</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects windows disk controller issues</description><eventFilters entityVersion="0" xmlId="EventFilter@2112194" ownerId="500150" lastModified="1387781703264" id="2112194" custId="0" creationTime="1387781703264"><groupBy>reptDevIpAddr</groupBy><groupConstraint>COUNT(*) &gt;= 3</groupConstraint><index>0</index><name>WinDiskControl</name><singleConstraint>eventType IN ("Win-System-11","Win-System-51","Win-System-57") AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_Server)</singleConstraint></eventFilters><name>Windows Disk controller problem</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112194</eventFilters><incidentAttrs>
        reptDevIpAddr = WinDiskControl.reptDevIpAddr
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_WIN_DISK_CONTROLLLER_PROBLEM</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,hostIpAddr,eventSource,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_39" entityVersion="2" xmlId="Rule$PH_Rule_Avail_39" ownerId="500150" lastModified="1387781703389" id="1386895" custId="0" creationTime="1387520476583"><activatedTime>1387781703387</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that a EIGRP neighbor is down</description><eventFilters entityVersion="0" xmlId="EventFilter@2112195" ownerId="500150" lastModified="1387781703387" id="2112195" custId="0" creationTime="1387781703387"><groupBy>reptDevIpAddr,destIpAddr</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>EIGRPDown</name><singleConstraint>eventType IN ("IOS-EIGRP-NBRCHANGE_DUAL-TO-DOWN","IOS-DUAL-NBRCHANGE-TO-DOWN")</singleConstraint></eventFilters><name>EIGRP Neighbor Down</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112195</eventFilters><incidentAttrs>srcIpAddr = EIGRPDown.reptDevIpAddr,destIpAddr = EIGRPDown.destIpAddr</incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_EIGRP_NBR_DOWN</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,intfName,destIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_40" entityVersion="2" xmlId="Rule$PH_Rule_Avail_40" ownerId="500150" lastModified="1387781703513" id="1386896" custId="0" creationTime="1387520476690"><activatedTime>1387781703511</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that a critical network interface of a network device is staying down - that is didn't come up within 5 minutes of going down. An interface is critical if it appears in Critical Interface list in GUI</description><eventFilters entityVersion="0" xmlId="EventFilter@2112197" ownerId="500150" lastModified="1387781703511" id="2112197" custId="0" creationTime="1387781703511"><groupBy>hostIpAddr,intfName</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>IntfDownNetDev</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_NetIntfShutdown) AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network) AND isHostIntfCritical = "Yes"</singleConstraint></eventFilters><eventFilters entityVersion="0" xmlId="EventFilter@2112198" ownerId="500150" lastModified="1387781703511" id="2112198" custId="0" creationTime="1387781703511"><groupBy>hostIpAddr,intfName</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>1</index><name>IntfUpNetDev</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_NetIntfRestart) AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network) AND isHostIntfCritical = "Yes"</singleConstraint></eventFilters><filterOperators><rank>0</rank><type>NOT_FOLLOWED_BY</type></filterOperators><globalConstraint>IntfDownNetDev.hostIpAddr = IntfUpNetDev.hostIpAddr, IntfDownNetDev.intfName = IntfUpNetDev.intfName 
       </globalConstraint><name>Critical Network Device Interface Staying Down</name><rawFOString>NOT_FOLLOWED_BY:0</rawFOString><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112197</eventFilters><eventFilters>EventFilter@2112198</eventFilters><incidentAttrs>
        hostIpAddr = IntfDownNetDev.hostIpAddr,intfName = IntfDownNetDev.intfName
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_DOWN_INTF_NET_CRIT</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,hostIpAddr,intfName,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_41" entityVersion="2" xmlId="Rule$PH_Rule_Avail_41" ownerId="500150" lastModified="1387781703638" id="1386897" custId="0" creationTime="1387520476796"><activatedTime>1387781703636</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects Riverbed system health degraded</description><eventFilters entityVersion="0" xmlId="EventFilter@2112201" ownerId="500150" lastModified="1387781703636" id="2112201" custId="0" creationTime="1387781703636"><groupBy>hostName</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>HwIssueWarn</name><singleConstraint>eventType = "PH_DEV_MON_SYS_STATUS" AND systemStatus IN ("Degraded","Admission Control")</singleConstraint></eventFilters><name>Riverbed Steelhead System Health Degraded</name><triggerWindow>900</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112201</eventFilters><incidentAttrs>
        hostName=HwIssueWarn.hostName
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_RVBD_SYS_HEALTH_WARN</incidentType><triggerEventAttrList>phRecvTime,hostName,hostIpAddr,hwStatusCode,systemStatus,svcStatus,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_42" entityVersion="2" xmlId="Rule$PH_Rule_Avail_42" ownerId="500150" lastModified="1387781703760" id="1386898" custId="0" creationTime="1387520476901"><activatedTime>1387781703758</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects Riverbed system health degraded</description><eventFilters entityVersion="0" xmlId="EventFilter@2112202" ownerId="500150" lastModified="1387781703758" id="2112202" custId="0" creationTime="1387781703758"><groupBy>hostName</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>HwIssueWarn</name><singleConstraint>eventType = "PH_DEV_MON_SYS_STATUS" AND systemStatus = "Critical"</singleConstraint></eventFilters><name>Riverbed Steelhead System Health Critical</name><triggerWindow>900</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112202</eventFilters><incidentAttrs>
        hostName=HwIssueWarn.hostName
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_RVBD_SYS_HEALTH_CRIT</incidentType><triggerEventAttrList>phRecvTime,hostName,hostIpAddr,hwStatusCode,systemStatus,svcStatus,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_43" entityVersion="2" xmlId="Rule$PH_Rule_Avail_43" ownerId="500150" lastModified="1387781703883" id="1386899" custId="0" creationTime="1387520477009"><activatedTime>1387781703881</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects Riverbed service health degraded</description><eventFilters entityVersion="0" xmlId="EventFilter@2112203" ownerId="500150" lastModified="1387781703881" id="2112203" custId="0" creationTime="1387781703881"><groupBy>hostName</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>HwIssueWarn</name><singleConstraint>eventType = "PH_DEV_MON_SYS_STATUS" AND svcStatus = "Stopped"</singleConstraint></eventFilters><name>Riverbed Steelhead Service Health Critical</name><triggerWindow>900</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112203</eventFilters><incidentAttrs>
        hostName=HwIssueWarn.hostName
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_RVBD_SVC_HEALTH_CRIT</incidentType><triggerEventAttrList>phRecvTime,hostName,hostIpAddr,hwStatusCode,systemStatus,svcStatus,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="System" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_44" entityVersion="2" xmlId="Rule$PH_Rule_Avail_44" ownerId="500150" lastModified="1387781704007" id="1387000" custId="0" creationTime="1387520477116"><activatedTime>1387781704005</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detect license issues for operational systems and software in the data center - this may include license about to expire or already expired, or license limiting system operation</description><eventFilters entityVersion="0" xmlId="EventFilter@2112204" ownerId="500150" lastModified="1387781704005" id="2112204" custId="0" creationTime="1387781704005"><groupBy>reptDevIpAddr, eventType</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>License</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_LicenseExpired)</singleConstraint></eventFilters><name>License Issue</name><triggerWindow>900</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112204</eventFilters><incidentAttrs>
        reptDevIpAddr=License.reptDevIpAddr,compEventType = License.eventType
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_EXT_LICENSE_ISSUE</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,eventType,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="System" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_45" entityVersion="2" xmlId="Rule$PH_Rule_Avail_45" ownerId="500150" lastModified="1387781704160" id="1387001" custId="0" creationTime="1387520477226"><activatedTime>1387781704158</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detect critical hardware issues for operational network devices, server hardware and environmental system in the data center - this may include temperature, fan and power supply issues. These are detected from syslog and traps.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112205" ownerId="500150" lastModified="1387781704158" id="2112205" custId="0" creationTime="1387781704158"><groupBy>reptDevIpAddr, eventType, hwComponentName</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>License</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_LicenseExpired) AND eventSeverityCat = "HIGH"</singleConstraint></eventFilters><name>Hardware Critical</name><triggerWindow>900</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112205</eventFilters><incidentAttrs>
        reptDevIpAddr=License.reptDevIpAddr,compEventType = License.eventType,
	hwComponentName = License.hwComponentName
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_HARDWARE_CRITICAL</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,eventType,hwComponentName,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="System" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_46" entityVersion="2" xmlId="Rule$PH_Rule_Avail_46" ownerId="500150" lastModified="1387781704278" id="1387002" custId="0" creationTime="1387520477330"><activatedTime>1387781704276</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detect hardware warnings  for operational network devices, server hardware and environmental system in the data center - this may include temperature, fan and power supply issues. These are detected from syslog and traps</description><eventFilters entityVersion="0" xmlId="EventFilter@2112206" ownerId="500150" lastModified="1387781704276" id="2112206" custId="0" creationTime="1387781704276"><groupBy>reptDevIpAddr, eventType, hwComponentName</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>License</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_LicenseExpired) AND eventSeverityCat = "MEDIUM"</singleConstraint></eventFilters><name>Hardware Warning</name><triggerWindow>900</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112206</eventFilters><incidentAttrs>
        reptDevIpAddr=License.reptDevIpAddr,compEventType = License.eventType,
	hwComponentName = License.hwComponentName
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_HARDWARE_WARNING</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,eventType,hwComponentName,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_47" entityVersion="2" xmlId="Rule$PH_Rule_Avail_47" ownerId="500150" lastModified="1387781704399" id="1387003" custId="0" creationTime="1387520477434"><activatedTime>1387781704397</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detect mail hard bounce delivery failures</description><eventFilters entityVersion="0" xmlId="EventFilter@2112207" ownerId="500150" lastModified="1387781704397" id="2112207" custId="0" creationTime="1387781704397"><groupBy>reptDevIpAddr, receiverMailAddr, senderMailAddr,smtpFailCode</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>MailError</name><singleConstraint>eventType = "Cisco-IronPort-Mail-HardBounce"</singleConstraint></eventFilters><name>Mail Hard Bounce Delivery Failures</name><triggerWindow>900</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112207</eventFilters><incidentAttrs>
        reptDevIpAddr=MailError.reptDevIpAddr,receiverMailAddr=MailError.receiverMailAddr, 
	senderMailAddr=MailError.senderMailAddr,smtpFailCode=MailError.smtpFailCode
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_MAIL_DELIVERY_ERROR</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,receiverMailAddr,senderMailAddr,mailSubject,smtpFailCode,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Other" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Vuln_1" entityVersion="2" xmlId="Rule$PH_Rule_Vuln_1" ownerId="500150" lastModified="1387781705227" id="1387004" custId="0" creationTime="1387520478303"><activatedTime>1387781705227</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects a high severity vulnerability reported by a vulnerability scanner</description><eventFilters entityVersion="0" xmlId="EventFilter@2112214" ownerId="500150" lastModified="1387781705227" id="2112214" custId="0" creationTime="1387781705227"><groupBy>hostName,vulnName</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>ScannerHighSev</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_Vulnerability) AND reptVendor IN ("Qualys", "Nessus", "nCircle", "Rapid7") AND eventSeverity &gt;= 8</singleConstraint></eventFilters><name>Scanner found severe vulnerability</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112214</eventFilters><incidentAttrs>
        hostName = ScannerHighSev.hostName, vulnName = ScannerHighSev.vulnName
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_HIGH_SEV_SCANNER</incidentType><triggerEventAttrList>scanEnd,reptVendor,hostName,osType,vulnName,eventSeverity,vulnType,vulnCVEId,vulnBugTraqID,vulnScore,vulnConseq,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Other" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Vuln_2" entityVersion="2" xmlId="Rule$PH_Rule_Vuln_2" ownerId="500150" lastModified="1387781705336" id="1387005" custId="0" creationTime="1387520478418"><activatedTime>1387781705336</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that host anti-virus or content inspection devices found a virus but could not rremediate it</description><eventFilters entityVersion="0" xmlId="EventFilter@2112215" ownerId="500150" lastModified="1387781705336" id="2112215" custId="0" creationTime="1387781705336"><groupBy>hostIpAddr</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>VirusFound</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_Worm_Remedy_Failed) AND reptDevIpAddr IN (Group@PH_SYS_APP_SEC_MGMT,Group@PH_SYS_DEVICE_SEC_GW)</singleConstraint></eventFilters><name>Virus found but not remediated</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112215</eventFilters><incidentAttrs>
        hostIpAddr = VirusFound.hostIpAddr
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_VIRUS_NON_REMEDY</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,eventType,hostIpAddr,computer,user,virusName,virusType,fileName,virusAction,virusQuarantStatus,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Other" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Vuln_3" entityVersion="2" xmlId="Rule$PH_Rule_Vuln_3" ownerId="500150" lastModified="1387781705445" id="1387006" custId="0" creationTime="1387520478528"><activatedTime>1387781705444</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that host anti-virus or content inspection devices found a Spam/Malicious Mail Attachment but could not rremediate it. The sender is sending to 5 or more distinct receiver mail addresses</description><eventFilters entityVersion="0" xmlId="EventFilter@2112216" ownerId="500150" lastModified="1387781705444" id="2112216" custId="0" creationTime="1387781705444"><groupBy>hostIpAddr,senderMailAddr</groupBy><groupConstraint>COUNT(DISTINCT receiverMailAddr) &gt;= 5</groupConstraint><index>0</index><name>AttachFound</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_MailMalware_Found)</singleConstraint></eventFilters><name>Spam/Malicious Mail Attachment found but not remediated</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112216</eventFilters><incidentAttrs>
        srcIpAddr = AttachFound.hostIpAddr, senderMailAddr = AttachFound.senderMailAddr
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_MAILATTACH_NON_REMEDY</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,eventType,srcIpAddr,senderMailAddr,receiverMailAddr,mailSubject,vendor,spamScore,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Other" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Vuln_4" entityVersion="2" xmlId="Rule$PH_Rule_Vuln_4" ownerId="500150" lastModified="1387781705556" id="1387007" custId="0" creationTime="1387520478639"><activatedTime>1387781705556</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that host anti-virus or content inspection devices found a spyware but could not remediate it</description><eventFilters entityVersion="0" xmlId="EventFilter@2112217" ownerId="500150" lastModified="1387781705556" id="2112217" custId="0" creationTime="1387781705556"><groupBy>hostIpAddr</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>SpywareFound</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_Spyware_Remedy_Failed) AND reptDevIpAddr IN (Group@PH_SYS_APP_SEC_MGMT,Group@PH_SYS_DEVICE_SEC_GW)</singleConstraint></eventFilters><name>Spyware found but not remediated</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112217</eventFilters><incidentAttrs>
        hostIpAddr = SpywareFound.hostIpAddr
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_SPYWARE_NON_REMEDY</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,eventType,hostIpAddr,computer,user,fileName,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Other" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Vuln_5" entityVersion="2" xmlId="Rule$PH_Rule_Vuln_5" ownerId="500150" lastModified="1387781705665" id="1387008" custId="0" creationTime="1387520478748"><activatedTime>1387781705664</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects potential virus outbreak - same virus found on three distinct computers/IP addresses</description><eventFilters entityVersion="0" xmlId="EventFilter@2112218" ownerId="500150" lastModified="1387781705664" id="2112218" custId="0" creationTime="1387781705664"><groupBy>virusName</groupBy><groupConstraint>COUNT(DISTINCT computer) &gt;= 3 OR COUNT(DISTINCT hostIpAddr) &gt;= 3</groupConstraint><index>0</index><name>VirusOutbreak</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_Worm_Found) AND reptDevIpAddr IN (Group@PH_SYS_APP_SEC_MGMT,Group@PH_SYS_DEVICE_SEC_GW)</singleConstraint></eventFilters><name>Virus outbreak</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112218</eventFilters><incidentAttrs>
        virusName = VirusOutbreak.virusName
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_VIRUS_OUTBREAK</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,eventType,hostIpAddr,computer,user,virusName,virusType,fileName,virusAction,virusQuarantStatus,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Other" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Vuln_6" entityVersion="2" xmlId="Rule$PH_Rule_Vuln_6" ownerId="500150" lastModified="1387781705773" id="1387009" custId="0" creationTime="1387520478858"><activatedTime>1387781705772</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects DNS traffic to malware domains</description><eventFilters entityVersion="0" xmlId="EventFilter@2112219" ownerId="500150" lastModified="1387781705772" id="2112219" custId="0" creationTime="1387781705772"><groupBy>srcIpAddr, destName</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>MalwareDomain</name><singleConstraint>destName IN (Group@PH_SYS_MAL_DOMAIN_MDL_2012,Group@PH_SYS_MAL_DOMAIN_MDL_2013) AND eventType IN ("BIND_DNS_A_Query","BIND_DNS_PTR_Query","MS_DNS_A_Query","MS_DNS_PTR_Query","MS_DNS_A_Success","MS_DNS_A_Fail","MS_DNS_PTR_Success","MS_DNS_PTR_Fail")</singleConstraint></eventFilters><name>DNS Traffic to Malware Domains</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112219</eventFilters><incidentAttrs>
        srcIpAddr = MalwareDomain.srcIpAddr, destName = MalwareDomain.destName
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_DNS_MALWARE_DOMAIN</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,eventType,srcIpAddr,destName,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Vuln_7" entityVersion="2" xmlId="Rule$PH_Rule_Vuln_7" ownerId="500150" lastModified="1387781705882" id="1387010" custId="0" creationTime="1387520478970"><activatedTime>1387781705882</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects network traffic to emerging threat shadow server Command and Control Server List</description><eventFilters entityVersion="0" xmlId="EventFilter@2112220" ownerId="500150" lastModified="1387781705882" id="2112220" custId="0" creationTime="1387781705882"><groupBy>srcIpAddr, destIpAddr</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>Shadowserver</name><singleConstraint>destIpAddr IN (Group@PH_SYS_EMER_THREAT_SHADOW_SERVER_CNC) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_FIREWALL)</singleConstraint></eventFilters><name>Traffic to Emerging Threat Shadow server List</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112220</eventFilters><incidentAttrs>
        srcIpAddr = Shadowserver.srcIpAddr, destIpAddr = Shadowserver.destIpAddr
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_TO_EMERGING_THREAT_SHADOW_SERVER</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Vuln_8" entityVersion="2" xmlId="Rule$PH_Rule_Vuln_8" ownerId="500150" lastModified="1387781705991" id="1387011" custId="0" creationTime="1387520479081"><activatedTime>1387781705991</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects network traffic to emerging threat Russian Business Network (RBN) List</description><eventFilters entityVersion="0" xmlId="EventFilter@2112221" ownerId="500150" lastModified="1387781705991" id="2112221" custId="0" creationTime="1387781705991"><groupBy>srcIpAddr, destIpAddr</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>RBN</name><singleConstraint>destIpAddr IN (Group@PH_SYS_EMER_THREAT_RBN) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_FIREWALL)</singleConstraint></eventFilters><name>Traffic to Emerging Threat RBN List</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112221</eventFilters><incidentAttrs>
        srcIpAddr = RBN.srcIpAddr, destIpAddr = RBN.destIpAddr
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_TO_EMERGING_THREAT_RBN</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Vuln_9" entityVersion="2" xmlId="Rule$PH_Rule_Vuln_9" ownerId="500150" lastModified="1387781706101" id="1387012" custId="0" creationTime="1387520479195"><activatedTime>1387781706100</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects network traffic to emerging threat Spamhaus List</description><eventFilters entityVersion="0" xmlId="EventFilter@2112222" ownerId="500150" lastModified="1387781706100" id="2112222" custId="0" creationTime="1387781706100"><groupBy>srcIpAddr, destIpAddr</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>Spamhaus</name><singleConstraint>destIpAddr IN (Group@PH_SYS_EMER_THREAT_SPAMHAUS) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_FIREWALL)</singleConstraint></eventFilters><name>Traffic to Emerging Threat Spamhaus List</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112222</eventFilters><incidentAttrs>
        srcIpAddr = Spamhaus.srcIpAddr, destIpAddr = Spamhaus.destIpAddr
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_TO_EMERGING_THREAT_SPAMHAUS</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Vuln_10" entityVersion="2" xmlId="Rule$PH_Rule_Vuln_10" ownerId="500150" lastModified="1387781706211" id="1387013" custId="0" creationTime="1387520479307"><activatedTime>1387781706210</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects network traffic to emerging threat Dshield List</description><eventFilters entityVersion="0" xmlId="EventFilter@2112223" ownerId="500150" lastModified="1387781706210" id="2112223" custId="0" creationTime="1387781706210"><groupBy>srcIpAddr, destIpAddr</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>Spamhaus</name><singleConstraint>destIpAddr IN (Group@PH_SYS_EMER_THREAT_DSHIELD) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_FIREWALL)</singleConstraint></eventFilters><name>Traffic to Emerging Threat Dshield List</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112223</eventFilters><incidentAttrs>
        srcIpAddr = Spamhaus.srcIpAddr, destIpAddr = Spamhaus.destIpAddr
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_TO_EMERGING_THREAT_DSHIELD</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Vuln_11" entityVersion="2" xmlId="Rule$PH_Rule_Vuln_11" ownerId="500150" lastModified="1387781706321" id="1387014" custId="0" creationTime="1387520479419"><activatedTime>1387781706321</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects network traffic to Zeus Blocked IP List</description><eventFilters entityVersion="0" xmlId="EventFilter@2112224" ownerId="500150" lastModified="1387781706321" id="2112224" custId="0" creationTime="1387781706321"><groupBy>srcIpAddr, destIpAddr</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>Spamhaus</name><singleConstraint>destIpAddr IN (Group@PH_SYS_ZEUS_BLOCKED_IP) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_FIREWALL)</singleConstraint></eventFilters><name>Traffic to Zeus Blocked IP List</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112224</eventFilters><incidentAttrs>
        srcIpAddr = Spamhaus.srcIpAddr, destIpAddr = Spamhaus.destIpAddr
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_TO_ZEUS_BLOCKED_IP</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Vuln_12" entityVersion="2" xmlId="Rule$PH_Rule_Vuln_12" ownerId="500150" lastModified="1387781706431" id="1387015" custId="0" creationTime="1387520479533"><activatedTime>1387781706430</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects network traffic from emerging threat shadow server Command and Control Server List</description><eventFilters entityVersion="0" xmlId="EventFilter@2112225" ownerId="500150" lastModified="1387781706430" id="2112225" custId="0" creationTime="1387781706430"><groupBy>srcIpAddr, destIpAddr</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>Shadowserver</name><singleConstraint>srcIpAddr IN (Group@PH_SYS_EMER_THREAT_SHADOW_SERVER_CNC) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_FIREWALL) AND eventType IN (Group@PH_SYS_EVENT_PermitTraffic)</singleConstraint></eventFilters><name>Permitted Traffic from Emerging Threat Shadow server List</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112225</eventFilters><incidentAttrs>
        srcIpAddr = Shadowserver.srcIpAddr, destIpAddr = Shadowserver.destIpAddr
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_FROM_EMERGING_THREAT_SHADOW_SERVER</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Vuln_13" entityVersion="2" xmlId="Rule$PH_Rule_Vuln_13" ownerId="500150" lastModified="1387781706545" id="1387016" custId="0" creationTime="1387520479643"><activatedTime>1387781706545</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects network traffic from emerging threat Russian Business Network (RBN) List</description><eventFilters entityVersion="0" xmlId="EventFilter@2112226" ownerId="500150" lastModified="1387781706545" id="2112226" custId="0" creationTime="1387781706545"><groupBy>srcIpAddr, destIpAddr</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>RBN</name><singleConstraint>srcIpAddr IN (Group@PH_SYS_EMER_THREAT_RBN) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_FIREWALL) AND eventType IN (Group@PH_SYS_EVENT_PermitTraffic)</singleConstraint></eventFilters><name>Permitted Traffic from Emerging Threat RBN List</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112226</eventFilters><incidentAttrs>
        srcIpAddr = RBN.srcIpAddr, destIpAddr = RBN.destIpAddr
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_FROM_EMERGING_THREAT_RBN</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Vuln_14" entityVersion="2" xmlId="Rule$PH_Rule_Vuln_14" ownerId="500150" lastModified="1387781706658" id="1387017" custId="0" creationTime="1387520479756"><activatedTime>1387781706657</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects permitted network traffic from emerging threat Spamhaus List</description><eventFilters entityVersion="0" xmlId="EventFilter@2112227" ownerId="500150" lastModified="1387781706657" id="2112227" custId="0" creationTime="1387781706657"><groupBy>srcIpAddr, destIpAddr</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>Spamhaus</name><singleConstraint>srcIpAddr IN (Group@PH_SYS_EMER_THREAT_SPAMHAUS) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_FIREWALL) AND eventType IN (Group@PH_SYS_EVENT_PermitTraffic)</singleConstraint></eventFilters><name>Permitted traffic from Emerging Threat Spamhaus List</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112227</eventFilters><incidentAttrs>
        srcIpAddr = Spamhaus.srcIpAddr, destIpAddr = Spamhaus.destIpAddr
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_FROM_EMERGING_THREAT_SPAMHAUS</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Vuln_15" entityVersion="2" xmlId="Rule$PH_Rule_Vuln_15" ownerId="500150" lastModified="1387781706802" id="1387018" custId="0" creationTime="1387520479868"><activatedTime>1387781706801</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects permitted network traffic from emerging threat Dshield List</description><eventFilters entityVersion="0" xmlId="EventFilter@2112228" ownerId="500150" lastModified="1387781706801" id="2112228" custId="0" creationTime="1387781706801"><groupBy>srcIpAddr, destIpAddr</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>Spamhaus</name><singleConstraint>srcIpAddr IN (Group@PH_SYS_EMER_THREAT_DSHIELD) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_FIREWALL) AND eventType IN (Group@PH_SYS_EVENT_PermitTraffic)</singleConstraint></eventFilters><name>Permitted Traffic from Emerging Threat Dshield List</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112228</eventFilters><incidentAttrs>
        srcIpAddr = Spamhaus.srcIpAddr, destIpAddr = Spamhaus.destIpAddr
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_FROM_EMERGING_THREAT_DSHIELD</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Vuln_16" entityVersion="2" xmlId="Rule$PH_Rule_Vuln_16" ownerId="500150" lastModified="1387781706913" id="1387019" custId="0" creationTime="1387520479980"><activatedTime>1387781706912</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects permitted network traffic from Zeus Blocked IP List</description><eventFilters entityVersion="0" xmlId="EventFilter@2112229" ownerId="500150" lastModified="1387781706912" id="2112229" custId="0" creationTime="1387781706912"><groupBy>srcIpAddr, destIpAddr</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>Spamhaus</name><singleConstraint>srcIpAddr IN (Group@PH_SYS_ZEUS_BLOCKED_IP) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_FIREWALL) AND eventType IN (Group@PH_SYS_EVENT_PermitTraffic)</singleConstraint></eventFilters><name>Permitted Traffic from Zeus Blocked IP List</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112229</eventFilters><incidentAttrs>
        srcIpAddr = Spamhaus.srcIpAddr, destIpAddr = Spamhaus.destIpAddr
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_FROM_ZEUS_BLOCKED_IP</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_PolicyViolation_1" entityVersion="2" xmlId="Rule$PH_Rule_PolicyViolation_1" ownerId="500150" lastModified="1387781708217" id="1387020" custId="0" creationTime="1387520480301"><activatedTime>1387781708217</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Network IPS detects P2P traffic</description><eventFilters entityVersion="0" xmlId="EventFilter@2112233" ownerId="500150" lastModified="1387781708216" id="2112233" custId="0" creationTime="1387781708216"><groupBy>srcIpAddr</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>P2P</name><singleConstraint>(reptDevIpAddr IN (Group@PH_SYS_DEVICE_NETWORK_IPS) OR (reptDevIpAddr IN (Group@PH_SYS_APP_NETWORK_IPS) AND eventType CONTAIN "Snort-")) AND  eventType IN (Group@PH_SYS_EVENT_P2PTraffic)</singleConstraint></eventFilters><name>P2P traffic detected</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112233</eventFilters><incidentAttrs>
        srcIpAddr = P2P.srcIpAddr
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_P2P_TRAFFIC</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,srcIpAddr,eventType,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_PolicyViolation_2" entityVersion="2" xmlId="Rule$PH_Rule_PolicyViolation_2" ownerId="500150" lastModified="1387781708328" id="1387021" custId="0" creationTime="1387520480411"><activatedTime>1387781708328</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Network IPS detected P2P traffic and the source IP is also sending/receiving  excessive traffic exceeding 5MB over a 10 minute window</description><eventFilters entityVersion="0" xmlId="EventFilter@2112234" ownerId="500150" lastModified="1387781708328" id="2112234" custId="0" creationTime="1387781708328"><groupBy>srcIpAddr</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>P2P</name><singleConstraint>(reptDevIpAddr IN (Group@PH_SYS_DEVICE_NETWORK_IPS) OR (reptDevIpAddr IN (Group@PH_SYS_APP_NETWORK_IPS) AND eventType CONTAIN "Snort-")) AND  eventType IN (Group@PH_SYS_EVENT_P2PTraffic)</singleConstraint></eventFilters><eventFilters entityVersion="0" xmlId="EventFilter@2112235" ownerId="500150" lastModified="1387781708328" id="2112235" custId="0" creationTime="1387781708328"><groupBy>srcIpAddr</groupBy><groupConstraint>SUM(totBytes) &gt;= 5242880</groupConstraint><index>1</index><name>ExcessiveBytes</name><singleConstraint>eventType IN ("IOS-NETFLOW-BI", "SFLOW-BI", Group@PH_SYS_EVENT_PermitTraffic)</singleConstraint></eventFilters><filterOperators><rank>0</rank><type>AND</type></filterOperators><globalConstraint>P2P.srcIpAddr = ExcessiveBytes.srcIpAddr </globalConstraint><name>P2P traffic consuming high network bandwidth</name><rawFOString>AND:0</rawFOString><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112234</eventFilters><eventFilters>EventFilter@2112235</eventFilters><incidentAttrs>
        srcIpAddr = P2P.srcIpAddr
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_P2P_TRAFFIC_HIGH_BW</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,totBytes,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_PolicyViolation_3" entityVersion="2" xmlId="Rule$PH_Rule_PolicyViolation_3" ownerId="500150" lastModified="1387781708517" id="1387022" custId="0" creationTime="1387520480521"><activatedTime>1387781708516</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Network IPS detects Tunneled traffic</description><eventFilters entityVersion="0" xmlId="EventFilter@2112236" ownerId="500150" lastModified="1387781708516" id="2112236" custId="0" creationTime="1387781708516"><groupBy>srcIpAddr</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>Tunnel</name><singleConstraint>(reptDevIpAddr IN (Group@PH_SYS_DEVICE_NETWORK_IPS) OR (reptDevIpAddr IN (Group@PH_SYS_APP_NETWORK_IPS) AND eventType CONTAIN "Snort-")) AND  eventType IN (Group@PH_SYS_EVENT_TunnelledTraffic)</singleConstraint></eventFilters><name>Tunneled traffic detected</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112236</eventFilters><incidentAttrs>
        srcIpAddr = Tunnel.srcIpAddr
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_TUNNEL_TRAFFIC</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,srcIpAddr,eventType,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_PolicyViolation_4" entityVersion="2" xmlId="Rule$PH_Rule_PolicyViolation_4" ownerId="500150" lastModified="1387781708634" id="1387023" custId="0" creationTime="1387520480631"><activatedTime>1387781708634</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Network IPS or Security Gateway or Firewall detects inappropriate website access</description><eventFilters entityVersion="0" xmlId="EventFilter@2112237" ownerId="500150" lastModified="1387781708633" id="2112237" custId="0" creationTime="1387781708633"><groupBy>srcIpAddr,webCategory</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>WebViolation</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_WebsiteCategoryViolation)</singleConstraint></eventFilters><name>Inappropriate Website access</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112237</eventFilters><incidentAttrs>
        srcIpAddr = WebViolation.srcIpAddr, webCategory = WebViolation.webCategory
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_INAPPROPRIATE_WEB_TRAFFIC</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,srcIpAddr,eventType,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_PolicyViolation_4B" entityVersion="2" xmlId="Rule$PH_Rule_PolicyViolation_4B" ownerId="500150" lastModified="1387781708741" id="1387024" custId="0" creationTime="1387520480744"><activatedTime>1387781708741</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects excessive inappropriate website access from the same source IP address - excessive is defined by (more  than 5 distinct categories in 1 hour</description><eventFilters entityVersion="0" xmlId="EventFilter@2112238" ownerId="500150" lastModified="1387781708741" id="2112238" custId="0" creationTime="1387781708741"><groupBy>srcIpAddr</groupBy><groupConstraint>COUNT(DISTINCT webCategory) &gt;= 5</groupConstraint><index>0</index><name>WebViolation</name><singleConstraint>eventType = "PH_RULE_INAPPROPRIATE_WEB_TRAFFIC"</singleConstraint></eventFilters><name>Inappropriate Website access: Multiple categories</name><triggerWindow>3600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112238</eventFilters><incidentAttrs>
        srcIpAddr = WebViolation.srcIpAddr
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_INAPPROPRIATE_WEB_TRAFFIC_DISTINCT_CAT</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,srcIpAddr,eventType,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_PolicyViolation_4C" entityVersion="2" xmlId="Rule$PH_Rule_PolicyViolation_4C" ownerId="500150" lastModified="1387781708849" id="1387025" custId="0" creationTime="1387520480854"><activatedTime>1387781708849</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects excessive inappropriate website access from the same source IP address - excessive is defined by (more  than 10 attempts in 1 hour</description><eventFilters entityVersion="0" xmlId="EventFilter@2112239" ownerId="500150" lastModified="1387781708849" id="2112239" custId="0" creationTime="1387781708849"><groupBy>srcIpAddr</groupBy><groupConstraint>COUNT(*) &gt;= 10</groupConstraint><index>0</index><name>WebViolation</name><singleConstraint>eventType = "PH_RULE_INAPPROPRIATE_WEB_TRAFFIC"</singleConstraint></eventFilters><name>Inappropriate Website access: High volume</name><triggerWindow>3600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112239</eventFilters><incidentAttrs>
        srcIpAddr = WebViolation.srcIpAddr
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_INAPPROPRIATE_WEB_TRAFFIC_HIGH_VOL</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,srcIpAddr,eventType,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_PolicyViolation_5" entityVersion="2" xmlId="Rule$PH_Rule_PolicyViolation_5" ownerId="500150" lastModified="1387781708957" id="1387026" custId="0" creationTime="1387520480967"><activatedTime>1387781708957</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Network IPS detects IRC traffic</description><eventFilters entityVersion="0" xmlId="EventFilter@2112240" ownerId="500150" lastModified="1387781708957" id="2112240" custId="0" creationTime="1387781708957"><groupBy>srcIpAddr</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>IRC</name><singleConstraint>(reptDevIpAddr IN (Group@PH_SYS_DEVICE_NETWORK_IPS) OR (reptDevIpAddr IN (Group@PH_SYS_APP_NETWORK_IPS) AND eventType CONTAIN "Snort-")) AND  eventType IN (Group@PH_SYS_EVENT_IRCTraffic)</singleConstraint></eventFilters><name>IRC traffic detected</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112240</eventFilters><incidentAttrs>
        srcIpAddr = IRC.srcIpAddr
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_IRC_TRAFFIC</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,srcIpAddr,destIpAddr,destIpPort,eventType,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_PolicyViolation_6" entityVersion="2" xmlId="Rule$PH_Rule_PolicyViolation_6" ownerId="500150" lastModified="1387781709067" id="1387027" custId="0" creationTime="1387520481087"><activatedTime>1387781709066</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects inbound usage of protocols that use clear text passwords e.g. FTP, Telnet, POP</description><eventFilters entityVersion="0" xmlId="EventFilter@2112241" ownerId="500150" lastModified="1387781709066" id="2112241" custId="0" creationTime="1387781709066"><groupBy>srcIpAddr,destIpAddr,ipProto,destIpPort</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>Cleartext</name><singleConstraint>srcIpAddr NOT IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) AND destIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) AND destIpPort IN  (21,23,109,110,143) AND eventType IN ("IOS-NETFLOW-BI", "SFLOW-BI", Group@PH_SYS_EVENT_PermitTraffic)</singleConstraint></eventFilters><name>Inbound cleartext password usage detected</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112241</eventFilters><incidentAttrs>
        srcIpAddr = Cleartext.srcIpAddr,destIpAddr = Cleartext.destIpAddr,ipProto = Cleartext.ipProto,destIpPort = Cleartext.destIpPort
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_CLEARTEXT_PWD_INBOUND</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,srcIpAddr,destIpAddr,destIpPort,eventType,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_PolicyViolation_7" entityVersion="2" xmlId="Rule$PH_Rule_PolicyViolation_7" ownerId="500150" lastModified="1387781709201" id="1387028" custId="0" creationTime="1387520481197"><activatedTime>1387781709201</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects outbound usage of protocols that use clear text passwords e.g. FTP, Telnet, POP</description><eventFilters entityVersion="0" xmlId="EventFilter@2112242" ownerId="500150" lastModified="1387781709201" id="2112242" custId="0" creationTime="1387781709201"><groupBy>srcIpAddr,destIpAddr,ipProto,destIpPort</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>Cleartext</name><singleConstraint>srcIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) AND destIpAddr NOT IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) AND destIpPort IN  (21,23,109,110,143) AND eventType IN ("IOS-NETFLOW-BI", "SFLOW-BI", Group@PH_SYS_EVENT_PermitTraffic)</singleConstraint></eventFilters><name>Outbound cleartext password usage detected</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112242</eventFilters><incidentAttrs>
        srcIpAddr = Cleartext.srcIpAddr,destIpAddr = Cleartext.destIpAddr,ipProto = Cleartext.ipProto,destIpPort = Cleartext.destIpPort
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_CLEARTEXT_PWD_OUTBOUND</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,srcIpAddr,destIpAddr,destIpPort,eventType,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_PolicyViolation_8" entityVersion="2" xmlId="Rule$PH_Rule_PolicyViolation_8" ownerId="500150" lastModified="1387781709313" id="1387029" custId="0" creationTime="1387520481308"><activatedTime>1387781709313</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects remote desktop from the Internet, which is defined as anything outside the Internal network. Please make sure that the Internal network definition is correct to avoid false positives. Remote desktop is detected from a windows log or from a flow to the RDP port</description><eventFilters entityVersion="0" xmlId="EventFilter@2112243" ownerId="500150" lastModified="1387781709313" id="2112243" custId="0" creationTime="1387781709313"><groupBy>srcIpAddr,destIpAddr</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>RDP</name><singleConstraint>srcIpAddr NOT IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) AND destIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) AND ((destIpAddr IN (Group@PH_SYS_DEVICE_WINDOWS_SERVER)  AND winLogonType = 10 AND eventType IN (Group@PH_SYS_EVENT_HostLogonFailure,Group@PH_SYS_EVENT_HostLogonSuccess)) OR (destIpPort = 3389 AND eventType IN ("IOS-NETFLOW-BI", "SFLOW-BI", Group@PH_SYS_EVENT_PermitTraffic)))</singleConstraint></eventFilters><name>Remote Desktop from Internet</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112243</eventFilters><incidentAttrs>
        srcIpAddr = RDP.srcIpAddr,destIpAddr = RDP.destIpAddr
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_INBOUND_REMOTE_DESKTOP</incidentType><triggerEventAttrList>phRecvTime,eventType,srcIpAddr,destIpAddr,winLogonType,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_PolicyViolation_9" entityVersion="2" xmlId="Rule$PH_Rule_PolicyViolation_9" ownerId="500150" lastModified="1387781709422" id="1387030" custId="0" creationTime="1387520481420"><activatedTime>1387781709422</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects VNC from Internet, which is defined as anything outside the Internal network. Please make sure that the Internal network definition is correct to avoid false positives</description><eventFilters entityVersion="0" xmlId="EventFilter@2112244" ownerId="500150" lastModified="1387781709422" id="2112244" custId="0" creationTime="1387781709422"><groupBy>srcIpAddr,destIpAddr</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>VNC</name><singleConstraint>srcIpAddr NOT IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) AND destIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) AND ((destIpPort &gt;= 5800 AND destIpPort &lt;= 5820) OR (destIpPort &gt;= 5900 AND destIpPort &lt;= 5920) OR (destIpPort &gt;= 6000 AND destIpPort &lt;= 6020)) AND eventType IN ("IOS-NETFLOW-BI", "SFLOW-BI", Group@PH_SYS_EVENT_PermitTraffic)</singleConstraint></eventFilters><name>VNC from Internet</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112244</eventFilters><incidentAttrs>
        srcIpAddr = VNC.srcIpAddr,destIpAddr = VNC.destIpAddr
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_INBOUND_VNC</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,srcIpAddr,destIpAddr,destIpPort,eventType,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Server" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_PolicyViolation_10" entityVersion="2" xmlId="Rule$PH_Rule_PolicyViolation_10" ownerId="500150" lastModified="1387781709532" id="1387031" custId="0" creationTime="1387520481529"><activatedTime>1387781709531</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that a user cleared the audit log</description><eventFilters entityVersion="0" xmlId="EventFilter@2112245" ownerId="500150" lastModified="1387781709531" id="2112245" custId="0" creationTime="1387781709531"><groupBy>reptDevIpAddr,user</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>AuditLogCleared</name><singleConstraint>eventType IN ("Win-Security-517","Win-Security-1102")</singleConstraint></eventFilters><name>Windows Audit Log Cleared</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112245</eventFilters><incidentAttrs>
        reptDevIpAddr = AuditLogCleared.reptDevIpAddr,user = AuditLogCleared.user
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_AUDIT_LOG_CLEARED</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,eventType,user,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Server" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_PolicyViolation_11" entityVersion="2" xmlId="Rule$PH_Rule_PolicyViolation_11" ownerId="500150" lastModified="1387781709641" id="1387032" custId="0" creationTime="1387520481640"><activatedTime>1387781709641</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that a user disabled auditing</description><eventFilters entityVersion="0" xmlId="EventFilter@2112246" ownerId="500150" lastModified="1387781709641" id="2112246" custId="0" creationTime="1387781709641"><groupBy>reptDevIpAddr,user</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>AuditDisabled</name><singleConstraint>eventType IN ("Win-Security-4719","Win-Security-612")</singleConstraint></eventFilters><name>Windows Audit Disabled</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112246</eventFilters><incidentAttrs>
        reptDevIpAddr = AuditDisabled.reptDevIpAddr,user = AuditDisabled.user
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_AUDIT_DISABLED</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,eventType,user,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Server" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_PolicyViolation_12" entityVersion="2" xmlId="Rule$PH_Rule_PolicyViolation_12" ownerId="500150" lastModified="1387781709752" id="1387033" custId="0" creationTime="1387520481750"><activatedTime>1387781709751</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that multiple (more than 3) accounts were disabled by administrator in a short period of time</description><eventFilters entityVersion="0" xmlId="EventFilter@2112247" ownerId="500150" lastModified="1387781709751" id="2112247" custId="0" creationTime="1387781709751"><groupBy>reptDevIpAddr,user</groupBy><groupConstraint>COUNT(DISTINCT targetUser) &gt;= 3</groupConstraint><index>0</index><name>AcctDisabled</name><singleConstraint>eventType IN ("Win-Security-629","Win-Security-4725")</singleConstraint></eventFilters><name>Multiple Accounts Disabled by Administrator</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112247</eventFilters><incidentAttrs>
        reptDevIpAddr = AcctDisabled.reptDevIpAddr,user = AcctDisabled.user
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_MULTI_ACCOUNT_DISABLED</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,eventType,user,targetUser,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_PolicyViolation_13" entityVersion="2" xmlId="Rule$PH_Rule_PolicyViolation_13" ownerId="500150" lastModified="1387781709862" id="1387034" custId="0" creationTime="1387520481864"><activatedTime>1387781709862</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that more than configured number of MAC addresses attempted to connect to the switch port.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112248" ownerId="500150" lastModified="1387781709862" id="2112248" custId="0" creationTime="1387781709862"><groupBy>reptDevIpAddr,hostMACAddr,intfName</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>PortViolation</name><singleConstraint>eventType IN ("IOS-PORT_SECURITY-SP-PSECURE_VIOLATION","Cisco-NxOS-PORT_SECURITY-PSECURE_VIOLATION")</singleConstraint></eventFilters><name>Layer 2 Switch Port Security Violation</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112248</eventFilters><incidentAttrs>
        reptDevIpAddr = PortViolation.reptDevIpAddr,hostMACAddr = PortViolation.hostMACAddr,intfName = PortViolation.intfName 
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_L2_PORT_SEC_VIOLATION</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,eventType,user,targetUser,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_PolicyViolation_14" entityVersion="2" xmlId="Rule$PH_Rule_PolicyViolation_14" ownerId="500150" lastModified="1387781709973" id="1387035" custId="0" creationTime="1387520481981"><activatedTime>1387781709972</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects a rogue or unsecure AP association attempt</description><eventFilters entityVersion="0" xmlId="EventFilter@2112249" ownerId="500150" lastModified="1387781709972" id="2112249" custId="0" creationTime="1387781709972"><groupBy>reptDevIpAddr,srcMACAddr</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>Rogue</name><singleConstraint>eventType IN ("Aruba-1053-wlsxUnsecureAPDetected","Aruba-1150-wlsxSuspectUnsecureAPDetected", "Aruba-1103-wlsxStaAssociatedToUnsecureAP","Cisco-WLC-36-bsnRogueAPDetected", "Cisco-WLC-59-bsnRogueAPDetectedOnWiredNetwork", "SonicOS-546")</singleConstraint></eventFilters><name>Rogue or Unsecure AP Detected</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112249</eventFilters><incidentAttrs>
        reptDevIpAddr = Rogue.reptDevIpAddr,srcMACAddr = Rogue.srcMACAddr
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_ROGUE_AP</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,eventType,srcMACAddr,hostName,hostMACAddr,wlanSsid,wlanRadioId,wlanChannelId,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_PolicyViolation_15" entityVersion="2" xmlId="Rule$PH_Rule_PolicyViolation_15" ownerId="500150" lastModified="1387781710085" id="1387036" custId="0" creationTime="1387520482110"><activatedTime>1387781710085</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects an excessive number of rogue or unsecure AP association attempts</description><eventFilters entityVersion="0" xmlId="EventFilter@2112250" ownerId="500150" lastModified="1387781710084" id="2112250" custId="0" creationTime="1387781710084"><groupBy>reptDevIpAddr</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>Rogue</name><singleConstraint>eventType IN ("Cisco-WLC-50-bsnApMaxRogueCountExceeded")</singleConstraint></eventFilters><name>Excessive Rogue or Unsecure APs Detected</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112250</eventFilters><incidentAttrs>
        reptDevIpAddr = Rogue.reptDevIpAddr
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_ROGUE_AP_EXCESS</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,eventType,srcMACAddr,hostName,hostMACAddr,wlanSsid,wlanRadioId,wlanChannelId,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_PolicyViolation_16" entityVersion="2" xmlId="Rule$PH_Rule_PolicyViolation_16" ownerId="500150" lastModified="1387781710203" id="1387037" custId="0" creationTime="1387520482217"><activatedTime>1387781710202</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that a wireless host is blacklisted by WLAN system. It would not be able to communicate until it is removed from the blacklist.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112251" ownerId="500150" lastModified="1387781710202" id="2112251" custId="0" creationTime="1387781710202"><groupBy>reptDevIpAddr,srcMACAddr</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>Rogue</name><singleConstraint>eventType IN ("Cisco-WLC-52-bsnDot11StationBlacklisted","Aruba-1044-wlsxNStationAddedToBlackList")</singleConstraint></eventFilters><name>Wireless Host Blacklisted</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112251</eventFilters><incidentAttrs>
        reptDevIpAddr = Rogue.reptDevIpAddr,srcMACAddr = Rogue.srcMACAddr
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_WLAN_HOST_BLACKLISTED</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,eventType,srcMACAddr,hostName,hostMACAddr,wlanSsid,wlanRadioId,wlanChannelId,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_PolicyViolation_18" entityVersion="2" xmlId="Rule$PH_Rule_PolicyViolation_18" ownerId="500150" lastModified="1387781710315" id="1387038" custId="0" creationTime="1387520482315"><activatedTime>1387781710315</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that a blacklisted source of moderate or higher severity is permitted into the network by Cisco ASA firewall Botnet filter</description><eventFilters entityVersion="0" xmlId="EventFilter@2112252" ownerId="500150" lastModified="1387781710314" id="2112252" custId="0" creationTime="1387781710314"><groupBy>srcIpAddr, threatLevel,threatCategory</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>Rogue</name><singleConstraint>eventType IN ("ASA-338001","ASA-338003","ASA-338201") AND threatLevel IN ("moderate", "high", "very-high")</singleConstraint></eventFilters><name>Permitted Blacklisted Source</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112252</eventFilters><incidentAttrs>
         srcIpAddr = Rogue.srcIpAddr,threatLevel = Rogue.threatLevel,threatCategory = Rogue.threatCategory
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_ASA_PERMIT_BLACKLIST_SRC</incidentType><triggerEventAttrList>eventType,threatLevel,threatCategory,eventAction,srcIpAddr,srcName,destIpAddr,ipProto,destIpPort,srcIntfName,destIntfName,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_PolicyViolation_19" entityVersion="2" xmlId="Rule$PH_Rule_PolicyViolation_19" ownerId="500150" lastModified="1387781710426" id="1387039" custId="0" creationTime="1387520482411"><activatedTime>1387781710426</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that a blacklisted source of moderate or higher severity is permitted into the network by Cisco ASA Firewall Botnet filter</description><eventFilters entityVersion="0" xmlId="EventFilter@2112253" ownerId="500150" lastModified="1387781710426" id="2112253" custId="0" creationTime="1387781710426"><groupBy>srcIpAddr, threatLevel,threatCategory</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>Rogue</name><singleConstraint>eventType IN ("ASA-338005","ASA-338007","ASA-338203") AND threatLevel IN ("moderate", "high", "very-high")</singleConstraint></eventFilters><name>Denied Blacklisted Source</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112253</eventFilters><incidentAttrs>
         srcIpAddr = Rogue.srcIpAddr,threatLevel = Rogue.threatLevel,threatCategory = Rogue.threatCategory
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_ASA_DENY_BLACKLIST_SRC</incidentType><triggerEventAttrList>eventType,threatLevel,threatCategory,eventAction,srcIpAddr,srcName,destIpAddr,ipProto,destIpPort,srcIntfName,destIntfName,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_PolicyViolation_20" entityVersion="2" xmlId="Rule$PH_Rule_PolicyViolation_20" ownerId="500150" lastModified="1387781710537" id="1387040" custId="0" creationTime="1387520482509"><activatedTime>1387781710536</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that a blacklisted destination of moderate or higher severity is permitted into the network by Cisco ASA firewall Botnet filter</description><eventFilters entityVersion="0" xmlId="EventFilter@2112254" ownerId="500150" lastModified="1387781710536" id="2112254" custId="0" creationTime="1387781710536"><groupBy>destIpAddr, threatLevel,threatCategory</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>Rogue</name><singleConstraint>eventType IN ("ASA-338002","ASA-338004","ASA-338202") AND threatLevel IN ("moderate", "high", "very-high")</singleConstraint></eventFilters><name>Permitted Blacklisted Destination</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112254</eventFilters><incidentAttrs>
         destIpAddr = Rogue.destIpAddr,threatLevel = Rogue.threatLevel,threatCategory = Rogue.threatCategory
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_ASA_PERMIT_BLACKLIST_DEST</incidentType><triggerEventAttrList>eventType,threatLevel,threatCategory,eventAction,srcIpAddr,srcName,destIpAddr,ipProto,destIpPort,srcIntfName,destIntfName,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_PolicyViolation_21" entityVersion="2" xmlId="Rule$PH_Rule_PolicyViolation_21" ownerId="500150" lastModified="1387781710633" id="1387041" custId="0" creationTime="1387520482608"><activatedTime>1387781710633</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that a blacklisted destination of moderate or higher severity is permitted into the network by Cisco ASA Firewall Botnet filter</description><eventFilters entityVersion="0" xmlId="EventFilter@2112255" ownerId="500150" lastModified="1387781710633" id="2112255" custId="0" creationTime="1387781710633"><groupBy>destIpAddr, threatLevel,threatCategory</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>Rogue</name><singleConstraint>eventType IN ("ASA-338006","ASA-338008","ASA-338204") AND threatLevel IN ("moderate", "high", "very-high")</singleConstraint></eventFilters><name>Denied Blacklisted Destination</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112255</eventFilters><incidentAttrs>
         destIpAddr = Rogue.destIpAddr,threatLevel = Rogue.threatLevel,threatCategory = Rogue.threatCategory
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_ASA_DENY_BLACKLIST_DEST</incidentType><triggerEventAttrList>eventType,threatLevel,threatCategory,eventAction,srcIpAddr,srcName,destIpAddr,ipProto,destIpPort,srcIntfName,destIntfName,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Mail_1" entityVersion="2" xmlId="Rule$PH_Rule_Mail_1" ownerId="500150" lastModified="1387781711200" id="1387042" custId="0" creationTime="1387520483308"><activatedTime>1387781711199</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that one or more of SMTP Server queues have crossed critical threshold</description><eventFilters entityVersion="0" xmlId="EventFilter@2112256" ownerId="500150" lastModified="1387781711199" id="2112256" custId="0" creationTime="1387781711199"><groupBy>hostName</groupBy><groupConstraint>COUNT (*) &gt;= 2 AND (AVG(exchCatQueue) &gt;= 10 OR AVG(exchSMTPLocalQueue) &gt;= 1000 OR AVG(exchSMTPRemoteQueue) &gt; 1000)</groupConstraint><index>0</index><name>QueueHigh</name><singleConstraint>eventType = "PH_DEV_MON_APP_MSEXCH_SMTP_MET"</singleConstraint></eventFilters><name>Exchange Server SMTP Queue high</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112256</eventFilters><incidentAttrs>
        hostName = QueueHigh.hostName, 
	exchCatQueue = QueueHigh.AVG(exchCatQueue),
	exchSMTPLocalQueue = QueueHigh.AVG(exchSMTPLocalQueue),
	exchSMTPRemoteQueue = QueueHigh.AVG(exchSMTPRemoteQueue)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_EXCH_SMTP_QUEUE_CRIT</incidentType><triggerEventAttrList>phRecvTime,eventType,hostName,exchCatQueue,exchSMTPLocalQueue,exchSMTPRemoteQueue,exchSMTPInConn,exchSMTPOutConn,exchSMTPRetries,exchSMTPLocalRetryQueue,exchSMTPRemoteRetryQueue</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Mail_2" entityVersion="2" xmlId="Rule$PH_Rule_Mail_2" ownerId="500150" lastModified="1387781711300" id="1387043" custId="0" creationTime="1387520483420"><activatedTime>1387781711299</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that one or more of Exchange mailbox store queues have crossed critical threshold</description><eventFilters entityVersion="0" xmlId="EventFilter@2112257" ownerId="500150" lastModified="1387781711299" id="2112257" custId="0" creationTime="1387781711299"><groupBy>hostName,exchMboxName</groupBy><groupConstraint>COUNT (*) &gt;= 2 AND (AVG(exchMboxSendQueue) &gt;= 500 OR AVG(exchMboxRecvQueue) &gt;= 500)</groupConstraint><index>0</index><name>QueueHigh</name><singleConstraint>eventType = "PH_DEV_MON_APP_MSEXCH_MBOX_MET"</singleConstraint></eventFilters><name>Exchange Server Mailbox Queue high</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112257</eventFilters><incidentAttrs>
        hostName = QueueHigh.hostName, 
	exchMboxName = QueueHigh.exchMboxName,
	exchMboxSendQueue = QueueHigh.AVG(exchMboxSendQueue),
	exchMboxRecvQueue = QueueHigh.AVG(exchMboxRecvQueue)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_EXCH_MBOX_QUEUE_CRIT</incidentType><triggerEventAttrList>phRecvTime,eventType,hostName,exchMboxName,exchMboxSendQueue,exchMboxRecvQueue,exchMboxSentMsg,exchMboxSubmitMsg,exchMboxDelivMsg,exchMboxActiveUserCount,exchMboxPeakUserCount</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Mail_3" entityVersion="2" xmlId="Rule$PH_Rule_Mail_3" ownerId="500150" lastModified="1387781711394" id="1387044" custId="0" creationTime="1387520483534"><activatedTime>1387781711394</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects a spike in exchange server RPC requests</description><eventFilters entityVersion="0" xmlId="EventFilter@2112258" ownerId="500150" lastModified="1387781711394" id="2112258" custId="0" creationTime="1387781711394"><groupBy>hostName</groupBy><groupConstraint>COUNT (*) &gt;= 2 AND AVG(exchRPCReq) &gt;= 30</groupConstraint><index>0</index><name>RPCHigh</name><singleConstraint>eventType = "PH_DEV_MON_APP_MSEXCH_MET"</singleConstraint></eventFilters><name>Exchange Server RPC request high</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112258</eventFilters><incidentAttrs>
        hostName = RPCHigh.hostName, 
	exchRPCReq = RPCHigh.AVG(exchRPCReq)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_EXCH_RPC_REQ_CRIT</incidentType><triggerEventAttrList>phRecvTime,eventType,hostName,exchRPCReq,exchRPCAvgLatency,exchRPCOpsPerSec,exchRPCReqPeak,exchUserCount,exchActiveUserCount,exchPeakUserCount,exchActiveConnCount,exchMaxConn</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Mail_4" entityVersion="2" xmlId="Rule$PH_Rule_Mail_4" ownerId="500150" lastModified="1387781711489" id="1387045" custId="0" creationTime="1387520483645"><activatedTime>1387781711489</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects excessive exchange server RPC request latency</description><eventFilters entityVersion="0" xmlId="EventFilter@2112259" ownerId="500150" lastModified="1387781711489" id="2112259" custId="0" creationTime="1387781711489"><groupBy>hostName</groupBy><groupConstraint>COUNT (*) &gt;= 2 AND AVG(exchRPCAvgLatency) &gt;= 50</groupConstraint><index>0</index><name>RPCLatencyHigh</name><singleConstraint>eventType = "PH_DEV_MON_APP_MSEXCH_MET"</singleConstraint></eventFilters><name>Exchange Server RPC latency high</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112259</eventFilters><incidentAttrs>
        hostName = RPCLatencyHigh.hostName, 
	exchRPCAvgLatency = RPCLatencyHigh.AVG(exchRPCAvgLatency)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_EXCH_RPC_LATENCY_CRIT</incidentType><triggerEventAttrList>phRecvTime,eventType,hostName,exchRPCReq,exchRPCAvgLatency,exchRPCOpsPerSec,exchRPCReqPeak,exchUserCount,exchActiveUserCount,exchPeakUserCount,exchActiveConnCount,exchMaxConn</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Stat_2" entityVersion="2" xmlId="Rule$PH_Rule_Stat_2" ownerId="500150" lastModified="1387781712261" id="1387046" custId="0" creationTime="1387520484299"><activatedTime>1387781712261</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects traffic anomaly from a source to a fixed port. This means that the traffic pattern from the source on the destination port is statistically anomalous in the following sense: (a) the number of flows from the source on the given port is more than twice the hourly average flow count, (b) total bytes exchanged by the source on the given port is more than twice the hourly average (c) more than 500 flows (with different 5 tuples) over a 10 minute window from the source on the port</description><eventFilters entityVersion="0" xmlId="EventFilter@2112260" ownerId="500150" lastModified="1387781712260" id="2112260" custId="0" creationTime="1387781712260"><groupBy>srcIpAddr,destIpPort, ipProto</groupBy><groupConstraint>PH_FUNC_DIFF_STAT_AVG_1(SUM(totFlows), 2.0) &gt;= 0 AND PH_FUNC_DIFF_STAT_AVG_1(SUM(totBytes), 2.0) &gt;= 0 AND SUM(totFlows) &gt;= 600</groupConstraint><index>0</index><name>StatHighFlowFromSrc</name><singleConstraint>eventType = "IOS-NETFLOW-BI" AND (ipProto = 17 OR ipProto = 6) AND srcIpAddr NOT IN (Group@PH_SYS_APP_ACCELOPS)</singleConstraint></eventFilters><name>Traffic Anomaly From Host On Fixed Port</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112260</eventFilters><incidentAttrs>
        srcIpAddr = StatHighFlowFromSrc.srcIpAddr,destIpPort = StatHighFlowFromSrc.destIpPort,totFlows = StatHighFlowFromSrc.SUM(totFlows)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_STAT_HIGH_TRAFFIC_FROM_SRC_FIXED_PORT</incidentType><triggerEventAttrList>phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,srcDestTCPFlags,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Stat_3" entityVersion="2" xmlId="Rule$PH_Rule_Stat_3" ownerId="500150" lastModified="1387781712378" id="1387047" custId="0" creationTime="1387520484408"><activatedTime>1387781712378</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects traffic anomaly to a destination on a fixed port. This means that the traffic pattern to the destination on the given port is statistically anomalous in the following sense: (a) the number of flows to the destination on the given port is more than twice the hourly average flow count, (b) total bytes exchanged by the destination on the given port is more than twice the hourly average (c) more than 500 flows (with different 5 tuples) over a 10 minute window to the destination on the port</description><eventFilters entityVersion="0" xmlId="EventFilter@2112261" ownerId="500150" lastModified="1387781712377" id="2112261" custId="0" creationTime="1387781712377"><groupBy>destIpAddr,destIpPort,ipProto</groupBy><groupConstraint>PH_FUNC_DIFF_STAT_AVG_1(SUM(totFlows), 2.0) &gt;= 0 AND PH_FUNC_DIFF_STAT_AVG_1(SUM(totBytes), 2.0) &gt;= 0 AND SUM(totFlows) &gt;= 2000</groupConstraint><index>0</index><name>StatHighFlowToDest</name><singleConstraint>eventType = "IOS-NETFLOW-BI" AND (ipProto = 17 OR ipProto = 6) AND destIpAddr NOT IN (Group@PH_SYS_APP_ACCELOPS)</singleConstraint></eventFilters><name>Traffic Anomaly To Host On Fixed Port</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112261</eventFilters><incidentAttrs>
        destIpAddr = StatHighFlowToDest.destIpAddr,destIpPort = StatHighFlowToDest.destIpPort,totFlows = StatHighFlowToDest.SUM(totFlows)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_STAT_HIGH_TRAFFIC_TO_DEST_FIXED_PORT</incidentType><triggerEventAttrList>phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,srcDestTCPFlags,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Stat_4" entityVersion="2" xmlId="Rule$PH_Rule_Stat_4" ownerId="500150" lastModified="1387781712486" id="1387048" custId="0" creationTime="1387520484518"><activatedTime>1387781712486</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects traffic anomaly between a source and a destination on a fixed port. This means that the traffic pattern between the source and the destination on the given port is statistically anomalous in the following sense: (a) the number of flows between the source and the destination on the given port is more than twice the hourly average flow count, (b) total bytes exchanged between the source and the destination on the given port is more than twice the hourly average (c) more than 500 flows (with different 5 tuples) over a 10 minute window between the source and the destination on the port</description><eventFilters entityVersion="0" xmlId="EventFilter@2112262" ownerId="500150" lastModified="1387781712486" id="2112262" custId="0" creationTime="1387781712486"><groupBy>srcIpAddr,destIpAddr,destIpPort,ipProto</groupBy><groupConstraint>PH_FUNC_DIFF_STAT_AVG_1(SUM(totFlows), 2.0) &gt;= 0 AND PH_FUNC_DIFF_STAT_AVG_1(SUM(totBytes), 2.0) &gt;= 0 AND SUM(totFlows) &gt;= 600</groupConstraint><index>0</index><name>StatHighFlowSrcDestPair</name><singleConstraint>eventType = "IOS-NETFLOW-BI" AND (ipProto = 17 OR ipProto = 6) AND srcIpAddr NOT IN (Group@PH_SYS_APP_ACCELOPS) AND destIpAddr NOT IN (Group@PH_SYS_APP_ACCELOPS)</singleConstraint></eventFilters><name>Traffic Anomaly Between Two Hosts On Fixed Port</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112262</eventFilters><incidentAttrs>
        srcIpAddr = StatHighFlowSrcDestPair.srcIpAddr,destIpAddr = StatHighFlowSrcDestPair.destIpAddr,destIpPort = StatHighFlowSrcDestPair.destIpPort, totFlows = StatHighFlowSrcDestPair.SUM(totFlows)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_STAT_HIGH_TRAFFIC_SRC_DEST_FIXED_PORT</incidentType><triggerEventAttrList>phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,srcDestTCPFlags,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_1" entityVersion="2" xmlId="Rule$PH_Rule_Flow_1" ownerId="500150" lastModified="1387781713392" id="1387049" custId="0" creationTime="1387520485306"><activatedTime>1387781713392</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects excessive half-open TCP sessions from the same source to many distinct destinations in a short period of time. The threshold is 200 flows within 3 minutes. Scanning may be a precursor to exploits. However, network management and mapping tools often scan the network for discovery purposes and authorized scanners need to be blacklisted. P2P clients also exhibit this behavior when they attempt to establish connections to (non-existent) peers.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112263" ownerId="500150" lastModified="1387781713392" id="2112263" custId="0" creationTime="1387781713392"><groupBy>srcIpAddr</groupBy><groupConstraint>COUNT (DISTINCT destIpAddr) &gt;= 200</groupConstraint><index>0</index><name>HostScanTCP</name><singleConstraint>eventType IN ("IOS-NETFLOW-BI","SFLOW-BI") AND srcDestTCPFlags = 2 AND ipProto = 6 AND srcIpAddr NOT IN (Group@PH_SYS_APP_ACCELOPS)</singleConstraint></eventFilters><name>Heavy Half-Open TCP Host Scan</name><triggerWindow>180</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112263</eventFilters><incidentAttrs>
        srcIpAddr = HostScanTCP.srcIpAddr, incidentCount = HostScanTCP.COUNT (DISTINCT destIpAddr)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_HEAVY_HO_TCP_HOST_SCAN</incidentType><triggerEventAttrList>phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,srcDestTCPFlags,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_1B" entityVersion="2" xmlId="Rule$PH_Rule_Flow_1B" ownerId="500150" lastModified="1387781713503" id="1387150" custId="0" creationTime="1387520485439"><activatedTime>1387781713502</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects excessive permitted TCP connections from the same source to many distinct destinations in a short period of time. The threshold is 200 flows within 3 minutes. Scanning may be a precursor to exploits. However, network management and mapping tools often scan the network for discovery purposes and authorized scanners need to be blacklisted. P2P clients also exhibit this behavior when they attempt to establish connections to (non-existent) peers.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112264" ownerId="500150" lastModified="1387781713502" id="2112264" custId="0" creationTime="1387781713502"><groupBy>srcIpAddr</groupBy><groupConstraint>COUNT (DISTINCT destIpAddr) &gt;= 200</groupConstraint><index>0</index><name>HostScanTCP</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_PermitTraffic) AND eventType NOT IN ("IOS-NETFLOW-BI","SFLOW-BI") AND ipProto = 6 AND srcIpAddr NOT IN (Group@PH_SYS_APP_ACCELOPS)</singleConstraint></eventFilters><name>Heavy TCP Host Scan</name><triggerWindow>180</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112264</eventFilters><incidentAttrs>
        srcIpAddr = HostScanTCP.srcIpAddr, incidentCount = HostScanTCP.COUNT (DISTINCT destIpAddr)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_HEAVY_TCP_HOST_SCAN</incidentType><triggerEventAttrList>phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,srcDestTCPFlags,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_2" entityVersion="2" xmlId="Rule$PH_Rule_Flow_2" ownerId="500150" lastModified="1387781713612" id="1387151" custId="0" creationTime="1387520485549"><activatedTime>1387781713612</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects excessive half-open TCP sessions from the same source to many distinct destinations and on the same destination port in a short period of time. The threshold is 200 flows within 3 minutes. A fixed destination port may indicate that the scanning host is attempting to find hosts on a well known port (with a vulnerability). Scanning may be a precursor to exploits. However, network management and mapping tools often scan the network for discovery purposes and authorized scanners need to be blacklisted. P2P clients also exhibit this behavior when they attempt to establish connections to (non-existent) peers.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112265" ownerId="500150" lastModified="1387781713612" id="2112265" custId="0" creationTime="1387781713612"><groupBy>srcIpAddr, destIpPort</groupBy><groupConstraint>COUNT (DISTINCT destIpAddr) &gt;= 100</groupConstraint><index>0</index><name>HostScanFixedTCPPort</name><singleConstraint>eventType IN ("IOS-NETFLOW-BI","SFLOW-BI") AND srcDestTCPFlags = 2 AND ipProto = 6 AND srcIpAddr NOT IN (Group@PH_SYS_APP_ACCELOPS)</singleConstraint></eventFilters><name>Heavy Half-Open TCP Host Scan On Fixed Port</name><triggerWindow>180</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112265</eventFilters><incidentAttrs>
        srcIpAddr = HostScanFixedTCPPort.srcIpAddr, destIpPort = HostScanFixedTCPPort.destIpPort, incidentCount = HostScanFixedTCPPort.COUNT (DISTINCT destIpAddr)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_HEAVY_HO_TCP_HOST_SCAN_FIXED_PORT</incidentType><triggerEventAttrList>phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,srcDestTCPFlags,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_2B" entityVersion="2" xmlId="Rule$PH_Rule_Flow_2B" ownerId="500150" lastModified="1387781713722" id="1387152" custId="0" creationTime="1387520485660"><activatedTime>1387781713722</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects excessive permitted TCP sessions from the same source to many distinct destinations and on the same destination port in a short period of time. The threshold is 200 flows within 3 minutes. A fixed destination port may indicate that the scanning host is attempting to find hosts on a well known port (with a vulnerability). Scanning may be a precursor to exploits. However, network management and mapping tools often scan the network for discovery purposes and authorized scanners need to be blacklisted. P2P clients also exhibit this behavior when they attempt to establish connections to (non-existent) peers.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112266" ownerId="500150" lastModified="1387781713722" id="2112266" custId="0" creationTime="1387781713722"><groupBy>srcIpAddr, destIpPort</groupBy><groupConstraint>COUNT (DISTINCT destIpAddr) &gt;= 100</groupConstraint><index>0</index><name>HostScanFixedTCPPort</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_PermitTraffic) AND eventType NOT IN ("IOS-NETFLOW-BI","SFLOW-BI") AND ipProto = 6 AND srcIpAddr NOT IN (Group@PH_SYS_APP_ACCELOPS)</singleConstraint></eventFilters><name>Heavy TCP Host Scan On Fixed Port</name><triggerWindow>180</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112266</eventFilters><incidentAttrs>
        srcIpAddr = HostScanFixedTCPPort.srcIpAddr, destIpPort = HostScanFixedTCPPort.destIpPort, incidentCount = HostScanFixedTCPPort.COUNT (DISTINCT destIpAddr)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_HEAVY_TCP_HOST_SCAN_FIXED_PORT</incidentType><triggerEventAttrList>phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,srcDestTCPFlags,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_3" entityVersion="2" xmlId="Rule$PH_Rule_Flow_3" ownerId="500150" lastModified="1387781713831" id="1387153" custId="0" creationTime="1387520485770"><activatedTime>1387781713831</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects excessive number of UDP connections from the same source to many distinct destinations in a short period of time. The threshold is 200 flows within 3 minutes. Scanning may be a precursor to exploits. However, network management and mapping tools often scan the network for discovery purposes and authorized scanners need to be blacklisted. P2P clients also exhibit this behavior when they attempt to establish connections to (non-existent) peers.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112267" ownerId="500150" lastModified="1387781713831" id="2112267" custId="0" creationTime="1387781713831"><groupBy>srcIpAddr</groupBy><groupConstraint>COUNT (DISTINCT destIpAddr) &gt;= 200</groupConstraint><index>0</index><name>HostScanUDP</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_PermitTraffic) AND ipProto = 17 AND srcIpAddr NOT IN (Group@PH_SYS_APP_ACCELOPS)</singleConstraint></eventFilters><name>Heavy UDP Host Scan</name><triggerWindow>180</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112267</eventFilters><incidentAttrs>
        srcIpAddr = HostScanUDP.srcIpAddr, incidentCount = HostScanUDP.COUNT (DISTINCT destIpAddr)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_HEAVY_UDP_HOST_SCAN</incidentType><triggerEventAttrList>phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_4" entityVersion="2" xmlId="Rule$PH_Rule_Flow_4" ownerId="500150" lastModified="1387781713997" id="1387154" custId="0" creationTime="1387520485882"><activatedTime>1387781713996</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects excessive number of UDP connections from the same source to many distinct destinations and on the same destination port in a short period of time. The threshold is 200 flows within 3 minutes. A fixed destination port may indicate that the scanning host is attempting to find hosts on a well known port (with a vulnerability). Scanning may be a precursor to exploits. However, network management and mapping tools often scan the network for discovery purposes and authorized scanners need to be blacklisted. P2P clients also exhibit this behavior when they attempt to establish connections to (non-existent) peers.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112268" ownerId="500150" lastModified="1387781713996" id="2112268" custId="0" creationTime="1387781713996"><groupBy>srcIpAddr, destIpPort</groupBy><groupConstraint>COUNT (DISTINCT destIpAddr) &gt;= 100</groupConstraint><index>0</index><name>HostScanFixedUDPPort</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_PermitTraffic) AND ipProto = 17 AND srcIpAddr NOT IN (Group@PH_SYS_APP_ACCELOPS)</singleConstraint></eventFilters><name>Heavy UDP Host Scan On Fixed Port</name><triggerWindow>120</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112268</eventFilters><incidentAttrs>
        srcIpAddr = HostScanFixedUDPPort.srcIpAddr, destIpPort = HostScanFixedUDPPort.destIpPort, incidentCount = HostScanFixedUDPPort.COUNT (DISTINCT destIpAddr)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_HEAVY_UDP_HOST_SCAN_FIXED_PORT</incidentType><triggerEventAttrList>phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_5" entityVersion="2" xmlId="Rule$PH_Rule_Flow_5" ownerId="500150" lastModified="1387781714106" id="1387155" custId="0" creationTime="1387520485997"><activatedTime>1387781714106</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects excessive number of ICMP echo request packets from the same source to many distinct destinations in a short period of time. Nachi worm exploited pings to spread. The threshold is 50 pings within 3 minutes. Scanning may be a precursor to exploits. However, network management and mapping tools often scan the network for discovery purposes and authorized scanners need to be blacklisted.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112269" ownerId="500150" lastModified="1387781714106" id="2112269" custId="0" creationTime="1387781714106"><groupBy>srcIpAddr</groupBy><groupConstraint>COUNT (DISTINCT destIpAddr) &gt;= 50</groupConstraint><index>0</index><name>PingSweep</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_PermitTraffic) AND ipProto = 1 AND icmpType = 8 AND srcIpAddr NOT IN (Group@PH_SYS_APP_ACCELOPS)</singleConstraint></eventFilters><name>Heavy ICMP Ping sweep</name><triggerWindow>180</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112269</eventFilters><incidentAttrs>
        srcIpAddr = PingSweep.srcIpAddr, incidentCount = PingSweep.COUNT (DISTINCT destIpAddr)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_HEAVY_ICMP_PING_SWEEP</incidentType><triggerEventAttrList>phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,icmpType,icmpCode,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_6" entityVersion="2" xmlId="Rule$PH_Rule_Flow_6" ownerId="500150" lastModified="1387781714217" id="1387156" custId="0" creationTime="1387520486108"><activatedTime>1387781714217</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects excessive number of half-open TCP connections from many distinct sources to the same destination host and on the same port in a short period of time. This may indicate that the destination server is under some sort of attack.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112270" ownerId="500150" lastModified="1387781714216" id="2112270" custId="0" creationTime="1387781714216"><groupBy>destIpAddr, destIpPort</groupBy><groupConstraint>COUNT (DISTINCT srcIpAddr) &gt;= 200</groupConstraint><index>0</index><name>DDOS_TCP</name><singleConstraint>eventType = "IOS-NETFLOW-BI" AND srcDestTCPFlags = 2 AND ipProto = 6</singleConstraint></eventFilters><name>Half-Open TCP DDOS Attack</name><triggerWindow>180</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112270</eventFilters><incidentAttrs>
        destIpAddr = DDOS_TCP.destIpAddr, destIpPort = DDOS_TCP.destIpPort, incidentCount = DDOS_TCP.COUNT (DISTINCT srcIpAddr)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_HO_TCP_DDOS_ATTACK</incidentType><triggerEventAttrList>phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,srcDestTCPFlags,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_6B" entityVersion="2" xmlId="Rule$PH_Rule_Flow_6B" ownerId="500150" lastModified="1387781714329" id="1387157" custId="0" creationTime="1387520486219"><activatedTime>1387781714329</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects excessive number of half-open TCP connections from many distinct sources to the same destination host and on the same port in a short period of time. This may indicate that the destination server is under some sort of attack.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112271" ownerId="500150" lastModified="1387781714329" id="2112271" custId="0" creationTime="1387781714329"><groupBy>destIpAddr, destIpPort</groupBy><groupConstraint>COUNT (DISTINCT srcIpAddr) &gt;= 200</groupConstraint><index>0</index><name>DDOS_TCP</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_PermitTraffic) AND eventType NOT IN ("IOS-NETFLOW-BI","SFLOW-BI") AND ipProto = 6</singleConstraint></eventFilters><name>TCP DDOS Attack</name><triggerWindow>180</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112271</eventFilters><incidentAttrs>
        destIpAddr = DDOS_TCP.destIpAddr, destIpPort = DDOS_TCP.destIpPort, incidentCount = DDOS_TCP.COUNT (DISTINCT srcIpAddr)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_TCP_DDOS_ATTACK</incidentType><triggerEventAttrList>phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,srcDestTCPFlags,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_8" entityVersion="2" xmlId="Rule$PH_Rule_Flow_8" ownerId="500150" lastModified="1387781714437" id="1387158" custId="0" creationTime="1387520486329"><activatedTime>1387781714437</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects excessive denies from the same source to many distinct destinations on the same port in a short period of time. The intent could be malicious or some sort of misconfiguration.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112272" ownerId="500150" lastModified="1387781714437" id="2112272" custId="0" creationTime="1387781714437"><groupBy>srcIpAddr, destIpPort</groupBy><groupConstraint>COUNT (DISTINCT destIpAddr) &gt;= 100</groupConstraint><index>0</index><name>ExcessDenySameSrc</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_DenyTraffic)</singleConstraint></eventFilters><name>Excessive Denied Connections From Same Src</name><triggerWindow>180</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112272</eventFilters><incidentAttrs>
        srcIpAddr = ExcessDenySameSrc.srcIpAddr, destIpPort = ExcessDenySameSrc.destIpPort, incidentCount = ExcessDenySameSrc.COUNT (DISTINCT destIpAddr)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_EXCESS_DENY_SRC</incidentType><triggerEventAttrList>phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_9" entityVersion="2" xmlId="Rule$PH_Rule_Flow_9" ownerId="500150" lastModified="1387781714548" id="1387159" custId="0" creationTime="1387520486441"><activatedTime>1387781714547</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects excessive denies from many distinct sources to the same destination on the same destination port</description><eventFilters entityVersion="0" xmlId="EventFilter@2112273" ownerId="500150" lastModified="1387781714547" id="2112273" custId="0" creationTime="1387781714547"><groupBy>destIpAddr, destIpPort</groupBy><groupConstraint>COUNT (DISTINCT srcIpAddr) &gt;= 100</groupConstraint><index>0</index><name>ExcessDenySameDest</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_DenyTraffic)</singleConstraint></eventFilters><name>Excessive Denied Connections To Same Destination</name><triggerWindow>180</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112273</eventFilters><incidentAttrs>
        destIpAddr = ExcessDenySameDest.destIpAddr, destIpPort = ExcessDenySameDest.destIpPort, incidentCount = ExcessDenySameDest.COUNT (DISTINCT srcIpAddr)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_EXCESS_DENY_DEST</incidentType><triggerEventAttrList>phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_10" entityVersion="2" xmlId="Rule$PH_Rule_Flow_10" ownerId="500150" lastModified="1387781714658" id="1387160" custId="0" creationTime="1387520486552"><activatedTime>1387781714658</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects large (&gt; 200 bytes/pkt) ICMP echo request and response packets - this is unusual since ICMP packets carry minimal information and are small in size. THis may indicate that some other traffic is being carried over ICMP protocol.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112274" ownerId="500150" lastModified="1387781714658" id="2112274" custId="0" creationTime="1387781714658"><groupBy>srcIpAddr, destIpAddr</groupBy><groupConstraint>SUM(sentPkts) &gt; 0 AND SUM(sentBytes)/SUM(sentPkts) &gt;= 200</groupConstraint><index>0</index><name>LargeICMPEchoReq</name><singleConstraint>eventType IN ("IOS-NETFLOW-BI", "SFLOW-BI", Group@PH_SYS_EVENT_PermitTraffic) AND ipProto = 1 AND icmpType = 8</singleConstraint></eventFilters><eventFilters entityVersion="0" xmlId="EventFilter@2112275" ownerId="500150" lastModified="1387781714658" id="2112275" custId="0" creationTime="1387781714658"><groupBy>srcIpAddr, destIpAddr</groupBy><groupConstraint>SUM(sentPkts) &gt; 0 AND SUM(sentBytes)/SUM(sentPkts) &gt;= 200</groupConstraint><index>1</index><name>LargeICMPEchoResp</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_PermitTraffic)  AND ipProto = 1 AND icmpType = 0</singleConstraint></eventFilters><filterOperators><rank>0</rank><type>AND</type></filterOperators><globalConstraint>LargeICMPEchoReq.srcIpAddr = LargeICMPEchoResp.destIpAddr, LargeICMPEchoReq.destIpAddr = LargeICMPEchoResp.srcIpAddr </globalConstraint><name>Unusually Large ICMP Echo Packets</name><rawFOString>AND:0</rawFOString><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112274</eventFilters><eventFilters>EventFilter@2112275</eventFilters><incidentAttrs>
        srcIpAddr = LargeICMPEchoReq.srcIpAddr, destIpAddr = LargeICMPEchoReq.destIpAddr
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_LARGE_ICMP_ECHO</incidentType><triggerEventAttrList>phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,icmpType,icmpCode,sentPkts,recvPkts,sentBytes,recvBytes,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_11" entityVersion="2" xmlId="Rule$PH_Rule_Flow_11" ownerId="500150" lastModified="1387781714770" id="1387161" custId="0" creationTime="1387520486664"><activatedTime>1387781714769</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects a scenario where a host, that is itself not an authorized mail gateway, is unsuccessfully trying to send excessive emails to unauthorized mail gateways. Authorized mail gateways are represented by the "Mail Gateway" group. Such requests would be typically denied because, either the firewall would block SMTP from end hosts and/or mail gateways only receive mail from other authorized mail gateways. This behavior may indicate malware running on an end host that is trying to send spam or privileged information to its own set of mail servers (which may be compromised).</description><eventFilters entityVersion="0" xmlId="EventFilter@2112276" ownerId="500150" lastModified="1387781714769" id="2112276" custId="0" creationTime="1387781714769"><groupBy>srcIpAddr</groupBy><groupConstraint>COUNT (DISTINCT destIpAddr) &gt;= 5</groupConstraint><index>0</index><name>EndUserMailToUnauthMailGw</name><singleConstraint>destIpPort = 25 AND destIpAddr NOT IN (Group@PH_SYS_DEVICE_SEC_GW, Group@PH_SYS_APP_MAIL_SERVER) AND srcIpAddr NOT IN (Group@PH_SYS_DEVICE_SEC_GW,Group@PH_SYS_APP_MAIL_SERVER) AND srcIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET)</singleConstraint></eventFilters><eventFilters entityVersion="0" xmlId="EventFilter@2112277" ownerId="500150" lastModified="1387781714769" id="2112277" custId="0" creationTime="1387781714769"><groupBy>srcIpAddr</groupBy><groupConstraint>COUNT (*) &gt;= 30</groupConstraint><index>1</index><name>ExcessDeniedMail</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_DenyTraffic) AND destIpPort = 25 AND srcIpAddr NOT IN (Group@PH_SYS_DEVICE_SEC_GW,Group@PH_SYS_APP_MAIL_SERVER) AND srcIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET)</singleConstraint></eventFilters><eventFilters entityVersion="0" xmlId="EventFilter@2112278" ownerId="500150" lastModified="1387781714769" id="2112278" custId="0" creationTime="1387781714769"><groupBy>srcIpAddr</groupBy><groupConstraint>COUNT (*) &gt;= 30</groupConstraint><index>2</index><name>ExcessPermitMail</name><singleConstraint>eventType IN ("IOS-NETFLOW-BI","SFLOW-BI") AND srcDestTCPFlags = 2 AND ipProto = 6 AND destIpPort = 25 AND srcIpAddr NOT IN (Group@PH_SYS_DEVICE_SEC_GW,Group@PH_SYS_APP_MAIL_SERVER) AND srcIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET)</singleConstraint></eventFilters><filterOperators><rank>1</rank><type>AND</type></filterOperators><filterOperators><rank>0</rank><type>OR</type></filterOperators><globalConstraint> EndUserMailToUnauthMailGw.srcIpAddr = ExcessDeniedMail.srcIpAddr AND ExcessDeniedMail.srcIpAddr = ExcessPermitMail.srcIpAddr</globalConstraint><name>Excessive Denied End User Mail To Unauthorized Mail Gateways</name><rawFOString>AND:1,OR:0</rawFOString><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112276</eventFilters><eventFilters>EventFilter@2112277</eventFilters><eventFilters>EventFilter@2112278</eventFilters><incidentAttrs>
        srcIpAddr = EndUserMailToUnauthMailGw.srcIpAddr
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_EXCESS_DENY_MAIL</incidentType><triggerEventAttrList>phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,srcDestTCPFlags,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_12" entityVersion="2" xmlId="Rule$PH_Rule_Flow_12" ownerId="500150" lastModified="1387781714882" id="1387162" custId="0" creationTime="1387520486777"><activatedTime>1387781714882</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects a scenario where a host, that is itself not a DNS server, is trying to send DNS requests to unauthorized DNS servers. Authorized DNS servers are represented by the "DNS Server" group. In a typical scenario, end hosts always send DNS requests to authrozed DNS servers which in turn communicate to other DNS servers - so this behavior may indicate malware running on the end host.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112279" ownerId="500150" lastModified="1387781714882" id="2112279" custId="0" creationTime="1387781714882"><groupBy>srcIpAddr</groupBy><groupConstraint>COUNT (DISTINCT destIpAddr) &gt;= 10</groupConstraint><index>0</index><name>UnauthDNS</name><singleConstraint>destIpPort = 53 AND destIpAddr NOT IN (Group@PH_SYS_APP_DNS_SERVER) AND srcIpAddr NOT IN (Group@PH_SYS_APP_DNS_SERVER,Group@PH_SYS_APP_ACCELOPS) AND srcIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET)</singleConstraint></eventFilters><name>End User DNS Queries to Unauthorized DNS Servers</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112279</eventFilters><incidentAttrs>
        srcIpAddr = UnauthDNS.srcIpAddr, incidentCount = UnauthDNS.COUNT (DISTINCT destIpAddr)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_UNAUTH_DNS_QUERY</incidentType><triggerEventAttrList>phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_13" entityVersion="2" xmlId="Rule$PH_Rule_Flow_13" ownerId="500150" lastModified="1387781714993" id="1387163" custId="0" creationTime="1387520486892"><activatedTime>1387781714993</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects a scenario where a host, that is itself not an DNS server, is sending excessive DNS requests. Authorized DNS servers are represented by the "DNS Server" group. In a typical scenario, the frequency of end host DNS requests is not high unless, there is a script running - this might indicate the presence of malware on the end host.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112280" ownerId="500150" lastModified="1387781714993" id="2112280" custId="0" creationTime="1387781714993"><groupBy>srcIpAddr</groupBy><groupConstraint>COUNT (*) &gt;= 500</groupConstraint><index>0</index><name>ExcessiveDNSFromFlow</name><singleConstraint>destIpPort = 53 AND srcIpAddr NOT IN (Group@PH_SYS_APP_DNS_SERVER) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_FIREWALL,Group@PH_SYS_DEVICE_ROUTER_SWITCH) AND srcIpAddr NOT IN (Group@PH_SYS_APP_ACCELOPS) AND srcIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET)</singleConstraint></eventFilters><eventFilters entityVersion="0" xmlId="EventFilter@2112281" ownerId="500150" lastModified="1387781714993" id="2112281" custId="0" creationTime="1387781714993"><groupBy>srcIpAddr</groupBy><groupConstraint>COUNT (DISTINCT destName) &gt;= 200</groupConstraint><index>1</index><name>ExcessiveDNSFromServer</name><singleConstraint>srcIpAddr NOT IN (Group@PH_SYS_APP_DNS_SERVER) AND reptDevIpAddr IN (Group@PH_SYS_APP_DNS_SERVER) AND (eventType CONTAIN "BIND_DNS" OR eventType CONTAIN "MS_DNS") AND srcIpAddr NOT IN (Group@PH_SYS_APP_ACCELOPS) AND srcIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET)</singleConstraint></eventFilters><filterOperators><rank>0</rank><type>OR</type></filterOperators><globalConstraint>ExcessiveDNSFromFlow.srcIpAddr = ExcessiveDNSFromServer.srcIpAddr</globalConstraint><name>Excessive End User DNS Queries</name><rawFOString>OR:0</rawFOString><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112280</eventFilters><eventFilters>EventFilter@2112281</eventFilters><incidentAttrs>
        srcIpAddr = ExcessiveDNSFromFlow.srcIpAddr, srcIpAddr = ExcessiveDNSFromServer.srcIpAddr, incidentCount = ExcessiveDNSFromFlow.COUNT(*), incidentCount = ExcessiveDNSFromServer.COUNT(DISTINCT destName)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_EXCESS_DNS_QUERY</incidentType><triggerEventAttrList>phRecvTime,eventType,srcIpAddr,destIpAddr,destName,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_14" entityVersion="2" xmlId="Rule$PH_Rule_Flow_14" ownerId="500150" lastModified="1387781715106" id="1387164" custId="0" creationTime="1387520487006"><activatedTime>1387781715106</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects a scenario where a host, has a very high frequency of denied DNS traffic.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112282" ownerId="500150" lastModified="1387781715106" id="2112282" custId="0" creationTime="1387781715106"><groupBy>srcIpAddr</groupBy><groupConstraint>COUNT (*) &gt;= 100</groupConstraint><index>0</index><name>DeniedDNS</name><singleConstraint>destIpPort = 53 AND eventType IN (Group@PH_SYS_EVENT_DenyTraffic)</singleConstraint></eventFilters><name>Excessive Denied DNS Queries</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112282</eventFilters><incidentAttrs>
        srcIpAddr = DeniedDNS.srcIpAddr, incidentCount = DeniedDNS.COUNT (*)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_EXCESS_DENY_DNS_QUERY</incidentType><triggerEventAttrList>phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_15" entityVersion="2" xmlId="Rule$PH_Rule_Flow_15" ownerId="500150" lastModified="1387781715218" id="1387165" custId="0" creationTime="1387520487118"><activatedTime>1387781715218</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects bad domain name queries which indicate malware infected end hosts.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112283" ownerId="500150" lastModified="1387781715218" id="2112283" custId="0" creationTime="1387781715218"><groupBy>srcIpAddr</groupBy><groupConstraint>COUNT (DISTINCT destName) &gt;= 5</groupConstraint><index>0</index><name>MalwareDNS</name><singleConstraint>eventType IN ("BIND_DNS_A_Query","MS_DNS_A_Query","MS_DNS_A_Success","MS_DNS_A_Fail") AND destName IN (Group@PH_SYS_ROOT_MalwareSite)</singleConstraint></eventFilters><name>Excessive Malware Domain Name Queries</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112283</eventFilters><incidentAttrs>
        srcIpAddr = MalwareDNS.srcIpAddr, incidentCount =  MalwareDNS.COUNT(DISTINCT destName)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_BAD_DOMAIN_DNS_QUERY</incidentType><triggerEventAttrList>phRecvTime,eventType,srcIpAddr,destName,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_16" entityVersion="2" xmlId="Rule$PH_Rule_Flow_16" ownerId="500150" lastModified="1387781715330" id="1387166" custId="0" creationTime="1387520487226"><activatedTime>1387781715329</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects an end host meeting at least 3 requirements for suspicious use of DNS requests - this indicates that a bot is likely running on the end host</description><eventFilters entityVersion="0" xmlId="EventFilter@2112284" ownerId="500150" lastModified="1387781715329" id="2112284" custId="0" creationTime="1387781715329"><groupBy>srcIpAddr</groupBy><groupConstraint>COUNT (DISTINCT eventType) &gt;= 3</groupConstraint><index>0</index><name>BotnetSymptom</name><singleConstraint>eventType IN ("PH_RULE_UNAUTH_DNS_QUERY","PH_RULE_EXCESS_DNS_QUERY","PH_RULE_EXCESS_DENY_DNS_QUERY","PH_RULE_BAD_DOMAIN_DNS_QUERY", "PH_RULE_UNCOMMON_DNS_QUERY")</singleConstraint></eventFilters><name>Suspicious Botnet like End host DNS Behavior</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112284</eventFilters><incidentAttrs>
        srcIpAddr = BotnetSymptom.srcIpAddr 
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_BOTNET_LIKELY</incidentType><triggerEventAttrList>phRecvTime,eventType,srcIpAddr,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_17" entityVersion="2" xmlId="Rule$PH_Rule_Flow_17" ownerId="500150" lastModified="1387781715442" id="1387167" custId="0" creationTime="1387520487326"><activatedTime>1387781715442</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects the same host that is not a DNS server, doing an excessive amount of uncommon domain name queries - this indicates the host is likely infected with malware. An end host typically needs to perform only A and PTR queries; any other query inidicates the likely presence of malware.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112285" ownerId="500150" lastModified="1387781715441" id="2112285" custId="0" creationTime="1387781715441"><groupBy>srcIpAddr,eventType</groupBy><groupConstraint>COUNT (*) &gt;= 50</groupConstraint><index>0</index><name>UncommonDNS</name><singleConstraint>srcIpAddr NOT IN (Group@PH_SYS_APP_DNS_SERVER) AND eventType NOT IN ("BIND_DNS_A_Query", "BIND_DNS_PTR_Query", "MS_DNS_A_Query","MS_DNS_PTR_Query", "MS_DNS_A_Success", "MS_DNS_A_Fail", "MS_DNS_PTR_Success", "MS_DNS_PTR_Success", "MS_DNS_PTR_Fail") AND (eventType CONTAIN "BIND_DNS" OR eventType CONTAIN "MS_DNS")</singleConstraint></eventFilters><name>Excessive Uncommon DNS Queries</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112285</eventFilters><incidentAttrs>
        srcIpAddr = UncommonDNS.srcIpAddr, incidentCount =UncommonDNS.COUNT (*)   
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_UNCOMMON_DNS_QUERY</incidentType><triggerEventAttrList>phRecvTime,eventType,srcIpAddr,destName,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_18" entityVersion="2" xmlId="Rule$PH_Rule_Flow_18" ownerId="500150" lastModified="1387781715555" id="1387168" custId="0" creationTime="1387520487425"><activatedTime>1387781715554</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects an usually high frequency of DNS name resolution queries from the same host to the same domain name in a short period of time. This is not expected behavior since, in a typical scenario, the domain name resolution is cached at the end point. Repeated queries indicates that a special DNS client is likely running at the end host that is trying to make use of fast flux techniques to get back many infected hosts behind a crafted domain name.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112286" ownerId="500150" lastModified="1387781715554" id="2112286" custId="0" creationTime="1387781715554"><groupBy>srcIpAddr, destName</groupBy><groupConstraint>COUNT (*) &gt;= 100</groupConstraint><index>0</index><name>ExcessRepeatDNS</name><singleConstraint>eventType IN ("BIND_DNS_A_Query","MS_DNS_A_Query","MS_DNS_A_Success","MS_DNS_A_Fail")</singleConstraint></eventFilters><name>Excessive Repeated DNS Queries To Same Domain</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112286</eventFilters><incidentAttrs>
        srcIpAddr = ExcessRepeatDNS.srcIpAddr, destName =ExcessRepeatDNS.destName, incidentCount = ExcessRepeatDNS.COUNT (*)   
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_DNS_QUERY_SAME_DOMAIN</incidentType><triggerEventAttrList>phRecvTime,eventType,srcIpAddr,destName,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_19" entityVersion="2" xmlId="Rule$PH_Rule_Flow_19" ownerId="500150" lastModified="1387781715666" id="1387169" custId="0" creationTime="1387520487529"><activatedTime>1387781715665</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects a scenario where a host, that is itself not an authorized mail gateway, is sending excessive emails (more than 20 emails in 2 minutes). This behavior may indicate malware running on an end host that is trying to send spam or privileged information to its own set of mail servers (which may be compromised).</description><eventFilters entityVersion="0" xmlId="EventFilter@2112287" ownerId="500150" lastModified="1387781715665" id="2112287" custId="0" creationTime="1387781715665"><groupBy>srcIpAddr</groupBy><groupConstraint>COUNT(*) &gt;= 20</groupConstraint><index>0</index><name>EndUserExcessMail</name><singleConstraint>destIpPort = 25 AND srcIpAddr NOT IN (Group@PH_SYS_DEVICE_SEC_GW,Group@PH_SYS_APP_MAIL_SERVER) AND srcIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET)</singleConstraint></eventFilters><name>Excessive End User Mail</name><triggerWindow>120</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112287</eventFilters><incidentAttrs>
        srcIpAddr = EndUserExcessMail.srcIpAddr,incidentCount = EndUserExcessMail.COUNT(*)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_EXCESS_END_USER_MAIL</incidentType><triggerEventAttrList>phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,srcDestTCPFlags,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Internal" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_PH_1" entityVersion="2" xmlId="Rule$PH_Rule_Avail_PH_1" ownerId="500150" lastModified="1387781716450" id="1387170" custId="0" creationTime="1387520488298"><activatedTime>1387781716450</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects the free space of the file system containing the folder /data/eventdb used for storing events is lower than 20GB. Once the free space is lower than 10GB, the system will automatically purge old events until the free space is more than 20GB. If you do not want this automatical purge of old events, please backup old events to a remote location using nfs, cifs or sftp, otherwise, you can disable this rule.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112288" ownerId="500150" lastModified="1387781716450" id="2112288" custId="0" creationTime="1387781716450"><groupBy>reptDevIpAddr</groupBy><groupConstraint>COUNT (*) &gt;= 1</groupConstraint><index>0</index><name>AOStorageLow</name><singleConstraint>eventType = "PH_SYSTEM_STORAGE_LOW"</singleConstraint></eventFilters><name>System Warning: Low Available Event Storage Capacity</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112288</eventFilters><incidentAttrs>
        hostIpAddr = AOStorageLow.reptDevIpAddr
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_ACCELOPS_LOW_STORAGE</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Internal" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_PH_2" entityVersion="2" xmlId="Rule$PH_Rule_Avail_PH_2" ownerId="500150" lastModified="1387781716588" id="1387171" custId="0" creationTime="1387520488410"><activatedTime>1387781716588</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that the system is receiving events at a rate that is higher than the license limit. Events beyond the license limit would be dropped unless the license is upgraded.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112289" ownerId="500150" lastModified="1387781716587" id="2112289" custId="0" creationTime="1387781716587"><groupBy>reptDevIpAddr</groupBy><groupConstraint>COUNT (*) &gt;= 1</groupConstraint><index>0</index><name>AOLicenseExpire</name><singleConstraint>eventType = "PH_SYSTEM_EVENT_RATE_EXCEED_LICENSE"</singleConstraint></eventFilters><name>System License Warning: High Event Rate</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112289</eventFilters><incidentAttrs>
        hostIpAddr = AOLicenseExpire.reptDevIpAddr
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_ACCELOPS_HIGH_EPS</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Internal" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_PH_3" entityVersion="2" xmlId="Rule$PH_Rule_Avail_PH_3" ownerId="500150" lastModified="1387781716754" id="1387172" custId="0" creationTime="1387520488521"><activatedTime>1387781716754</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that the number of CMDB configuration items is close to the license limit - additonal configuration items would not be stored unless the license is upgraded.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112290" ownerId="500150" lastModified="1387781716754" id="2112290" custId="0" creationTime="1387781716754"><groupBy>reptDevIpAddr</groupBy><groupConstraint>COUNT (*) &gt;= 0</groupConstraint><index>0</index><name>AOHighCI</name><singleConstraint>eventType = "PH_AUDIT_CI_QUOTE_EXCEEDED"</singleConstraint></eventFilters><name>System License Warning: High Config Items</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112290</eventFilters><incidentAttrs>
        hostIpAddr = AOHighCI.reptDevIpAddr
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_ACCELOPS_HIGH_CI</incidentType><triggerEventAttrList>phRecvTime,eventType,customer,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Internal" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_PH_4" entityVersion="2" xmlId="Rule$PH_Rule_Avail_PH_4" ownerId="500150" lastModified="1387781716864" id="1387173" custId="0" creationTime="1387520488632"><activatedTime>1387781716863</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that collector is down.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112291" ownerId="500150" lastModified="1387781716863" id="2112291" custId="0" creationTime="1387781716863"><groupBy>customer,phCollectorName</groupBy><groupConstraint>COUNT (*) &gt;= 1</groupConstraint><index>0</index><name>AOCollectorDown</name><singleConstraint>eventType = "PH_COLLECTOR_DOWN"</singleConstraint></eventFilters><name>System Collector Down</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112291</eventFilters><incidentAttrs>
        customer = AOCollectorDown.customer, phCollectorName = AOCollectorDown.phCollectorName
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_ACCELOPS_COLLECTOR_DOWN</incidentType><triggerEventAttrList>phRecvTime,eventType,customer,phCollectorName,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Internal" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_PH_8" entityVersion="2" xmlId="Rule$PH_Rule_Avail_PH_8" ownerId="500150" lastModified="1387781716981" id="1387174" custId="0" creationTime="1387520488746"><activatedTime>1387781716981</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that the system discovered more devices than what license allows.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112293" ownerId="500150" lastModified="1387781716981" id="2112293" custId="0" creationTime="1387781716981"><groupConstraint>COUNT (*) &gt;= 1</groupConstraint><index>0</index><name>AOLicenseMaxDevice</name><singleConstraint>eventType = "PH_MAX_DEVICES_EXCEEDED"</singleConstraint></eventFilters><name>System License Warning: Max Number of Devices Exceeded License</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112293</eventFilters><incidentAttrs></incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_ACCELOPS_MAX_DEVICE_EXCEEDED</incidentType><triggerEventAttrList>phRecvTime,eventType,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Internal" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_PH_9" entityVersion="2" xmlId="Rule$PH_Rule_Avail_PH_9" ownerId="500150" lastModified="1387781717091" id="1387175" custId="0" creationTime="1387520488857"><activatedTime>1387781717090</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that system worker is down.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112294" ownerId="500150" lastModified="1387781717090" id="2112294" custId="0" creationTime="1387781717090"><groupBy>hostIpAddr</groupBy><groupConstraint>COUNT (*) &gt;= 1</groupConstraint><index>0</index><name>AOWorkerDown</name><singleConstraint>eventType = "PH_WORKER_DOWN"</singleConstraint></eventFilters><name>System Worker Down</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112294</eventFilters><incidentAttrs>
        hostIpAddr = AOWorkerDown.hostIpAddr
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_ACCELOPS_WORKER_DOWN</incidentType><triggerEventAttrList>phRecvTime,eventType,hostIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Internal" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_PH_10" entityVersion="2" xmlId="Rule$PH_Rule_Avail_PH_10" ownerId="500150" lastModified="1387781717204" id="1387176" custId="0" creationTime="1387520488970"><activatedTime>1387781717204</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that system failed to archive event database files to offline storage</description><eventFilters entityVersion="0" xmlId="EventFilter@2112296" ownerId="500150" lastModified="1387781717204" id="2112296" custId="0" creationTime="1387781717204"><groupBy>phCustId</groupBy><groupConstraint>COUNT (*) &gt;= 1</groupConstraint><index>0</index><name>AOArchiveFailed</name><singleConstraint>eventType = "PH_SYSTEM_DISK_ARCHIVING_FAILED"</singleConstraint></eventFilters><name>System Archiving Failed</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112296</eventFilters><incidentAttrs>
        phCustId = AOArchiveFailed.phCustId
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_SYS_ARCHIVING_FAILED</incidentType><triggerEventAttrList>phRecvTime,phCustId,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Internal" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_PH_11" entityVersion="2" xmlId="Rule$PH_Rule_Avail_PH_11" ownerId="500150" lastModified="1387781717320" id="1387177" custId="0" creationTime="1387520489083"><activatedTime>1387781717319</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that system failed to open archive directory. If the problem is not resolved soon, events from online event database will be purged</description><eventFilters entityVersion="0" xmlId="EventFilter@2112297" ownerId="500150" lastModified="1387781717319" id="2112297" custId="0" creationTime="1387781717319"><groupConstraint>COUNT (*) &gt;= 1</groupConstraint><index>0</index><name>AOArchiveUnavail</name><singleConstraint>eventType = "PH_UNABLE_ACCESS_DIR"</singleConstraint></eventFilters><name>System Archive Directory Unavailable</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112297</eventFilters><incidentAttrs></incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_SYS_ARCHIVE_UNAVAIL</incidentType><triggerEventAttrList>phRecvTime,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Internal" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_PH_12" entityVersion="2" xmlId="Rule$PH_Rule_Avail_PH_12" ownerId="500150" lastModified="1387781717444" id="1387178" custId="0" creationTime="1387520489195"><activatedTime>1387781717444</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that system archived event database files to offline storage</description><eventFilters entityVersion="0" xmlId="EventFilter@2112298" ownerId="500150" lastModified="1387781717444" id="2112298" custId="0" creationTime="1387781717444"><groupBy>reptDevIpAddr</groupBy><groupConstraint>COUNT (*) &gt;= 1 AND AVG(totBytes) &gt; 0</groupConstraint><index>0</index><name>AOArchive</name><singleConstraint>eventType = "PH_SYSTEM_DISK_ARCHIVING_FINISHED" AND totBytes &gt; 0</singleConstraint></eventFilters><name>System EventDB Archiving Completed</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112298</eventFilters><incidentAttrs>
        hostIpAddr = AOArchive.reptDevIpAddr,totBytes = AOArchive.AVG(totBytes)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_SYS_EVENTDB_ARCHIVE</incidentType><triggerEventAttrList>phRecvTime,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Internal" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_PH_12B" entityVersion="2" xmlId="Rule$PH_Rule_Avail_PH_12B" ownerId="500150" lastModified="1387781717568" id="1387179" custId="0" creationTime="1387520489307"><activatedTime>1387781717567</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that system purged event database files to offline storage</description><eventFilters entityVersion="0" xmlId="EventFilter@2112299" ownerId="500150" lastModified="1387781717567" id="2112299" custId="0" creationTime="1387781717567"><groupBy>reptDevIpAddr</groupBy><groupConstraint>COUNT (*) &gt;= 1 AND AVG(totBytes) &gt; 0</groupConstraint><index>0</index><name>AOPurge</name><singleConstraint>eventType = "PH_SYSTEM_DISK_PURGING_FINISHED" AND totBytes &gt; 0</singleConstraint></eventFilters><name>System EventDB Purge Completed</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112299</eventFilters><incidentAttrs>
        hostIpAddr = AOPurge.reptDevIpAddr,totBytes = AOPurge.AVG(totBytes)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_SYS_EVENTDB_PURGE</incidentType><triggerEventAttrList>phRecvTime,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Internal" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_PH_13" entityVersion="2" xmlId="Rule$PH_Rule_Avail_PH_13" ownerId="500150" lastModified="1387781717679" id="1387180" custId="0" creationTime="1387520489419"><activatedTime>1387781717678</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that system purged archive files since archive space is low. Archive policies may be violated.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112300" ownerId="500150" lastModified="1387781717678" id="2112300" custId="0" creationTime="1387781717678"><groupBy>reptDevIpAddr</groupBy><groupConstraint>COUNT (*) &gt;= 1 AND AVG(totBytes) &gt; 0</groupConstraint><index>0</index><name>AOArchivePurge</name><singleConstraint>eventType = "PH_SYSTEM_ARCHIVE_PURGING_LOW_SPACE_FINISHED" AND totBytes &gt; 0</singleConstraint></eventFilters><name>System Archive Purging Completed - Low Available Space</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112300</eventFilters><incidentAttrs>
        hostIpAddr = AOArchivePurge.reptDevIpAddr,totBytes = AOArchivePurge.AVG(totBytes)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_SYS_ARCHIVE_PURGE_LOW_SPACE</incidentType><triggerEventAttrList>phRecvTime,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Internal" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_PH_14" entityVersion="2" xmlId="Rule$PH_Rule_Avail_PH_14" ownerId="500150" lastModified="1387781717789" id="1387181" custId="0" creationTime="1387520489532"><activatedTime>1387781717788</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that system purged archive files based on archive policy</description><eventFilters entityVersion="0" xmlId="EventFilter@2112301" ownerId="500150" lastModified="1387781717788" id="2112301" custId="0" creationTime="1387781717788"><groupBy>reptDevIpAddr</groupBy><groupConstraint>COUNT (*) &gt;= 1 AND AVG(totBytes) &gt; 0</groupConstraint><index>0</index><name>AOArchivePurge</name><singleConstraint>eventType = "PH_SYSTEM_ARCHIVE_PURGING_POLICY_FINISHED" AND totBytes &gt; 0</singleConstraint></eventFilters><name>System Archive Purging Completed - Policy Driven</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112301</eventFilters><incidentAttrs>
        hostIpAddr = AOArchivePurge.reptDevIpAddr, totBytes = AOArchivePurge.AVG(totBytes)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_SYS_ARCHIVE_PURGE_POLICY</incidentType><triggerEventAttrList>phRecvTime,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Internal" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_PH_15" entityVersion="2" xmlId="Rule$PH_Rule_Avail_PH_15" ownerId="500150" lastModified="1387781717901" id="1387182" custId="0" creationTime="1387520489644"><activatedTime>1387781717900</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that system failed to purge archive files because of internal errors</description><eventFilters entityVersion="0" xmlId="EventFilter@2112302" ownerId="500150" lastModified="1387781717900" id="2112302" custId="0" creationTime="1387781717900"><groupBy>phCustId</groupBy><groupConstraint>COUNT (*) &gt;= 1</groupConstraint><index>0</index><name>AOArchivePurgeFailed</name><singleConstraint>eventType IN ("PH_SYSTEM_ARCHIVE_PURGING_POLICY_FAILED","PH_SYSTEM_ARCHIVE_PURGING_LOW_SPACE_FAILED")</singleConstraint></eventFilters><name>System Archive Purging Failed</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112302</eventFilters><incidentAttrs>
        phCustId = AOArchivePurgeFailed.phCustId
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_SYS_ARCHIVE_PURGE_FAILED</incidentType><triggerEventAttrList>phRecvTime,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Internal" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_PH_16" entityVersion="2" xmlId="Rule$PH_Rule_Avail_PH_16" ownerId="500150" lastModified="1387781718012" id="1387183" custId="0" creationTime="1387520489760"><activatedTime>1387781718011</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that a reporting device that reported events (logs etc) in the last hour did not report any events this hour. This does not include monitoring events (like CPU, Memory etc). This indicates that there is a problem in the network or at the reporting device.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112303" ownerId="500150" lastModified="1387781718011" id="2112303" custId="0" creationTime="1387781718011"><groupBy>reptDevIpAddr</groupBy><groupConstraint>COUNT (*) &gt;= 1</groupConstraint><index>0</index><name>AONoEvents</name><singleConstraint>eventType = "PH_SYSTEM_DEVICE_NO_EVENTS"</singleConstraint></eventFilters><name>No Events Reported In Last Hour</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112303</eventFilters><incidentAttrs>
        srcIpAddr = AONoEvents.reptDevIpAddr
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>true</incidentFired><incidentType>EventType$PH_RULE_SYS_DEVICE_NO_EVENTS</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Internal" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_PH_16B" entityVersion="1" xmlId="Rule$PH_Rule_Avail_PH_16B" ownerId="500150" lastModified="1387781718149" id="1387184" custId="0" creationTime="1387520489877"><active>false</active><custInclusive>true</custInclusive><description>Detects that the system failed to monitor a performance monitoring metric</description><eventFilters entityVersion="0" xmlId="EventFilter@2112305" ownerId="500150" lastModified="1387781718148" id="2112305" custId="0" creationTime="1387781718148"><groupBy>hostName,hostIpAddr,jobName</groupBy><groupConstraint>COUNT (*) &gt;= 1</groupConstraint><index>0</index><name>AOPerfMonErr</name><singleConstraint>eventType = "PH_JOB_STAT" AND (jobStatus = 1 OR jobStatus = 2) AND phEventCategory = 3</singleConstraint></eventFilters><name>Performance Monitoring Error</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112305</eventFilters><incidentAttrs>
        hostIpAddr = AOPerfMonErr.hostIpAddr,hostName = AOPerfMonErr.hostName,jobName = AOPerfMonErr.jobName
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_SYS_PERF_MON_ERROR</incidentType><triggerEventAttrList>phRecvTime,hostName,hostIpAddr,jobName,jobDesc,jobDetail,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Internal" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_PH_17" entityVersion="2" xmlId="Rule$PH_Rule_Avail_PH_17" ownerId="500150" lastModified="1387781718265" id="1387185" custId="0" creationTime="1387520489992"><activatedTime>1387781718264</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that low (less than 20GB) available archive space - purging is going to start soon</description><eventFilters entityVersion="0" xmlId="EventFilter@2112307" ownerId="500150" lastModified="1387781718264" id="2112307" custId="0" creationTime="1387781718264"><groupBy>reptDevIpAddr</groupBy><groupConstraint>COUNT (*) &gt;= 1</groupConstraint><index>0</index><name>AOArchiveLow</name><singleConstraint>eventType = "PH_SYSTEM_ARCHIVE_LOW"</singleConstraint></eventFilters><name>Low Available System Archive Space</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112307</eventFilters><incidentAttrs>
          hostIpAddr = AOArchiveLow.reptDevIpAddr
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_SYS_ARCHIVE_LOW_SPACE</incidentType><triggerEventAttrList>phRecvTime,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Internal" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_PH_18" entityVersion="2" xmlId="Rule$PH_Rule_Avail_PH_18" ownerId="500150" lastModified="1387781718377" id="1387186" custId="0" creationTime="1387520490110"><activatedTime>1387781718377</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that system has failed to take notification action on an incident</description><eventFilters entityVersion="0" xmlId="EventFilter@2112308" ownerId="500150" lastModified="1387781718377" id="2112308" custId="0" creationTime="1387781718377"><groupBy>phCustId,actionName,policyId,ruleName</groupBy><groupConstraint>COUNT (*) &gt;= 1</groupConstraint><index>0</index><name>AONotifyErr</name><singleConstraint>eventType = "PH_INCIDENT_ACTION_STATUS" AND actionResult = "Failed" AND phEventCategory = 3</singleConstraint></eventFilters><name>Incident Notification Error</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112308</eventFilters><incidentAttrs>
         phCustId = AONotifyErr.phCustId,
	 actionName = AONotifyErr.actionName,
	 policyId = AONotifyErr.policyId,
	 ruleName = AONotifyErr.ruleName
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_SYS_INCIDENT_NOTIF_ERROR</incidentType><triggerEventAttrList>phRecvTime,actionName,policyId,ruleName,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Internal" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_PH_18B" entityVersion="2" xmlId="Rule$PH_Rule_Avail_PH_18B" ownerId="500150" lastModified="1387781718489" id="1387187" custId="0" creationTime="1387520490219"><activatedTime>1387781718488</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that system has failed to deliver a scheduled report</description><eventFilters entityVersion="0" xmlId="EventFilter@2112309" ownerId="500150" lastModified="1387781718488" id="2112309" custId="0" creationTime="1387781718488"><groupBy>phCustId,reportName,actionName</groupBy><groupConstraint>COUNT (*) &gt;= 1</groupConstraint><index>0</index><name>AONotifyErr</name><singleConstraint>eventType = "PH_REPORT_ACTION_STATUS" AND actionResult = "Failed"</singleConstraint></eventFilters><name>Scheduled Report Send Error</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112309</eventFilters><incidentAttrs>
         phCustId = AONotifyErr.phCustId,
	 reportName = AONotifyErr.reportName,
	 actionName = AONotifyErr.actionName
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_SYS_REPORT_NOTIF_ERROR</incidentType><triggerEventAttrList>phRecvTime,reportName,actionName,actionTime,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Internal" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_PH_19" entityVersion="2" xmlId="Rule$PH_Rule_Avail_PH_19" ownerId="500150" lastModified="1387781718601" id="1387188" custId="0" creationTime="1387520490316"><activatedTime>1387781718600</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that Worker input event queue is very large (greater than 100MB). This indicates that the workers are falling behind in handling events and cannot keep pace with the rate at which workers are sending events. Consider ading more workers or adding resources to workers.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112310" ownerId="500150" lastModified="1387781718600" id="2112310" custId="0" creationTime="1387781718600"><groupBy>hostName</groupBy><groupConstraint>COUNT (*) &gt;= 1 AND AVG(totBytes) &gt; 104857600</groupConstraint><index>0</index><name>AOLargeEventQueue</name><singleConstraint>eventType = "PH_EVT_HANDLER_EVT_QUEUE_WARNING"</singleConstraint></eventFilters><name>Large Worker Input Event Queue</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112310</eventFilters><incidentAttrs>
         hostName = AOLargeEventQueue.hostName,
	 totBytes = AOLargeEventQueue.AVG(totBytes)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_SYS_LARGE_WORKER_EVENT_QUEUE</incidentType><triggerEventAttrList>phRecvTime,hostName,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Internal" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_PH_20" entityVersion="2" xmlId="Rule$PH_Rule_Avail_PH_20" ownerId="500150" lastModified="1387781718715" id="1387189" custId="0" creationTime="1387520490413"><activatedTime>1387781718715</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that Worker input SVN queue is very large (greater than 100MB). This indicates that the workers are falling behind in handling SVN files from collectors or from the parser modules. Check the SVN installation.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112311" ownerId="500150" lastModified="1387781718715" id="2112311" custId="0" creationTime="1387781718715"><groupBy>hostName</groupBy><groupConstraint>COUNT (*) &gt;= 1 AND AVG(totBytes) &gt; 104857600</groupConstraint><index>0</index><name>AOLargeSVNQueue</name><singleConstraint>eventType = "PH_EVT_HANDLER_SVN_QUEUE_WARNING"</singleConstraint></eventFilters><name>Large Worker Input SVN Queue</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112311</eventFilters><incidentAttrs>
         hostName = AOLargeSVNQueue.hostName,
	 totBytes = AOLargeSVNQueue.AVG(totBytes)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_SYS_LARGE_WORKER_SVN_QUEUE</incidentType><triggerEventAttrList>phRecvTime,hostName,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Internal" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_PH_21" entityVersion="2" xmlId="Rule$PH_Rule_Avail_PH_21" ownerId="500150" lastModified="1387781718829" id="1387190" custId="0" creationTime="1387520490511"><activatedTime>1387781718828</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that Supervisor JMS Request queue is very large</description><eventFilters entityVersion="0" xmlId="EventFilter@2112312" ownerId="500150" lastModified="1387781718828" id="2112312" custId="0" creationTime="1387781718828"><groupBy>hostName</groupBy><groupConstraint>COUNT (*) &gt;= 1 AND AVG(jmsQueueSize) &gt; AVG(jmsQueueThreshold)</groupConstraint><index>0</index><name>AOLargeJMSRequestQueue</name><singleConstraint>eventType = "PH_JMS_QUEUE_SIZE_WARNING" AND jmsQueueType = "request"</singleConstraint></eventFilters><name>Large Supervisor JMS Request Queue</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112312</eventFilters><incidentAttrs>
         hostName = AOLargeJMSRequestQueue.hostName,
	 jmsQueueSize = AOLargeJMSRequestQueue.AVG(jmsQueueSize)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_SYS_LARGE_JMS_REQUEST_QUEUE</incidentType><triggerEventAttrList>phRecvTime,hostName,jmsQueueType,jmsQueueType,jmsQueueThreshold,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Internal" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_PH_22" entityVersion="2" xmlId="Rule$PH_Rule_Avail_PH_22" ownerId="500150" lastModified="1387781718945" id="1387191" custId="0" creationTime="1387520490609"><activatedTime>1387781718944</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that Supervisor JMS System queue is very large</description><eventFilters entityVersion="0" xmlId="EventFilter@2112313" ownerId="500150" lastModified="1387781718944" id="2112313" custId="0" creationTime="1387781718944"><groupBy>hostName</groupBy><groupConstraint>COUNT (*) &gt;= 1 AND AVG(jmsQueueSize) &gt; AVG(jmsQueueThreshold)</groupConstraint><index>0</index><name>AOLargeJMSSystemQueue</name><singleConstraint>eventType = "PH_JMS_QUEUE_SIZE_WARNING" AND jmsQueueType = "system"</singleConstraint></eventFilters><name>Large Supervisor JMS System Queue</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112313</eventFilters><incidentAttrs>
         hostName = AOLargeJMSSystemQueue.hostName,
	 jmsQueueSize = AOLargeJMSSystemQueue.AVG(jmsQueueSize)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_SYS_LARGE_JMS_SYSTEM_QUEUE</incidentType><triggerEventAttrList>phRecvTime,hostName,jmsQueueType,jmsQueueSize,jmsQueueThreshold,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Internal" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_PH_23" entityVersion="2" xmlId="Rule$PH_Rule_Avail_PH_23" ownerId="500150" lastModified="1387781719060" id="1387192" custId="0" creationTime="1387520490707"><activatedTime>1387781719059</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that a discovered device is merged (incorrectly) to an existing CMDB device with different host name because of one or more overlapping IP addresses. To avoid such merging, include the overlapping IP addresses in the list of Virtual IP addresses and rediscover</description><eventFilters entityVersion="0" xmlId="EventFilter@2112314" ownerId="500150" lastModified="1387781719059" id="2112314" custId="0" creationTime="1387781719059"><groupBy>hostName, targetHostName, overlapIp</groupBy><groupConstraint>COUNT (*) &gt;= 1</groupConstraint><index>0</index><name>Overlap</name><singleConstraint>eventType = "PH_AUDIT_DEVICE_MERGED_BY_IP_WITH_DIFF_NAME" AND phEventCategory = 2</singleConstraint></eventFilters><name>Discovered Device Incorrectly Merged: Overlapping IP</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112314</eventFilters><incidentAttrs>
         hostName = Overlap.hostName,targetHostName = Overlap.targetHostName, overlapIp = Overlap.overlapIp
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_DEVICE_MERGED_OVERLAP_IP</incidentType><triggerEventAttrList>phRecvTime,hostName,targetHostName,overlapIp,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_DB_1" entityVersion="2" xmlId="Rule$PH_Rule_DB_1" ownerId="500150" lastModified="1387781719557" id="1387193" custId="0" creationTime="1387520491304"><activatedTime>1387781719557</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that average buffer cache hit ratio is less than 90 for 2 successive readings</description><eventFilters entityVersion="0" xmlId="EventFilter@2112317" ownerId="500150" lastModified="1387781719557" id="2112317" custId="0" creationTime="1387781719557"><groupBy>hostName,instanceName</groupBy><groupConstraint>COUNT (*) &gt;= 2 AND AVG(dbBufferCacheHitRatio) &lt; 90</groupConstraint><index>0</index><name>CacheHitLow</name><singleConstraint>eventType = "PH_DEV_MON_PERF_MSSQL_SYS"</singleConstraint></eventFilters><name>SQL Server Low Buffer Cache Hit Ratio</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112317</eventFilters><incidentAttrs>
        hostName = CacheHitLow.hostName,
	instanceName = CacheHitLow.instanceName,
	dbBufferCacheHitRatio = CacheHitLow.AVG(dbBufferCacheHitRatio)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_SQL_SRV_LOW_BUFF_CACHE_HIT</incidentType><triggerEventAttrList>phRecvTime,hostName,dbBufferCacheHitRatio,dbLogCacheHitRatio,dbPageReadsPerSec,dbPageWritesPerSec</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_DB_2" entityVersion="2" xmlId="Rule$PH_Rule_DB_2" ownerId="500150" lastModified="1387781719671" id="1387194" custId="0" creationTime="1387520491417"><activatedTime>1387781719671</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that log buffer cache hit ratio is less than 90 for 2 successive readings</description><eventFilters entityVersion="0" xmlId="EventFilter@2112318" ownerId="500150" lastModified="1387781719671" id="2112318" custId="0" creationTime="1387781719671"><groupBy>hostName,instanceName</groupBy><groupConstraint>COUNT (*) &gt;= 2 AND AVG(dbLogCacheHitRatio) &lt; 90</groupConstraint><index>0</index><name>CacheHitLow</name><singleConstraint>eventType = "PH_DEV_MON_PERF_MSSQL_SYS"</singleConstraint></eventFilters><name>SQL Server Low Log Cache Hit Ratio</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112318</eventFilters><incidentAttrs>
        hostName = CacheHitLow.hostName,
	instanceName = CacheHitLow.instanceName, 
	dbLogCacheHitRatio = CacheHitLow.AVG(dbLogCacheHitRatio)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_SQL_SRV_LOW_LOG_CACHE_HIT</incidentType><triggerEventAttrList>phRecvTime,hostName,dbLogCacheHitRatio,dbBufferCacheHitRatio,dbPageReadsPerSec,dbPageWritesPerSec</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_DB_3" entityVersion="2" xmlId="Rule$PH_Rule_DB_3" ownerId="500150" lastModified="1387781719781" id="1387195" custId="0" creationTime="1387520491528"><activatedTime>1387781719781</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects excessive SQL Server deadlocks ( larger 2/sec over 2 succesive readings)</description><eventFilters entityVersion="0" xmlId="EventFilter@2112319" ownerId="500150" lastModified="1387781719781" id="2112319" custId="0" creationTime="1387781719781"><groupBy>hostName,instanceName</groupBy><groupConstraint>COUNT (*) &gt;= 2 AND AVG(dbDeadLocksPerSec) &gt;= 1</groupConstraint><index>0</index><name>ExcessDeadlock</name><singleConstraint>eventType = "PH_DEV_MON_PERF_MSSQL_SYS"</singleConstraint></eventFilters><name>SQL Server Excessive Deadlock</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112319</eventFilters><incidentAttrs>
        hostName = ExcessDeadlock.hostName,
	instanceName = ExcessDeadlock.instanceName, 
	dbDeadLocksPerSec = ExcessDeadlock.AVG(dbDeadLocksPerSec)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_SQL_SRV_EXCESS_DEADLOCK</incidentType><triggerEventAttrList>phRecvTime,hostName,dbDeadLocksPerSec</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_DB_4" entityVersion="2" xmlId="Rule$PH_Rule_DB_4" ownerId="500150" lastModified="1387781719893" id="1387196" custId="0" creationTime="1387520491639"><activatedTime>1387781719892</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects excessive SQL Server page read/write ( larger than 90 over 2 succesive readings)</description><eventFilters entityVersion="0" xmlId="EventFilter@2112320" ownerId="500150" lastModified="1387781719892" id="2112320" custId="0" creationTime="1387781719892"><groupBy>hostName,instanceName</groupBy><groupConstraint>COUNT (*) &gt;= 2 AND (AVG(dbPageReadsPerSec) &gt;= 90 OR AVG(dbPageWritesPerSec) &gt;= 90)</groupConstraint><index>0</index><name>ExcessPageRW</name><singleConstraint>eventType = "PH_DEV_MON_PERF_MSSQL_SYS"</singleConstraint></eventFilters><name>SQL Server Excessive Page Read/Write</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112320</eventFilters><incidentAttrs>
        hostName = ExcessPageRW.hostName,
	instanceName = ExcessPageRW.instanceName, 
	dbPageReadsPerSec = ExcessPageRW.AVG(dbPageReadsPerSec),
	dbPageWritesPerSec = ExcessPageRW.AVG(dbPageWritesPerSec)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_SQL_SRV_EXCESS_PAGE_RW</incidentType><triggerEventAttrList>phRecvTime,hostName,dbPageReadsPerSec,dbPageWritesPerSec</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_DB_5" entityVersion="2" xmlId="Rule$PH_Rule_DB_5" ownerId="500150" lastModified="1387781720004" id="1387197" custId="0" creationTime="1387520491752"><activatedTime>1387781720004</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects low free pages in SQL Server buffer pool (less than 640 over 2 succesive readings)</description><eventFilters entityVersion="0" xmlId="EventFilter@2112321" ownerId="500150" lastModified="1387781720004" id="2112321" custId="0" creationTime="1387781720004"><groupBy>hostName,instanceName</groupBy><groupConstraint>COUNT (*) &gt;= 2 AND AVG(dbPagesFreeInBufferPool) &lt; 640</groupConstraint><index>0</index><name>LowBuffPoolPage</name><singleConstraint>eventType = "PH_DEV_MON_PERF_MSSQL_SYS"</singleConstraint></eventFilters><name>SQL Server Low Free Pages in Buffer Pool</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112321</eventFilters><incidentAttrs>
        hostName = LowBuffPoolPage.hostName,
	instanceName = LowBuffPoolPage.instanceName, 
	dbPagesFreeInBufferPool = LowBuffPoolPage.AVG(dbPagesFreeInBufferPool)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_SQL_SRV_LOW_BP_PAGES</incidentType><triggerEventAttrList>phRecvTime,hostName,dbPagesFreeInBufferPool,dbPagesInBufferPool,dbPageReadsPerSec,dbPageWritesPerSec</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_DB_6" entityVersion="2" xmlId="Rule$PH_Rule_DB_6" ownerId="500150" lastModified="1387781720153" id="1387198" custId="0" creationTime="1387520491865"><activatedTime>1387781720153</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects a particular process/user blocked for more than 2 sec</description><eventFilters entityVersion="0" xmlId="EventFilter@2112322" ownerId="500150" lastModified="1387781720153" id="2112322" custId="0" creationTime="1387781720153"><groupBy>hostName,instanceName,blockingLoginUser,blockingCommand,blockingDbName,blockedLoginUser,blockedCommand,blockedProcessName</groupBy><groupConstraint>COUNT (*) &gt;= 2 AND AVG(blockedDuration) &gt; 2000</groupConstraint><index>0</index><name>ExcessBlock</name><singleConstraint>eventType = "PH_DEV_MON_PERF_MSSQL_BLOCKBY_INFO"</singleConstraint></eventFilters><name>SQL Server Excessive Blocking</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112322</eventFilters><incidentAttrs>
        hostName = ExcessBlock.hostName,
	instanceName =  ExcessBlock.instanceName,
	blockingLoginUser = ExcessBlock.blockingLoginUser,
	blockingCommand = ExcessBlock.blockingCommand,
	blockedLoginUser = ExcessBlock.blockedLoginUser,
	blockedCommand = ExcessBlock.blockedCommand,
	blockedDuration = ExcessBlock.AVG(blockedDuration)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_SQL_SRV_EXCESS_BLOCK</incidentType><triggerEventAttrList>phRecvTime,hostName,blockingLoginUser,blockingCommand,blockingDbName,blockingSpId,blockedLoginUser,blockedCommand,blockedProcessName,blockedSpId,blockedDuration</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_DB_7" entityVersion="2" xmlId="Rule$PH_Rule_DB_7" ownerId="500150" lastModified="1387781720265" id="1387199" custId="0" creationTime="1387520491977"><activatedTime>1387781720265</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that database server disk I/O latency has reached a critical level (greater  than 50 msec) based on 2 successive readings in a 10 minute interval</description><eventFilters entityVersion="0" xmlId="EventFilter@2112323" ownerId="500150" lastModified="1387781720264" id="2112323" custId="0" creationTime="1387781720264"><groupBy>hostIpAddr,hostName,diskName</groupBy><groupConstraint>(AVG(devDiskRdLatency) &gt;= 50 OR AVG(devDiskWrLatency) &gt;= 50) AND COUNT(*) &gt;= 2</groupConstraint><index>0</index><name>ServDiskLatencyCrit</name><singleConstraint>eventType = "PH_DEV_MON_DISK_IO_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server) AND diskName NOT IN ("/boot") AND hostIpAddr IN (Group@PH_SYS_APP_DATABASE_SERVER)</singleConstraint></eventFilters><name>Database Server Disk Latency Critical</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112323</eventFilters><incidentAttrs>
        hostIpAddr = ServDiskLatencyCrit.hostIpAddr, hostName = ServDiskLatencyCrit.hostName, diskName = ServDiskLatencyCrit.diskName,devDiskRdLatency = ServDiskLatencyCrit.AVG(devDiskRdLatency), devDiskWrLatency = ServDiskLatencyCrit.AVG(devDiskWrLatency)
      </incidentAttrs><incidentFireFreq>21600</incidentFireFreq><incidentFired>true</incidentFired><incidentType>EventType$PH_RULE_DB_SERVER_DISK_LATENCY_CRIT</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,diskName,devDiskRdLatency,devDiskWrLatency,diskQLen,diskIOUtil,diskReadReqPerSec,diskWriteReqPerSec,diskReadKBytesPerSec,diskWriteKBytesPerSec</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_DB_8" entityVersion="2" xmlId="Rule$PH_Rule_DB_8" ownerId="500150" lastModified="1387781720377" id="1387350" custId="0" creationTime="1387520492090"><activatedTime>1387781720376</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects excessive full scan (greater than 1000 per second)</description><eventFilters entityVersion="0" xmlId="EventFilter@2112324" ownerId="500150" lastModified="1387781720376" id="2112324" custId="0" creationTime="1387781720376"><groupBy>hostName, instanceName</groupBy><groupConstraint>COUNT (*) &gt;= 2 AND AVG(dbFullScansPerSec) &gt; 1000</groupConstraint><index>0</index><name>ExcessScan</name><singleConstraint>eventType = "PH_DEV_MON_PERF_MSSQL_SYS"</singleConstraint></eventFilters><name>SQL Server Excessive Full Scan</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112324</eventFilters><incidentAttrs>
        hostName = ExcessScan.hostName,
	instanceName = ExcessScan.instanceName, 
	dbFullScansPerSec = ExcessScan.AVG(dbFullScansPerSec)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_SQL_SRV_EXCESS_FULL_SCAN</incidentType><triggerEventAttrList>phRecvTime,hostName,dbFullScansPerSec,dbPageReadsPerSec,dbPageWritesPerSec</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_DB_9" entityVersion="2" xmlId="Rule$PH_Rule_DB_9" ownerId="500150" lastModified="1387781720490" id="1387351" custId="0" creationTime="1387520492202"><activatedTime>1387781720490</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that the Oracle database listener status is CLOSED. The database may not be accepting connections.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112325" ownerId="500150" lastModified="1387781720490" id="2112325" custId="0" creationTime="1387781720490"><groupBy>hostName</groupBy><groupConstraint>COUNT (*) &gt;= 1</groupConstraint><index>0</index><name>ListenerClosed</name><singleConstraint>eventType = "PH_DEV_MON_PERF_ORADB" AND listenerStatus = "CLOSED"</singleConstraint></eventFilters><name>Oracle DB listener CLOSED</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112325</eventFilters><incidentAttrs>
        hostName = ListenerClosed.hostName
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_ORACLE_DB_LISTENER_CLOSED</incidentType><triggerEventAttrList>phRecvTime,hostName,listenerStatus,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_DB_10" entityVersion="2" xmlId="Rule$PH_Rule_DB_10" ownerId="500150" lastModified="1387781720602" id="1387352" custId="0" creationTime="1387520492315"><activatedTime>1387781720602</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects high SYSTEM tablespace usage</description><eventFilters entityVersion="0" xmlId="EventFilter@2112326" ownerId="500150" lastModified="1387781720602" id="2112326" custId="0" creationTime="1387781720602"><groupBy>hostName</groupBy><groupConstraint>COUNT (*) &gt;= 2 AND AVG(tablespaceUsage) &gt; 80</groupConstraint><index>0</index><name>HighSystemTS</name><singleConstraint>eventType = "PH_DEV_MON_PERF_ORADB_TABLESPACE" AND tablespaceName = "SYSTEM"</singleConstraint></eventFilters><name>High Oracle System Table Space Usage</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112326</eventFilters><incidentAttrs>
        hostName = HighSystemTS.hostName,
	tablespaceUsage = HighSystemTS.AVG(tablespaceUsage)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_ORADB_SYSTEM_TABLESPACE_HIGH</incidentType><triggerEventAttrList>phRecvTime,hostName,tablespaceName,tablespaceUsage,tablespaceFreeSpace</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_DB_11" entityVersion="2" xmlId="Rule$PH_Rule_DB_11" ownerId="500150" lastModified="1387781720715" id="1387353" custId="0" creationTime="1387520492429"><activatedTime>1387781720715</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects high non-SYSTEM tablespace usage</description><eventFilters entityVersion="0" xmlId="EventFilter@2112327" ownerId="500150" lastModified="1387781720715" id="2112327" custId="0" creationTime="1387781720715"><groupBy>hostName,tablespaceName</groupBy><groupConstraint>COUNT (*) &gt;= 2 AND AVG(tablespaceUsage) &gt; 95</groupConstraint><index>0</index><name>HighSystemTS</name><singleConstraint>eventType = "PH_DEV_MON_PERF_ORADB_TABLESPACE" AND tablespaceName != "SYSTEM"</singleConstraint></eventFilters><name>High Oracle Non-System Table Space Usage</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112327</eventFilters><incidentAttrs>
        hostName = HighSystemTS.hostName,
	tablespaceName = HighSystemTS.tablespaceName,
	tablespaceUsage = HighSystemTS.AVG(tablespaceUsage)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_ORADB_NONSYS_TABLESPACE_HIGH</incidentType><triggerEventAttrList>phRecvTime,hostName,tablespaceName,tablespaceUsage,tablespaceFreeSpace</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_DB_12" entityVersion="2" xmlId="Rule$PH_Rule_DB_12" ownerId="500150" lastModified="1387781720828" id="1387354" custId="0" creationTime="1387520492543"><activatedTime>1387781720828</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that Oracle database has not been backed up for more than 1 day</description><eventFilters entityVersion="0" xmlId="EventFilter@2112328" ownerId="500150" lastModified="1387781720828" id="2112328" custId="0" creationTime="1387781720828"><groupBy>hostName,instanceName</groupBy><groupConstraint>COUNT (*) &gt;= 1 AND AVG(timeSinceLastBackup) &gt; 86400</groupConstraint><index>0</index><name>NoBackup</name><singleConstraint>eventType = "PH_DEV_MON_PERF_ORADB"</singleConstraint></eventFilters><name>Oracle Database not backed up for 1 day</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112328</eventFilters><incidentAttrs>
        hostName = NoBackup.hostName,
	instanceName = NoBackup.instanceName,
	timeSinceLastBackup = NoBackup.AVG(timeSinceLastBackup);
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_ORADB_NO_BACKUP</incidentType><triggerEventAttrList>phRecvTime,hostName,instanceName,lastBackupDate,timeSinceLastBackup</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_DB_13" entityVersion="2" xmlId="Rule$PH_Rule_DB_13" ownerId="500150" lastModified="1387781720943" id="1387355" custId="0" creationTime="1387520492657"><activatedTime>1387781720942</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that average buffer cache hit ratio is less than 90 for 2 successive readings</description><eventFilters entityVersion="0" xmlId="EventFilter@2112329" ownerId="500150" lastModified="1387781720942" id="2112329" custId="0" creationTime="1387781720942"><groupBy>hostName</groupBy><groupConstraint>COUNT (*) &gt;= 2 AND AVG(dbBufferCacheHitRatio) &lt; 90</groupConstraint><index>0</index><name>CacheHitLow</name><singleConstraint>eventType = "PH_DEV_MON_PERF_ORADB"</singleConstraint></eventFilters><name>Oracle DB Low Buffer Cache Hit Ratio</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112329</eventFilters><incidentAttrs>
        hostName = CacheHitLow.hostName, 
	dbBufferCacheHitRatio = CacheHitLow.AVG(dbBufferCacheHitRatio)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>true</incidentFired><incidentType>EventType$PH_RULE_ORADB_LOW_BUFF_CACHE_HIT</incidentType><triggerEventAttrList>phRecvTime,hostName,dbBufferCacheHitRatio,dbPhysicalReadsPerSec,dbPhysicalWritesPerSec,dbRequestsPerSec,dbIOKBytesPerSec</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_DB_14" entityVersion="2" xmlId="Rule$PH_Rule_DB_14" ownerId="500150" lastModified="1387781721066" id="1387356" custId="0" creationTime="1387520492771"><activatedTime>1387781721066</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that average library cache hit ratio is less than 90 for 2 successive readings</description><eventFilters entityVersion="0" xmlId="EventFilter@2112330" ownerId="500150" lastModified="1387781721065" id="2112330" custId="0" creationTime="1387781721065"><groupBy>hostName</groupBy><groupConstraint>COUNT (*) &gt;= 2 AND AVG(dbLibraryCacheHitRatio) &lt; 90</groupConstraint><index>0</index><name>CacheHitLow</name><singleConstraint>eventType = "PH_DEV_MON_PERF_ORADB"</singleConstraint></eventFilters><name>Oracle DB Low Library Cache Hit Ratio</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112330</eventFilters><incidentAttrs>
        hostName = CacheHitLow.hostName, 
	dbLibraryCacheHitRatio = CacheHitLow.AVG(dbLibraryCacheHitRatio)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>true</incidentFired><incidentType>EventType$PH_RULE_ORADB_LOW_LIB_CACHE_HIT</incidentType><triggerEventAttrList>phRecvTime,hostName,dbLibraryCacheHitRatio,dbBufferCacheHitRatio,dbPhysicalReadsPerSec,dbPhysicalWritesPerSec,dbRequestsPerSec,dbIOKBytesPerSec</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_DB_15" entityVersion="2" xmlId="Rule$PH_Rule_DB_15" ownerId="500150" lastModified="1387781721181" id="1387357" custId="0" creationTime="1387520492886"><activatedTime>1387781721180</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that average row cache hit ratio is less than 90 for 2 successive readings</description><eventFilters entityVersion="0" xmlId="EventFilter@2112331" ownerId="500150" lastModified="1387781721180" id="2112331" custId="0" creationTime="1387781721180"><groupBy>hostName</groupBy><groupConstraint>COUNT (*) &gt;= 2 AND AVG(dbRowCacheHitRatio) &lt; 90</groupConstraint><index>0</index><name>CacheHitLow</name><singleConstraint>eventType = "PH_DEV_MON_PERF_ORADB"</singleConstraint></eventFilters><name>Oracle DB Low Row Cache Hit Ratio</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112331</eventFilters><incidentAttrs>
        hostName = CacheHitLow.hostName, 
	dbRowCacheHitRatio = CacheHitLow.AVG(dbRowCacheHitRatio)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_ORADB_LOW_ROW_CACHE_HIT</incidentType><triggerEventAttrList>phRecvTime,hostName,dbRowCacheHitRatio,dbBufferCacheHitRatio,dbPhysicalReadsPerSec,dbPhysicalWritesPerSec,dbRequestsPerSec,dbIOKBytesPerSec</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_DB_16" entityVersion="2" xmlId="Rule$PH_Rule_DB_16" ownerId="500150" lastModified="1387781721295" id="1387358" custId="0" creationTime="1387520493002"><activatedTime>1387781721295</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that average memory sorts ratio is less than 90 for 2 successive readings</description><eventFilters entityVersion="0" xmlId="EventFilter@2112332" ownerId="500150" lastModified="1387781721295" id="2112332" custId="0" creationTime="1387781721295"><groupBy>hostName</groupBy><groupConstraint>COUNT (*) &gt;= 2 AND AVG(dbMemorySortsRatio) &lt; 90</groupConstraint><index>0</index><name>MemSortRatioLow</name><singleConstraint>eventType = "PH_DEV_MON_PERF_ORADB"</singleConstraint></eventFilters><name>Oracle DB Low Row Memory Sorts Ratio</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112332</eventFilters><incidentAttrs>
        hostName = MemSortRatioLow.hostName, 
	dbMemorySortsRatio = MemSortRatioLow.AVG(dbMemorySortsRatio)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_ORADB_LOW_MEMSORT_RATIO</incidentType><triggerEventAttrList>phRecvTime,hostName,dbMemorySortsRatio,dbBufferCacheHitRatio,dbPhysicalReadsPerSec,dbPhysicalWritesPerSec,dbRequestsPerSec,dbIOKBytesPerSec</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_DB_17" entityVersion="2" xmlId="Rule$PH_Rule_DB_17" ownerId="500150" lastModified="1387781721410" id="1387359" custId="0" creationTime="1387520493117"><activatedTime>1387781721410</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects Oracle database alert log errors</description><eventFilters entityVersion="0" xmlId="EventFilter@2112333" ownerId="500150" lastModified="1387781721410" id="2112333" custId="0" creationTime="1387781721410"><groupBy>hostName,eventType</groupBy><groupConstraint>COUNT (*) &gt;= 1</groupConstraint><index>0</index><name>AlertLog</name><singleConstraint>eventType CONTAIN "ORADB-ORA"</singleConstraint></eventFilters><name>Oracle DB Alert Log Error</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112333</eventFilters><incidentAttrs>
        hostName = AlertLog.hostName, 
	compEventType = AlertLog.eventType
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_ORADB_ALERT_LOG_ERROR</incidentType><triggerEventAttrList>phRecvTime,hostName,eventType,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Server" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_201" entityVersion="2" xmlId="Rule$PH_Rule_Perf_201" ownerId="500150" lastModified="1387781722108" id="1387360" custId="0" creationTime="1387520493293"><activatedTime>1387781722108</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that server CPU has reached a warning level (between 75% and 85% based on 2 successive readings in a 10 minute interval</description><eventFilters entityVersion="0" xmlId="EventFilter@2112334" ownerId="500150" lastModified="1387781722108" id="2112334" custId="0" creationTime="1387781722108"><groupBy>hostIpAddr,hostName</groupBy><groupConstraint>AVG(cpuUtil) &gt;= 75 AND AVG(cpuUtil) &lt;= 85 AND COUNT(*) &gt;= 2</groupConstraint><index>0</index><name>ServCPUWarn</name><singleConstraint>eventType = "PH_DEV_MON_SYS_CPU_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server)</singleConstraint></eventFilters><name>Server CPU Warning</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112334</eventFilters><fireInternalIncident>true</fireInternalIncident><incidentAttrs>
        hostIpAddr = ServCPUWarn.hostIpAddr, hostName = ServCPUWarn.hostName, cpuUtil = ServCPUWarn.AVG(cpuUtil)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>true</incidentFired><incidentType>EventType$PH_RULE_SERVER_CPU_WARN</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,cpuUtil,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Server" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_202" entityVersion="2" xmlId="Rule$PH_Rule_Perf_202" ownerId="500150" lastModified="1387781722237" id="1387361" custId="0" creationTime="1387520493406"><activatedTime>1387781722236</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that server CPU has reached a critical level (greater than 85% based on 2 successive readings in a 10 minute interval</description><eventFilters entityVersion="0" xmlId="EventFilter@2112335" ownerId="500150" lastModified="1387781722236" id="2112335" custId="0" creationTime="1387781722236"><groupBy>hostIpAddr,hostName</groupBy><groupConstraint>AVG(cpuUtil) &gt; 85 AND COUNT(*) &gt;= 2</groupConstraint><index>0</index><name>ServCPUCrit</name><singleConstraint>eventType = "PH_DEV_MON_SYS_CPU_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server)</singleConstraint></eventFilters><name>Server CPU Critical</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112335</eventFilters><fireInternalIncident>true</fireInternalIncident><incidentAttrs>
        hostIpAddr = ServCPUCrit.hostIpAddr, hostName = ServCPUCrit.hostName, cpuUtil = ServCPUCrit.AVG(cpuUtil)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>true</incidentFired><incidentType>EventType$PH_RULE_SERVER_CPU_CRIT</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,cpuUtil,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_203" entityVersion="2" xmlId="Rule$PH_Rule_Perf_203" ownerId="500150" lastModified="1387781722347" id="1387362" custId="0" creationTime="1387520493516"><activatedTime>1387781722347</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that a network device CPU has reached a warning level (between 75% and 90% based on 2 successive readings in a 10 minute interval</description><eventFilters entityVersion="0" xmlId="EventFilter@2112336" ownerId="500150" lastModified="1387781722346" id="2112336" custId="0" creationTime="1387781722346"><groupBy>hostIpAddr,hostName</groupBy><groupConstraint>AVG(cpuUtil) &gt;= 75 AND AVG(cpuUtil) &lt;= 90 AND COUNT(*) &gt;= 2</groupConstraint><index>0</index><name>NetCPUWarn</name><singleConstraint>eventType = "PH_DEV_MON_SYS_CPU_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network)</singleConstraint></eventFilters><name>Network CPU Warning</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112336</eventFilters><fireInternalIncident>true</fireInternalIncident><incidentAttrs>
        hostIpAddr = NetCPUWarn.hostIpAddr, hostName = NetCPUWarn.hostName, cpuUtil = NetCPUWarn.AVG(cpuUtil)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_NET_CPU_WARN</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,cpuUtil,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_204" entityVersion="2" xmlId="Rule$PH_Rule_Perf_204" ownerId="500150" lastModified="1387781722458" id="1387363" custId="0" creationTime="1387520493627"><activatedTime>1387781722458</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that a network device CPU has reached a critical level (greater than 90% based on 2 successive readings in a 10 minute interval</description><eventFilters entityVersion="0" xmlId="EventFilter@2112337" ownerId="500150" lastModified="1387781722458" id="2112337" custId="0" creationTime="1387781722458"><groupBy>hostIpAddr,hostName</groupBy><groupConstraint>AVG(cpuUtil) &gt; 90 AND COUNT(*) &gt;= 2</groupConstraint><index>0</index><name>NetCPUCrit</name><singleConstraint>eventType = "PH_DEV_MON_SYS_CPU_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network)</singleConstraint></eventFilters><name>Network CPU Critical</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112337</eventFilters><fireInternalIncident>true</fireInternalIncident><incidentAttrs>
        hostIpAddr = NetCPUCrit.hostIpAddr, hostName = NetCPUCrit.hostName, cpuUtil = NetCPUCrit.AVG(cpuUtil)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_NET_CPU_CRIT</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,cpuUtil,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Server" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_205" entityVersion="2" xmlId="Rule$PH_Rule_Perf_205" ownerId="500150" lastModified="1387781722570" id="1387364" custId="0" creationTime="1387520493756"><activatedTime>1387781722570</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that server Memory has reached a warning level (between 75% and 85% based on 2 successive readings in a 10 minute interval</description><eventFilters entityVersion="0" xmlId="EventFilter@2112338" ownerId="500150" lastModified="1387781722570" id="2112338" custId="0" creationTime="1387781722570"><groupBy>hostIpAddr,hostName</groupBy><groupConstraint>AVG(memUtil) &gt;= 75 AND AVG(memUtil) &lt;= 85 AND COUNT(*) &gt;= 2</groupConstraint><index>0</index><name>ServMemWarn</name><singleConstraint>eventType = "PH_DEV_MON_SYS_MEM_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server) AND memName = "Physical Memory" AND hostIpAddr NOT IN (Group@PH_SYS_APP_DATABASE_SERVER, Group@PH_SYS_APP_MAIL_SERVER)</singleConstraint></eventFilters><name>Server Memory Warning</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112338</eventFilters><fireInternalIncident>true</fireInternalIncident><incidentAttrs>
        hostIpAddr = ServMemWarn.hostIpAddr, hostName = ServMemWarn.hostName, memUtil = ServMemWarn.AVG(memUtil)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>true</incidentFired><incidentType>EventType$PH_RULE_SERVER_MEM_WARN</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,memUtil,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Server" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_206" entityVersion="2" xmlId="Rule$PH_Rule_Perf_206" ownerId="500150" lastModified="1387781722682" id="1387365" custId="0" creationTime="1387520493873"><activatedTime>1387781722682</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that server memory has reached a critical level (greater than 85% based on 2 successive readings in a 10 minute interval</description><eventFilters entityVersion="0" xmlId="EventFilter@2112339" ownerId="500150" lastModified="1387781722682" id="2112339" custId="0" creationTime="1387781722682"><groupBy>hostIpAddr,hostName</groupBy><groupConstraint>AVG(memUtil) &gt; 85 AND COUNT(*) &gt;= 2</groupConstraint><index>0</index><name>ServMemCrit</name><singleConstraint>eventType = "PH_DEV_MON_SYS_MEM_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server) AND memName = "Physical Memory" AND hostIpAddr NOT IN (Group@PH_SYS_APP_DATABASE_SERVER, Group@PH_SYS_APP_MAIL_SERVER)</singleConstraint></eventFilters><name>Server Memory Critical</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112339</eventFilters><fireInternalIncident>true</fireInternalIncident><incidentAttrs>
        hostIpAddr = ServMemCrit.hostIpAddr, hostName = ServMemCrit.hostName, memUtil = ServMemCrit.AVG(memUtil)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>true</incidentFired><incidentType>EventType$PH_RULE_SERVER_MEM_CRIT</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,memUtil,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Server" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_206B" entityVersion="2" xmlId="Rule$PH_Rule_Perf_206B" ownerId="500150" lastModified="1387781722795" id="1387366" custId="0" creationTime="1387520493989"><activatedTime>1387781722795</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that server swap memory has reached a critical level (free swap less than minimum swap)</description><eventFilters entityVersion="0" xmlId="EventFilter@2112340" ownerId="500150" lastModified="1387781722795" id="2112340" custId="0" creationTime="1387781722795"><groupBy>hostIpAddr, hostName</groupBy><groupConstraint>COUNT (*) &gt; 2 AND AVG(swapMemUtil) &gt; 90</groupConstraint><index>0</index><name>ServSwapMemCrit</name><singleConstraint>eventType = "PH_DEV_MON_SYS_MEM_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server)</singleConstraint></eventFilters><name>Server Swap Memory Critical</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112340</eventFilters><fireInternalIncident>true</fireInternalIncident><incidentAttrs>hostIpAddr = ServSwapMemCrit.hostIpAddr, hostName = ServSwapMemCrit.hostName, swapMemUtil = ServSwapMemCrit.AVG(swapMemUtil)</incidentAttrs><incidentFireFreq>3600</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_SWAP_MEM_CRIT</incidentType><triggerEventAttrList>phRecvTime,eventType,memName,hostName,hostIpAddr,swapMemUtil,freeSwapMemKB,memMinimumSwap,swapMemErrorString,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_207" entityVersion="2" xmlId="Rule$PH_Rule_Perf_207" ownerId="500150" lastModified="1387781722908" id="1387367" custId="0" creationTime="1387520494106"><activatedTime>1387781722908</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that a network device memory usage has reached a warning level (between 50% and 85% based on 2 successive readings in a 10 minute interval</description><eventFilters entityVersion="0" xmlId="EventFilter@2112341" ownerId="500150" lastModified="1387781722907" id="2112341" custId="0" creationTime="1387781722907"><groupBy>hostIpAddr,hostName</groupBy><groupConstraint>AVG(memUtil) &gt;= 65 AND AVG(memUtil) &lt;= 85 AND COUNT(*) &gt;= 2</groupConstraint><index>0</index><name>NetMemWarn</name><singleConstraint>eventType = "PH_DEV_MON_SYS_MEM_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network) AND memName = "Physical Memory"</singleConstraint></eventFilters><name>Network Memory Warning</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112341</eventFilters><fireInternalIncident>true</fireInternalIncident><incidentAttrs>
        hostIpAddr = NetMemWarn.hostIpAddr, hostName = NetMemWarn.hostName, memUtil = NetMemWarn.AVG(memUtil)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_NET_MEM_WARN</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,memUtil,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_208" entityVersion="2" xmlId="Rule$PH_Rule_Perf_208" ownerId="500150" lastModified="1387781723030" id="1387368" custId="0" creationTime="1387520494220"><activatedTime>1387781723030</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that a network device memory has reached a critical level (greater than 85% based on 2 successive readings in a 10 minute interval</description><eventFilters entityVersion="0" xmlId="EventFilter@2112342" ownerId="500150" lastModified="1387781723030" id="2112342" custId="0" creationTime="1387781723030"><groupBy>hostIpAddr,hostName</groupBy><groupConstraint>AVG(memUtil) &gt; 85 AND COUNT(*) &gt;= 2</groupConstraint><index>0</index><name>NetMemCrit</name><singleConstraint>eventType = "PH_DEV_MON_SYS_MEM_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network) AND memName = "Physical Memory"</singleConstraint></eventFilters><name>Network Memory Critical</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112342</eventFilters><fireInternalIncident>true</fireInternalIncident><incidentAttrs>
        hostIpAddr = NetMemCrit.hostIpAddr, hostName = NetMemCrit.hostName, memUtil = NetMemCrit.AVG(memUtil)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_NET_MEM_CRIT</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,memUtil,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Server" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_209" entityVersion="2" xmlId="Rule$PH_Rule_Perf_209" ownerId="500150" lastModified="1387781723285" id="1387369" custId="0" creationTime="1387520494335"><activatedTime>1387781723284</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that server disk space usage has reached a warning level (utilization between 80% and 95% and free disk still greater than 100 MB) based on 2 successive readings in a 10 minute interval</description><eventFilters entityVersion="0" xmlId="EventFilter@2112343" ownerId="500150" lastModified="1387781723284" id="2112343" custId="0" creationTime="1387781723284"><groupBy>hostIpAddr,hostName,diskName</groupBy><groupConstraint>((AVG(diskUtil) &gt;= 80 AND AVG(diskUtil) &lt;= 95) OR (AVG(diskUtil) &gt;= 95 AND AVG(freeDiskMB) &gt; 100)) AND COUNT(*) &gt;= 2</groupConstraint><index>0</index><name>ServDiskWarn</name><singleConstraint>eventType = "PH_DEV_MON_SYS_DISK_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server) AND diskName NOT IN ("/boot")</singleConstraint></eventFilters><name>Server Disk space Warning</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112343</eventFilters><fireInternalIncident>true</fireInternalIncident><incidentAttrs>
        hostIpAddr = ServDiskWarn.hostIpAddr, hostName = ServDiskWarn.hostName, diskName = ServDiskWarn.diskName, diskUtil = ServDiskWarn.AVG(diskUtil), freeDiskMB =  ServDiskWarn.AVG(freeDiskMB) 
      </incidentAttrs><incidentFireFreq>21600</incidentFireFreq><incidentFired>true</incidentFired><incidentType>EventType$PH_RULE_SERVER_DISK_SPACE_WARN</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,diskName,diskUtil,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Server" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_210" entityVersion="2" xmlId="Rule$PH_Rule_Perf_210" ownerId="500150" lastModified="1387781723398" id="1387370" custId="0" creationTime="1387520494451"><activatedTime>1387781723398</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that server disk space usage has reached a critical level (greater than 95% and free disk less than 100 MB) based on 2 successive readings in a 10 minute interval</description><eventFilters entityVersion="0" xmlId="EventFilter@2112344" ownerId="500150" lastModified="1387781723398" id="2112344" custId="0" creationTime="1387781723398"><groupBy>hostIpAddr,hostName,diskName</groupBy><groupConstraint>AVG(diskUtil) &gt; 95 AND AVG(freeDiskMB) &lt; 100 AND COUNT(*) &gt;= 2</groupConstraint><index>0</index><name>ServDiskCrit</name><singleConstraint>eventType = "PH_DEV_MON_SYS_DISK_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server) AND diskName NOT IN ("/boot")</singleConstraint></eventFilters><name>Server Disk Space Critical</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112344</eventFilters><fireInternalIncident>true</fireInternalIncident><incidentAttrs>
        hostIpAddr = ServDiskCrit.hostIpAddr, hostName = ServDiskCrit.hostName, diskName = ServDiskCrit.diskName, diskUtil = ServDiskCrit.AVG(diskUtil), freeDiskMB =  ServDiskCrit.AVG(freeDiskMB)
      </incidentAttrs><incidentFireFreq>21600</incidentFireFreq><incidentFired>true</incidentFired><incidentType>EventType$PH_RULE_SERVER_DISK_SPACE_CRIT</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,diskName,diskUtil,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Server" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_209B" entityVersion="2" xmlId="Rule$PH_Rule_Perf_209B" ownerId="500150" lastModified="1387781723512" id="1387371" custId="0" creationTime="1387520494567"><activatedTime>1387781723512</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that server disk I/O latency has reached a warning level (between 20 and 50 msec) based on 2 successive readings in a 10 minute interval</description><eventFilters entityVersion="0" xmlId="EventFilter@2112345" ownerId="500150" lastModified="1387781723512" id="2112345" custId="0" creationTime="1387781723512"><groupBy>hostIpAddr,hostName,diskName</groupBy><groupConstraint>((AVG(devDiskRdLatency) &gt;= 20 AND AVG(devDiskRdLatency) &lt; 50) OR (AVG(devDiskWrLatency) &gt;= 20 AND AVG(devDiskWrLatency) &lt; 50)) AND COUNT(*) &gt;= 2</groupConstraint><index>0</index><name>ServDiskLatencyWarn</name><singleConstraint>eventType = "PH_DEV_MON_DISK_IO_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server) AND diskName NOT IN ("/boot")</singleConstraint></eventFilters><name>Server Disk Latency Warning</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112345</eventFilters><fireInternalIncident>true</fireInternalIncident><incidentAttrs>
        hostIpAddr = ServDiskLatencyWarn.hostIpAddr, hostName = ServDiskLatencyWarn.hostName, diskName = ServDiskLatencyWarn.diskName, devDiskRdLatency = ServDiskLatencyWarn.AVG(devDiskRdLatency), devDiskWrLatency = ServDiskLatencyWarn.AVG(devDiskWrLatency)
      </incidentAttrs><incidentFireFreq>21600</incidentFireFreq><incidentFired>true</incidentFired><incidentType>EventType$PH_RULE_SERVER_DISK_LATENCY_WARN</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,diskName,devDiskRdLatency,devDiskWrLatency,diskQLen,diskIOUtil,diskReadReqPerSec,diskWriteReqPerSec,diskReadKBytesPerSec,diskWriteKBytesPerSec</triggerEventAttrList></rule><rule phIncidentCategory="Server" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_209C" entityVersion="2" xmlId="Rule$PH_Rule_Perf_209C" ownerId="500150" lastModified="1387781723627" id="1387372" custId="0" creationTime="1387520494683"><activatedTime>1387781723626</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that server disk I/O latency has reached a critical level (greater  than 50 msec) based on 2 successive readings in a 10 minute interval</description><eventFilters entityVersion="0" xmlId="EventFilter@2112346" ownerId="500150" lastModified="1387781723626" id="2112346" custId="0" creationTime="1387781723626"><groupBy>hostIpAddr,hostName,diskName</groupBy><groupConstraint>(AVG(devDiskRdLatency) &gt;= 50 OR AVG(devDiskWrLatency) &gt;= 50) AND COUNT(*) &gt;= 2</groupConstraint><index>0</index><name>ServDiskLatencyCrit</name><singleConstraint>eventType = "PH_DEV_MON_DISK_IO_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server) AND diskName NOT IN ("/boot")</singleConstraint></eventFilters><name>Server Disk Latency Critical</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112346</eventFilters><fireInternalIncident>true</fireInternalIncident><incidentAttrs>
        hostIpAddr = ServDiskLatencyCrit.hostIpAddr, hostName = ServDiskLatencyCrit.hostName, diskName = ServDiskLatencyCrit.diskName,devDiskRdLatency = ServDiskLatencyCrit.AVG(devDiskRdLatency), devDiskWrLatency = ServDiskLatencyCrit.AVG(devDiskWrLatency)
      </incidentAttrs><incidentFireFreq>21600</incidentFireFreq><incidentFired>true</incidentFired><incidentType>EventType$PH_RULE_SERVER_DISK_LATENCY_CRIT</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,diskName,devDiskRdLatency,devDiskWrLatency,diskQLen,diskIOUtil,diskReadReqPerSec,diskWriteReqPerSec,diskReadKBytesPerSec,diskWriteKBytesPerSec</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_211" entityVersion="2" xmlId="Rule$PH_Rule_Perf_211" ownerId="500150" lastModified="1387781723742" id="1387373" custId="0" creationTime="1387520494801"><activatedTime>1387781723741</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that interface utilization of a network device has reached a warning level (utilization between 30% and 50% based on 2 successive readings in a 10 minute interval. IPS devices are excluded since being a sniffing interface, they have high utilization under normal circumstances.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112347" ownerId="500150" lastModified="1387781723741" id="2112347" custId="0" creationTime="1387781723741"><groupBy>hostIpAddr,hostName,intfName</groupBy><groupConstraint>((AVG(inIntfUtil) &gt;= 30 AND AVG(inIntfUtil) &lt;= 50) OR
          (AVG(outIntfUtil) &gt;= 30 AND AVG(outIntfUtil) &lt;= 50)) AND COUNT(*) &gt;= 2</groupConstraint><index>0</index><name>IntfUtilWarn</name><singleConstraint>eventType = "PH_DEV_MON_NET_INTF_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network) AND hostIpAddr NOT IN (Group@PH_SYS_DEVICE_NETWORK_IPS)</singleConstraint></eventFilters><name>Network Intf Util Warning</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112347</eventFilters><fireInternalIncident>true</fireInternalIncident><incidentAttrs>
        hostIpAddr = IntfUtilWarn.hostIpAddr, hostName = IntfUtilWarn.hostName, intfName = IntfUtilWarn.intfName, inIntfUtil = IntfUtilWarn.AVG(inIntfUtil),outIntfUtil = IntfUtilWarn.AVG(outIntfUtil) 
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>true</incidentFired><incidentType>EventType$PH_RULE_NET_INTF_UTIL_WARN</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,intfName,inIntfUtil,outIntfUtil,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_212" entityVersion="2" xmlId="Rule$PH_Rule_Perf_212" ownerId="500150" lastModified="1387781723857" id="1387374" custId="0" creationTime="1387520494916"><activatedTime>1387781723856</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that interface utilization of a network device has reached a critical level (utilization greater than 50% based on 2 successive readings in a 10 minute interval. IPS devices are excluded since being a sniffing interface, they have high utilization under normal circumstances.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112348" ownerId="500150" lastModified="1387781723856" id="2112348" custId="0" creationTime="1387781723856"><groupBy>hostIpAddr,hostName,intfName</groupBy><groupConstraint>(AVG(inIntfUtil) &gt; 50 OR AVG(outIntfUtil) &gt; 50) AND COUNT(*) &gt;= 2</groupConstraint><index>0</index><name>IntfUtilCrit</name><singleConstraint>eventType = "PH_DEV_MON_NET_INTF_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network) AND hostIpAddr NOT IN (Group@PH_SYS_DEVICE_NETWORK_IPS) AND intfName NOT IN ("lo","Null0")</singleConstraint></eventFilters><name>Network Intf Util Critical</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112348</eventFilters><fireInternalIncident>true</fireInternalIncident><incidentAttrs>
        hostIpAddr = IntfUtilCrit.hostIpAddr, hostName = IntfUtilCrit.hostName, intfName = IntfUtilCrit.intfName, inIntfUtil = IntfUtilCrit.AVG(inIntfUtil),outIntfUtil = IntfUtilCrit.AVG(outIntfUtil) 
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>true</incidentFired><incidentType>EventType$PH_RULE_NET_INTF_UTIL_CRIT</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,intfName,inIntfUtil,outIntfUtil,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_211_B" entityVersion="2" xmlId="Rule$PH_Rule_Perf_211_B" ownerId="500150" lastModified="1387781723972" id="1387375" custId="0" creationTime="1387520495032"><activatedTime>1387781723972</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that interface utilization of a network IPS device has reached a warning level (utilization between 60% and 80% based on 2 successive readings in a 10 minute interval.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112349" ownerId="500150" lastModified="1387781723972" id="2112349" custId="0" creationTime="1387781723972"><groupBy>hostIpAddr,hostName,intfName</groupBy><groupConstraint>((AVG(inIntfUtil) &gt;= 60 AND AVG(inIntfUtil) &lt;= 80) OR
          (AVG(outIntfUtil) &gt;= 60 AND AVG(outIntfUtil) &lt;= 80)) AND COUNT(*) &gt;= 2</groupConstraint><index>0</index><name>IntfUtilWarn</name><singleConstraint>eventType = "PH_DEV_MON_NET_INTF_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network) AND hostIpAddr IN (Group@PH_SYS_DEVICE_NETWORK_IPS) AND intfName NOT IN ("lo","Null0")</singleConstraint></eventFilters><name>Network IPS Intf Util Warning</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112349</eventFilters><fireInternalIncident>true</fireInternalIncident><incidentAttrs>
        hostIpAddr = IntfUtilWarn.hostIpAddr, hostName = IntfUtilWarn.hostName, intfName = IntfUtilWarn.intfName, inIntfUtil = IntfUtilWarn.AVG(inIntfUtil),outIntfUtil = IntfUtilWarn.AVG(outIntfUtil) 
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_IPS_NET_INTF_UTIL_WARN</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,intfName,inIntfUtil,outIntfUtil,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_212_B" entityVersion="2" xmlId="Rule$PH_Rule_Perf_212_B" ownerId="500150" lastModified="1387781724210" id="1387376" custId="0" creationTime="1387520495148"><activatedTime>1387781724210</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that interface utilization of a network IPS device has reached a critical level (utilization greater than 80% based on 2 successive readings in a 10 minute interval.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112350" ownerId="500150" lastModified="1387781724209" id="2112350" custId="0" creationTime="1387781724209"><groupBy>hostIpAddr,hostName,intfName</groupBy><groupConstraint>(AVG(inIntfUtil) &gt; 80 OR AVG(outIntfUtil) &gt; 80) AND COUNT(*) &gt;= 2</groupConstraint><index>0</index><name>IntfUtilCrit</name><singleConstraint>eventType = "PH_DEV_MON_NET_INTF_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network) AND hostIpAddr IN (Group@PH_SYS_DEVICE_NETWORK_IPS) AND intfName NOT CONTAIN "Loopback" AND intfName NOT IN ("lo","Null0")</singleConstraint></eventFilters><name>Network IPS Intf Util Critical</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112350</eventFilters><fireInternalIncident>true</fireInternalIncident><incidentAttrs>
        hostIpAddr = IntfUtilCrit.hostIpAddr, hostName = IntfUtilCrit.hostName, intfName = IntfUtilCrit.intfName, inIntfUtil = IntfUtilCrit.AVG(inIntfUtil),outIntfUtil = IntfUtilCrit.AVG(outIntfUtil) 
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_IPS_NET_INTF_UTIL_CRIT</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,intfName,inIntfUtil,outIntfUtil,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Server" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_213" entityVersion="2" xmlId="Rule$PH_Rule_Perf_213" ownerId="500150" lastModified="1387781724330" id="1387377" custId="0" creationTime="1387520495254"><activatedTime>1387781724329</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that interface utilization of a server has reached a warning level (utilization between 30% and 50% based on 2 successive readings in a 10 minute interval</description><eventFilters entityVersion="0" xmlId="EventFilter@2112351" ownerId="500150" lastModified="1387781724329" id="2112351" custId="0" creationTime="1387781724329"><groupBy>hostIpAddr,hostName,intfName</groupBy><groupConstraint>((AVG(inIntfUtil) &gt;= 30 AND AVG(inIntfUtil) &lt;= 50) OR
          (AVG(outIntfUtil) &gt;= 30 AND AVG(outIntfUtil) &lt;= 50)) AND COUNT(*) &gt;= 2</groupConstraint><index>0</index><name>IntfUtilWarn</name><singleConstraint>eventType = "PH_DEV_MON_NET_INTF_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server) AND hostIpAddr NOT IN (Group@PH_SYS_APP_NETWORK_IPS) AND intfName NOT CONTAIN "Loopback" AND intfName NOT IN ("lo","Null0")</singleConstraint></eventFilters><name>Server Intf Util Warning</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112351</eventFilters><fireInternalIncident>true</fireInternalIncident><incidentAttrs>
        hostIpAddr = IntfUtilWarn.hostIpAddr, hostName = IntfUtilWarn.hostName, intfName = IntfUtilWarn.intfName, inIntfUtil = IntfUtilWarn.AVG(inIntfUtil),outIntfUtil = IntfUtilWarn.AVG(outIntfUtil) 
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>true</incidentFired><incidentType>EventType$PH_RULE_SERVER_INTF_UTIL_WARN</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,intfName,inIntfUtil,outIntfUtil,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Server" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_214" entityVersion="2" xmlId="Rule$PH_Rule_Perf_214" ownerId="500150" lastModified="1387781724447" id="1387378" custId="0" creationTime="1387520495354"><activatedTime>1387781724446</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that interface utilization of a network device has reached a critical level (utilization greater than 50% based on 2 successive readings in a 10 minute interval</description><eventFilters entityVersion="0" xmlId="EventFilter@2112352" ownerId="500150" lastModified="1387781724446" id="2112352" custId="0" creationTime="1387781724446"><groupBy>hostIpAddr,hostName,intfName</groupBy><groupConstraint>(AVG(inIntfUtil) &gt; 50 OR AVG(outIntfUtil) &gt; 50) AND COUNT(*) &gt;= 2</groupConstraint><index>0</index><name>IntfUtilCrit</name><singleConstraint>eventType = "PH_DEV_MON_NET_INTF_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server) AND hostIpAddr NOT IN (Group@PH_SYS_APP_NETWORK_IPS) AND intfName NOT CONTAIN "Loopback" AND intfName NOT IN ("lo","Null0")</singleConstraint></eventFilters><name>Server Intf Util Critical</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112352</eventFilters><fireInternalIncident>true</fireInternalIncident><incidentAttrs>
        hostIpAddr = IntfUtilCrit.hostIpAddr, hostName = IntfUtilCrit.hostName, intfName = IntfUtilCrit.intfName, inIntfUtil = IntfUtilCrit.AVG(inIntfUtil),outIntfUtil = IntfUtilCrit.AVG(outIntfUtil) 
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_SERVER_INTF_UTIL_CRIT</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,intfName,inIntfUtil,outIntfUtil,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_215" entityVersion="2" xmlId="Rule$PH_Rule_Perf_215" ownerId="500150" lastModified="1387781724564" id="1387379" custId="0" creationTime="1387520495487"><activatedTime>1387781724563</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that a network device interface error has reached a warning level (utilization between 1% and 5% based on 2 successive readings in a 10 minute interval</description><eventFilters entityVersion="0" xmlId="EventFilter@2112353" ownerId="500150" lastModified="1387781724563" id="2112353" custId="0" creationTime="1387781724563"><groupBy>hostIpAddr,hostName,intfName</groupBy><groupConstraint>AVG(inIntfPktErrPct) &gt;= 1 AND AVG(inIntfPktErrPct) &lt;= 5 OR
          AVG(outIntfPktErrPct) &gt;= 1 AND AVG(outIntfPktErrPct) &lt;= 5 AND COUNT(*) &gt;= 2</groupConstraint><index>0</index><name>IntfErrorWarn</name><singleConstraint>eventType = "PH_DEV_MON_NET_INTF_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network)</singleConstraint></eventFilters><name>Network Intf Error Warning</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112353</eventFilters><fireInternalIncident>true</fireInternalIncident><incidentAttrs>
        hostIpAddr = IntfErrorWarn.hostIpAddr, hostName = IntfErrorWarn.hostName, intfName = IntfErrorWarn.intfName,inIntfPktErrPct = IntfErrorWarn.AVG(inIntfPktErrPct), outIntfPktErrPct = IntfErrorWarn.AVG(outIntfPktErrPct)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_NET_INTF_ERR_WARN</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,intfName,inIntfPktErrPct,outIntfPktErrPct,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Network" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_216" entityVersion="2" xmlId="Rule$PH_Rule_Perf_216" ownerId="500150" lastModified="1387781724683" id="1387380" custId="0" creationTime="1387520495589"><activatedTime>1387781724682</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that a network device interface errors has reached a critical level (greater than 5% based on 2 successive readings in a 10 minute interval</description><eventFilters entityVersion="0" xmlId="EventFilter@2112354" ownerId="500150" lastModified="1387781724682" id="2112354" custId="0" creationTime="1387781724682"><groupBy>hostIpAddr,hostName,intfName</groupBy><groupConstraint>AVG(inIntfPktErrPct) &gt; 5 OR AVG(outIntfPktErrPct) &gt; 5) AND COUNT(*) &gt;= 2</groupConstraint><index>0</index><name>IntfErrorCrit</name><singleConstraint>eventType = "PH_DEV_MON_NET_INTF_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network)</singleConstraint></eventFilters><name>Network Intf Error Critical</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112354</eventFilters><fireInternalIncident>true</fireInternalIncident><incidentAttrs>
        hostIpAddr = IntfErrorCrit.hostIpAddr, hostName = IntfErrorCrit.hostName, intfName = IntfErrorCrit.intfName, inIntfPktErrPct = IntfErrorCrit.AVG(inIntfPktErrPct), outIntfPktErrPct = IntfErrorCrit.AVG(outIntfPktErrPct)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_NET_INTF_ERR_CRIT</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,intfName,inIntfPktErrPct,outIntfPktErrPct,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Server" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_217" entityVersion="2" xmlId="Rule$PH_Rule_Perf_217" ownerId="500150" lastModified="1387781724800" id="1387381" custId="0" creationTime="1387520495729"><activatedTime>1387781724799</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that a server interface error has reached a warning level (utilization between 1% and 5% based on 2 successive readings in a 10 minute interval</description><eventFilters entityVersion="0" xmlId="EventFilter@2112355" ownerId="500150" lastModified="1387781724799" id="2112355" custId="0" creationTime="1387781724799"><groupBy>hostIpAddr,hostName,intfName</groupBy><groupConstraint>AVG(inIntfPktErrPct) &gt;= 1 AND AVG(inIntfPktErrPct) &lt;= 5 OR
          AVG(outIntfPktErrPct) &gt;= 1 AND AVG(outIntfPktErrPct) &lt;= 5 AND COUNT(*) &gt;= 2</groupConstraint><index>0</index><name>IntfErrorWarn</name><singleConstraint>eventType = "PH_DEV_MON_NET_INTF_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server)</singleConstraint></eventFilters><name>Server Intf Error Warning</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112355</eventFilters><fireInternalIncident>true</fireInternalIncident><incidentAttrs>
        hostIpAddr = IntfErrorWarn.hostIpAddr, hostName = IntfErrorWarn.hostName, intfName = IntfErrorWarn.intfName,inIntfPktErrPct = IntfErrorWarn.AVG(inIntfPktErrPct), outIntfPktErrPct = IntfErrorWarn.AVG(outIntfPktErrPct)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_SERVER_INTF_ERR_WARN</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,intfName,inIntfPktErrPct,outIntfPktErrPct,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Server" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_218" entityVersion="2" xmlId="Rule$PH_Rule_Perf_218" ownerId="500150" lastModified="1387781724919" id="1387382" custId="0" creationTime="1387520495871"><activatedTime>1387781724918</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that a server interface errors has reached a critical level (greater than 5% based on 2 successive readings in a 10 minute interval</description><eventFilters entityVersion="0" xmlId="EventFilter@2112356" ownerId="500150" lastModified="1387781724918" id="2112356" custId="0" creationTime="1387781724918"><groupBy>hostIpAddr,hostName,intfName</groupBy><groupConstraint>AVG(inIntfPktErrPct) &gt; 5 OR AVG(outIntfPktErrPct) &gt; 5) AND COUNT(*) &gt;= 2</groupConstraint><index>0</index><name>IntfErrorCrit</name><singleConstraint>eventType = "PH_DEV_MON_NET_INTF_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server)</singleConstraint></eventFilters><name>Server Intf Error Critical</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112356</eventFilters><fireInternalIncident>true</fireInternalIncident><incidentAttrs>
        hostIpAddr = IntfErrorCrit.hostIpAddr, hostName = IntfErrorCrit.hostName, intfName = IntfErrorCrit.intfName, inIntfPktErrPct = IntfErrorCrit.AVG(inIntfPktErrPct), outIntfPktErrPct = IntfErrorCrit.AVG(outIntfPktErrPct)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_SERVER_INTF_ERR_CRIT</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,intfName,inIntfPktErrPct,outIntfPktErrPct,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Virtualization" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_219" entityVersion="2" xmlId="Rule$PH_Rule_Perf_219" ownerId="500150" lastModified="1387781725037" id="1387383" custId="0" creationTime="1387520495972"><activatedTime>1387781725036</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that virtual server CPU ready percent has reached a warning level (between 20% and 25% based on 2 successive readings in a 10 minute interval</description><eventFilters entityVersion="0" xmlId="EventFilter@2112357" ownerId="500150" lastModified="1387781725036" id="2112357" custId="0" creationTime="1387781725036"><groupBy>hostName,hostIpAddr,phyMachIpAddr,phyMachName</groupBy><groupConstraint>AVG(cpuReadyPct) &gt;= 20 AND AVG(cpuReadyPct) &lt; 25 AND COUNT(*) &gt;= 2</groupConstraint><index>0</index><name>VMCPUMedium</name><singleConstraint>eventType = "PH_DEV_MON_VM_CPU_UTIL"</singleConstraint></eventFilters><name>Virtual Machine CPU Warning</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112357</eventFilters><fireInternalIncident>true</fireInternalIncident><incidentAttrs>
        hostIpAddr = VMCPUMedium.hostIpAddr,hostName = VMCPUMedium.hostName,phyMachIpAddr = VMCPUMedium.phyMachIpAddr,phyMachName = VMCPUMedium.phyMachName,cpuReadyPct = VMCPUMedium.AVG(cpuReadyPct)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_VM_CPU_WARN</incidentType><triggerEventAttrList>phRecvTime,eventType,hostName,hostIpAddr,phyMachIpAddr,phyMachName,cpuUtil,cpuSysPct,cpuReadyPct,phyCpuUtil,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Virtualization" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_220" entityVersion="2" xmlId="Rule$PH_Rule_Perf_220" ownerId="500150" lastModified="1387781725159" id="1387384" custId="0" creationTime="1387520496073"><activatedTime>1387781725158</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that virtual server CPU ready percent has reached a critical level (greater than 25% based on 2 successive readings in a 10 minute interval</description><eventFilters entityVersion="0" xmlId="EventFilter@2112358" ownerId="500150" lastModified="1387781725158" id="2112358" custId="0" creationTime="1387781725158"><groupBy>hostName,hostIpAddr,phyMachIpAddr,phyMachName</groupBy><groupConstraint>AVG(cpuReadyPct) &gt;= 25 AND COUNT(*) &gt;= 2</groupConstraint><index>0</index><name>VMCPUHigh</name><singleConstraint>eventType = "PH_DEV_MON_VM_CPU_UTIL"</singleConstraint></eventFilters><name>Virtual Machine CPU Critical</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112358</eventFilters><fireInternalIncident>true</fireInternalIncident><incidentAttrs>
        hostIpAddr = VMCPUHigh.hostIpAddr,hostName = VMCPUHigh.hostName,phyMachIpAddr = VMCPUHigh.phyMachIpAddr,phyMachName = VMCPUHigh.phyMachName,cpuReadyPct = VMCPUHigh.AVG(cpuReadyPct)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_VM_CPU_CRIT</incidentType><triggerEventAttrList>phRecvTime,eventType,hostName,hostIpAddr,phyMachIpAddr,phyMachName,cpuUtil,cpuSysPct,cpuReadyPct,phyCpuUtil,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Virtualization" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_221" entityVersion="2" xmlId="Rule$PH_Rule_Perf_221" ownerId="500150" lastModified="1387781725348" id="1387385" custId="0" creationTime="1387520496174"><activatedTime>1387781725347</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that virtual machine memory has reached a warning level based on swapping rate between 1MBps and 1.5MBps based on 2 successive readings in a 10 minute interval</description><eventFilters entityVersion="0" xmlId="EventFilter@2112359" ownerId="500150" lastModified="1387781725346" id="2112359" custId="0" creationTime="1387781725346"><groupBy>hostName,hostIpAddr,phyMachIpAddr,phyMachName</groupBy><groupConstraint>AVG(swapReadKBytesPerSec) &gt;= 1000 AND AVG(swapReadKBytesPerSec) &lt; 1500 AND COUNT(*) &gt;= 2</groupConstraint><index>0</index><name>VMMemMedium</name><singleConstraint>eventType = "PH_DEV_MON_VM_MEM_UTIL"</singleConstraint></eventFilters><name>Virtual Machine Memory Swapping Warning</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112359</eventFilters><fireInternalIncident>true</fireInternalIncident><incidentAttrs>
        hostIpAddr = VMMemMedium.hostIpAddr,hostName = VMMemMedium.hostName,phyMachIpAddr = VMMemMedium.phyMachIpAddr,phyMachName = VMMemMedium.phyMachName,swapReadKBytesPerSec  = VMMemMedium.AVG(swapReadKBytesPerSec)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_VM_MEM_WARN</incidentType><triggerEventAttrList>phRecvTime,eventType,hostName,hostIpAddr,phyMachIpAddr,phyMachName,memUtil,swapReadKBytesPerSec,swapWriteKBytesPerSec,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Virtualization" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_222" entityVersion="2" xmlId="Rule$PH_Rule_Perf_222" ownerId="500150" lastModified="1387781725467" id="1387386" custId="0" creationTime="1387520496277"><activatedTime>1387781725465</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that virtual machine memory has reached a warning level based on swapping rate greater than 1.5MBps based on 2 successive readings in a 10 minute interval</description><eventFilters entityVersion="0" xmlId="EventFilter@2112360" ownerId="500150" lastModified="1387781725465" id="2112360" custId="0" creationTime="1387781725465"><groupBy>hostName,hostIpAddr,phyMachIpAddr,phyMachName</groupBy><groupConstraint>AVG(swapReadKBytesPerSec) &gt; 1500 AND COUNT(*) &gt;= 2</groupConstraint><index>0</index><name>VMMemHigh</name><singleConstraint>eventType = "PH_DEV_MON_VM_MEM_UTIL"</singleConstraint></eventFilters><name>Virtual Machine Memory Swapping Critical</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112360</eventFilters><fireInternalIncident>true</fireInternalIncident><incidentAttrs>
        hostIpAddr = VMMemHigh.hostIpAddr,hostName = VMMemHigh.hostName,phyMachIpAddr = VMMemHigh.phyMachIpAddr,phyMachName = VMMemHigh.phyMachName,swapReadKBytesPerSec  = VMMemHigh.AVG(swapReadKBytesPerSec)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_VM_MEM_CRIT</incidentType><triggerEventAttrList>phRecvTime,eventType,hostName,hostIpAddr,phyMachIpAddr,phyMachName,cpuUtil,cpuSysPct,cpuReadyPct,phyCpuUtil,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Virtualization" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_224" entityVersion="2" xmlId="Rule$PH_Rule_Perf_224" ownerId="500150" lastModified="1387781725586" id="1387387" custId="0" creationTime="1387520496379"><activatedTime>1387781725585</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that virtual machine SCSI bus reset indicating that a read or write failed to complete within an acceptable amount of time. Storage could be a bottleneck.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112361" ownerId="500150" lastModified="1387781725585" id="2112361" custId="0" creationTime="1387781725585"><groupBy>hostName,hostIpAddr,phyMachIpAddr,phyMachName,diskAdapter</groupBy><groupConstraint>AVG(diskBusResets) &gt;= 1 AND COUNT(*) &gt; 0</groupConstraint><index>0</index><name>VMDiskReset</name><singleConstraint>eventType = "PH_DEV_MON_VM_DISK_IO"</singleConstraint></eventFilters><name>Virtual Machine SCSI Bus Reset</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112361</eventFilters><fireInternalIncident>true</fireInternalIncident><incidentAttrs>
        hostIpAddr = VMDiskReset.hostIpAddr,hostName = VMDiskReset.hostName,phyMachIpAddr = VMDiskReset.phyMachIpAddr,phyMachName = VMDiskReset.phyMachName,diskAdapter = VMDiskReset.diskAdapter
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_VM_DISKIO_SCSI_BUS_RESET</incidentType><triggerEventAttrList>phRecvTime,eventType,hostName,hostIpAddr,phyMachIpAddr,phyMachName,diskAdapter,diskBusResets,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Virtualization" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_225" entityVersion="2" xmlId="Rule$PH_Rule_Perf_225" ownerId="500150" lastModified="1387781725706" id="1387388" custId="0" creationTime="1387520496481"><activatedTime>1387781725705</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that ESX CPU utilization has reached a warning level (between 75% and 95% based on 2 successive readings in a 10 minute interval</description><eventFilters entityVersion="0" xmlId="EventFilter@2112362" ownerId="500150" lastModified="1387781725705" id="2112362" custId="0" creationTime="1387781725705"><groupBy>hostName,hostIpAddr</groupBy><groupConstraint>AVG(cpuUtil) &gt;= 75 AND AVG(cpuUtil) &lt;= 95 AND COUNT(*) &gt;= 2</groupConstraint><index>0</index><name>ESXCPUWarn</name><singleConstraint>eventType = "PH_DEV_MON_SYS_CPU_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_VM_SERVER)</singleConstraint></eventFilters><name>ESX CPU Warning</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112362</eventFilters><fireInternalIncident>true</fireInternalIncident><incidentAttrs>
        hostIpAddr = ESXCPUWarn.hostIpAddr,hostName = ESXCPUWarn.hostName,cpuUtil = ESXCPUWarn.AVG(cpuUtil)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>true</incidentFired><incidentType>EventType$PH_RULE_ESX_CPU_WARN</incidentType><triggerEventAttrList>phRecvTime,eventType,hostName,hostIpAddr,cpuUtil,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Virtualization" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_226" entityVersion="2" xmlId="Rule$PH_Rule_Perf_226" ownerId="500150" lastModified="1387781725826" id="1387389" custId="0" creationTime="1387520496583"><activatedTime>1387781725824</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that ESX CPU utilization has reached a critical level (greater than 95% based on 2 successive readings in a 10 minute interval</description><eventFilters entityVersion="0" xmlId="EventFilter@2112363" ownerId="500150" lastModified="1387781725824" id="2112363" custId="0" creationTime="1387781725824"><groupBy>hostName,hostIpAddr</groupBy><groupConstraint>AVG(cpuUtil) &gt; 95 AND COUNT(*) &gt;= 2</groupConstraint><index>0</index><name>ESXCPUCrit</name><singleConstraint>eventType = "PH_DEV_MON_SYS_CPU_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_VM_SERVER)</singleConstraint></eventFilters><name>ESX CPU Critical</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112363</eventFilters><fireInternalIncident>true</fireInternalIncident><incidentAttrs>
        hostIpAddr = ESXCPUCrit.hostIpAddr,hostName = ESXCPUCrit.hostName,cpuUtil = ESXCPUCrit.AVG(cpuUtil)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_ESX_CPU_CRIT</incidentType><triggerEventAttrList>phRecvTime,eventType,hostName,hostIpAddr,cpuUtil,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Virtualization" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_227" entityVersion="2" xmlId="Rule$PH_Rule_Perf_227" ownerId="500150" lastModified="1387781725946" id="1387390" custId="0" creationTime="1387520496685"><activatedTime>1387781725945</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that ESX memory utilization has reached a warning level (greater than 85% and swap rate between 1MBps and 1.5 MBps) based on 2 successive readings in a 10 minute interval</description><eventFilters entityVersion="0" xmlId="EventFilter@2112364" ownerId="500150" lastModified="1387781725945" id="2112364" custId="0" creationTime="1387781725945"><groupBy>hostName,hostIpAddr</groupBy><groupConstraint>AVG(memUtil) &gt;= 85 AND AVG(swapReadKBytesPerSec) &gt;= 1000 AND AVG(swapReadKBytesPerSec) &lt;= 1500 AND COUNT(*) &gt;= 2</groupConstraint><index>0</index><name>ESXMemWarn</name><singleConstraint>eventType = "PH_DEV_MON_SYS_MEM_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_VM_SERVER)</singleConstraint></eventFilters><name>ESX Memory Warning</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112364</eventFilters><fireInternalIncident>true</fireInternalIncident><incidentAttrs>
        hostIpAddr = ESXMemWarn.hostIpAddr, hostName = ESXMemWarn.hostName, memUtil = ESXMemWarn.AVG(memUtil), swapReadKBytesPerSec = ESXMemWarn.AVG(swapReadKBytesPerSec)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_ESX_MEM_WARN</incidentType><triggerEventAttrList>phRecvTime,eventType,hostName,hostIpAddr,memUtil,swapReadKBytesPerSec,swapWriteKBytesPerSec,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Virtualization" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_228" entityVersion="2" xmlId="Rule$PH_Rule_Perf_228" ownerId="500150" lastModified="1387781726067" id="1387391" custId="0" creationTime="1387520496787"><activatedTime>1387781726066</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that ESX memory utilization has reached a critical level (greater than 95% based on 2 successive readings in a 10 minute interval</description><eventFilters entityVersion="0" xmlId="EventFilter@2112365" ownerId="500150" lastModified="1387781726065" id="2112365" custId="0" creationTime="1387781726065"><groupBy>hostName,hostIpAddr</groupBy><groupConstraint>AVG(memUtil) &gt; 95 AND AVG(swapReadKBytesPerSec) &gt; 1500 AND COUNT(*) &gt;= 2</groupConstraint><index>0</index><name>ESXMemCrit</name><singleConstraint>eventType = "PH_DEV_MON_SYS_MEM_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_VM_SERVER)</singleConstraint></eventFilters><name>ESX Memory Critical</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112365</eventFilters><fireInternalIncident>true</fireInternalIncident><incidentAttrs>
        hostIpAddr = ESXMemCrit.hostIpAddr,hostName = ESXMemCrit.hostName, memUtil = ESXMemCrit.AVG(memUtil), swapReadKBytesPerSec = ESXMemCrit.AVG(swapReadKBytesPerSec)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_ESX_MEM_CRIT</incidentType><triggerEventAttrList>phRecvTime,eventType,hostName,hostIpAddr,memUtil,swapReadKBytesPerSec,swapWriteKBytesPerSec,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Virtualization" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_229" entityVersion="2" xmlId="Rule$PH_Rule_Perf_229" ownerId="500150" lastModified="1387781726215" id="1387392" custId="0" creationTime="1387520496891"><activatedTime>1387781726213</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that ESX disk I/O utilization has reached a warning level - average Disk IO Latency between 20ms and 50ms based on 2 successive readings in a 10 minute interval</description><eventFilters entityVersion="0" xmlId="EventFilter@2112366" ownerId="500150" lastModified="1387781726213" id="2112366" custId="0" creationTime="1387781726213"><groupBy>hostName,hostIpAddr,diskName,datastore</groupBy><groupConstraint>((AVG(devDiskRdLatency) &gt;= 20 AND AVG(devDiskRdLatency) &lt;= 50) OR (AVG(devDiskWrLatency) &gt;= 20 AND AVG(devDiskWrLatency) &lt; 50)) AND COUNT(*) &gt;= 2</groupConstraint><index>0</index><name>ESXDiskWarn</name><singleConstraint>eventType = "PH_DEV_MON_ESX_DISK_IO"</singleConstraint></eventFilters><name>ESX Disk I/O Warning</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112366</eventFilters><fireInternalIncident>true</fireInternalIncident><incidentAttrs>
        hostIpAddr = ESXDiskWarn.hostIpAddr, hostName = ESXDiskWarn.hostName, diskName = ESXDiskWarn.diskName, datastore = ESXDiskWarn.datastore,
        devDiskRdLatency = ESXDiskWarn.AVG(devDiskRdLatency), devDiskWrLatency = ESXDiskWarn.AVG(devDiskWrLatency)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>true</incidentFired><incidentType>EventType$PH_RULE_ESX_DISKIO_WARN</incidentType><triggerEventAttrList>phRecvTime,eventType,hostName,hostIpAddr,diskName,datastore,devDiskRdLatency,devDiskWrLatency,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Virtualization" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_230" entityVersion="2" xmlId="Rule$PH_Rule_Perf_230" ownerId="500150" lastModified="1387781726338" id="1387393" custId="0" creationTime="1387520496993"><activatedTime>1387781726336</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that ESX disk I/O utilization has reached a critical level - average Disk IO Latency greater than 50ms based on 2 successive readings in a 10 minute interval</description><eventFilters entityVersion="0" xmlId="EventFilter@2112367" ownerId="500150" lastModified="1387781726336" id="2112367" custId="0" creationTime="1387781726336"><groupBy>hostName,hostIpAddr,diskName,datastore</groupBy><groupConstraint>(AVG(devDiskRdLatency) &gt;= 50 OR AVG(devDiskWrLatency) &gt;= 50) AND COUNT(*) &gt;= 2</groupConstraint><index>0</index><name>ESXDiskCrit</name><singleConstraint>eventType = "PH_DEV_MON_ESX_DISK_IO"</singleConstraint></eventFilters><name>ESX Disk I/O Critical</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112367</eventFilters><fireInternalIncident>true</fireInternalIncident><incidentAttrs>
        hostIpAddr = ESXDiskCrit.hostIpAddr, hostName = ESXDiskCrit.hostName, diskName = ESXDiskCrit.diskName,
        datastore = ESXDiskCrit.datastore,
        devDiskRdLatency = ESXDiskCrit.AVG(devDiskRdLatency), devDiskWrLatency = ESXDiskCrit.AVG(devDiskWrLatency)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>true</incidentFired><incidentType>EventType$PH_RULE_ESX_DISKIO_CRIT</incidentType><triggerEventAttrList>phRecvTime,eventType,hostName,hostIpAddr,diskName,datastore,devDiskRdLatency,devDiskWrLatency,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Virtualization" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_231" entityVersion="2" xmlId="Rule$PH_Rule_Perf_231" ownerId="500150" lastModified="1387781726459" id="1387394" custId="0" creationTime="1387520497096"><activatedTime>1387781726458</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that ESX network I/O utilization has reached a warning level - average network interface utilization between 35% and 50% based on 2 successive readings in a 10 minute interval</description><eventFilters entityVersion="0" xmlId="EventFilter@2112368" ownerId="500150" lastModified="1387781726458" id="2112368" custId="0" creationTime="1387781726458"><groupBy>hostName,hostIpAddr,vSwitch</groupBy><groupConstraint>((AVG(inIntfUtil) &gt;= 35 AND AVG(inIntfUtil) &lt;= 50) OR (AVG(outIntfUtil) &gt;= 35 AND AVG(outIntfUtil) &lt;= 50)) AND COUNT(*) &gt;= 2</groupConstraint><index>0</index><name>ESXIntfWarn</name><singleConstraint>eventType = "PH_DEV_MON_NET_INTF_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_VM_SERVER)</singleConstraint></eventFilters><name>ESX Network I/O Warning</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112368</eventFilters><fireInternalIncident>true</fireInternalIncident><incidentAttrs>
        hostIpAddr = ESXIntfWarn.hostIpAddr, hostName = ESXIntfWarn.hostName, vSwitch = ESXIntfWarn.vSwitch,
        inIntfUtil = ESXIntfWarn.AVG(inIntfUtil), outIntfUtil = ESXIntfWarn.AVG(outIntfUtil)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>true</incidentFired><incidentType>EventType$PH_RULE_ESX_INTF_WARN</incidentType><triggerEventAttrList>phRecvTime,eventType,hostName,hostIpAddr,vSwitch,inIntfUtil,outIntfUtil,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Virtualization" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_232" entityVersion="2" xmlId="Rule$PH_Rule_Perf_232" ownerId="500150" lastModified="1387781726581" id="1387395" custId="0" creationTime="1387520497198"><activatedTime>1387781726580</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that ESX network I/O utilization has reached a critical level - average network interface utilization greater than 50% based on 2 successive readings in a 10 minute interval</description><eventFilters entityVersion="0" xmlId="EventFilter@2112369" ownerId="500150" lastModified="1387781726580" id="2112369" custId="0" creationTime="1387781726580"><groupBy>hostName,hostIpAddr,vSwitch</groupBy><groupConstraint>(AVG(inIntfUtil) &gt; 50 OR AVG(outIntfUtil) &gt; 50) AND COUNT(*) &gt;= 2</groupConstraint><index>0</index><name>ESXIntfCrit</name><singleConstraint>eventType = "PH_DEV_MON_NET_INTF_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_VM_SERVER)</singleConstraint></eventFilters><name>ESX Network I/O Critical</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112369</eventFilters><fireInternalIncident>true</fireInternalIncident><incidentAttrs>
        hostIpAddr = ESXIntfCrit.hostIpAddr, hostName = ESXIntfCrit.hostName, vSwitch = ESXIntfCrit.vSwitch,
        inIntfUtil = ESXIntfCrit.AVG(inIntfUtil), outIntfUtil = ESXIntfCrit.AVG(outIntfUtil)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_ESX_INTF_CRIT</incidentType><triggerEventAttrList>phRecvTime,eventType,hostName,hostIpAddr,vSwitch,inIntfUtil,outIntfUtil,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Storage" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_233" entityVersion="2" xmlId="Rule$PH_Rule_Perf_233" ownerId="500150" lastModified="1387781726705" id="1387396" custId="0" creationTime="1387520497301"><activatedTime>1387781726703</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that storage CPU has reached a warning level (between 85% and 95% based on 2 successive readings in a 10 minute interval</description><eventFilters entityVersion="0" xmlId="EventFilter@2112370" ownerId="500150" lastModified="1387781726703" id="2112370" custId="0" creationTime="1387781726703"><groupBy>hostIpAddr,hostName</groupBy><groupConstraint>AVG(cpuUtil) &gt;= 85 AND AVG(cpuUtil) &lt;= 95 AND COUNT(*) &gt;= 2</groupConstraint><index>0</index><name>StorCPUWarn</name><singleConstraint>eventType IN ("PH_DEV_MON_SYS_CPU_UTIL","PH_DEV_MON_CLARION_SP_UTIL") AND hostIpAddr IN (Group@PH_SYS_DEVICE_Storage)</singleConstraint></eventFilters><name>Storage CPU Warning</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112370</eventFilters><fireInternalIncident>true</fireInternalIncident><incidentAttrs>
        hostIpAddr = StorCPUWarn.hostIpAddr, hostName = StorCPUWarn.hostName, cpuUtil = StorCPUWarn.AVG(cpuUtil)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_STORAGE_CPU_WARN</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,cpuUtil,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Storage" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_234" entityVersion="2" xmlId="Rule$PH_Rule_Perf_234" ownerId="500150" lastModified="1387781726852" id="1387397" custId="0" creationTime="1387520497405"><activatedTime>1387781726851</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that storage CPU has reached a critical level (greater than 95% based on 2 successive readings in a 10 minute interval</description><eventFilters entityVersion="0" xmlId="EventFilter@2112371" ownerId="500150" lastModified="1387781726851" id="2112371" custId="0" creationTime="1387781726851"><groupBy>hostIpAddr,hostName</groupBy><groupConstraint>AVG(cpuUtil) &gt; 95 AND COUNT(*) &gt;= 2</groupConstraint><index>0</index><name>StorCPUCrit</name><singleConstraint>eventType IN ("PH_DEV_MON_SYS_CPU_UTIL","PH_DEV_MON_CLARION_SP_UTIL") AND hostIpAddr IN (Group@PH_SYS_DEVICE_Storage)</singleConstraint></eventFilters><name>Storage CPU Critical</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112371</eventFilters><fireInternalIncident>true</fireInternalIncident><incidentAttrs>
        hostIpAddr = StorCPUCrit.hostIpAddr, hostName = StorCPUCrit.hostName, cpuUtil = StorCPUCrit.AVG(cpuUtil)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_STORAGE_CPU_CRIT</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,cpuUtil,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Storage" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_235" entityVersion="2" xmlId="Rule$PH_Rule_Perf_235" ownerId="500150" lastModified="1387781726979" id="1387398" custId="0" creationTime="1387520497509"><activatedTime>1387781726977</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that NFS disk space usage has reached a warning level (utilization between 80% and 95% and free disk still greater than 100 MB) based on 2 successive readings in a 10 minute interval</description><eventFilters entityVersion="0" xmlId="EventFilter@2112372" ownerId="500150" lastModified="1387781726977" id="2112372" custId="0" creationTime="1387781726977"><groupBy>hostIpAddr,hostName,diskName</groupBy><groupConstraint>((AVG(diskUtil) &gt;= 80 AND AVG(diskUtil) &lt;= 95) OR (AVG(diskUtil) &gt;= 95 AND AVG(freeDiskMB) &gt; 100)) AND COUNT(*) &gt;= 2</groupConstraint><index>0</index><name>NFSDiskWarn</name><singleConstraint>eventType = "PH_DEV_MON_SYS_DISK_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Storage)</singleConstraint></eventFilters><name>NFS Disk space Warning</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112372</eventFilters><fireInternalIncident>true</fireInternalIncident><incidentAttrs>
        hostIpAddr = NFSDiskWarn.hostIpAddr, hostName = NFSDiskWarn.hostName, diskName = NFSDiskWarn.diskName, diskUtil = NFSDiskWarn.AVG(diskUtil)
      </incidentAttrs><incidentFireFreq>21600</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_NFS_DISK_SPACE_WARN</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,diskName,diskUtil,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Storage" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_236" entityVersion="2" xmlId="Rule$PH_Rule_Perf_236" ownerId="500150" lastModified="1387781727104" id="1387399" custId="0" creationTime="1387520497614"><activatedTime>1387781727102</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that NFS disk space usage has reached a critical level (greater than 95% and free disk less than 100 MB) based on 2 successive readings in a 10 minute interval</description><eventFilters entityVersion="0" xmlId="EventFilter@2112373" ownerId="500150" lastModified="1387781727102" id="2112373" custId="0" creationTime="1387781727102"><groupBy>hostIpAddr,hostName,diskName</groupBy><groupConstraint>AVG(diskUtil) &gt; 95 AND AVG(freeDiskMB) &lt; 100 AND COUNT(*) &gt;= 2</groupConstraint><index>0</index><name>NFSDiskCrit</name><singleConstraint>eventType = "PH_DEV_MON_SYS_DISK_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Storage)</singleConstraint></eventFilters><name>NFS Disk Space Critical</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112373</eventFilters><fireInternalIncident>true</fireInternalIncident><incidentAttrs>
        hostIpAddr = NFSDiskCrit.hostIpAddr, hostName = NFSDiskCrit.hostName, diskName = NFSDiskCrit.diskName, diskUtil = NFSDiskCrit.AVG(diskUtil)
      </incidentAttrs><incidentFireFreq>21600</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_NFS_DISK_SPACE_CRIT</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,diskName,diskUtil,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Storage" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_237" entityVersion="2" xmlId="Rule$PH_Rule_Perf_237" ownerId="500150" lastModified="1387781727227" id="1387550" custId="0" creationTime="1387520497720"><activatedTime>1387781727226</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that the NFS Read or Write latency has reached a warning level (between 20 and 50 msec) based on 2 successive readings in a 10 minute interval</description><eventFilters entityVersion="0" xmlId="EventFilter@2112374" ownerId="500150" lastModified="1387781727226" id="2112374" custId="0" creationTime="1387781727226"><groupBy>hostIpAddr,hostName</groupBy><groupConstraint>((AVG(nfsReadLatency) &gt;= 20 AND AVG(nfsReadLatency) &lt; 50) OR (AVG(nfsWriteLatency) &gt;= 20 AND AVG(nfsWriteLatency) &lt; 50)) AND COUNT(*) &gt;= 2</groupConstraint><index>0</index><name>StorageDiskLatencyWarn</name><singleConstraint>eventType IN ("PH_DEV_MON_NETAPP_NFS3_MET", "PH_DEV_MON_NETAPP_NFS4_MET")</singleConstraint></eventFilters><name>NetApp NFS Read/Write Latency Warning</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112374</eventFilters><fireInternalIncident>true</fireInternalIncident><incidentAttrs>
        hostIpAddr = StorageDiskLatencyWarn.hostIpAddr, hostName = StorageDiskLatencyWarn.hostName, nfsReadLatency = StorageDiskLatencyWarn.AVG(nfsReadLatency), nfsWriteLatency = StorageDiskLatencyWarn.AVG(nfsWriteLatency)
      </incidentAttrs><incidentFireFreq>21600</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_NETAPP_NFS_LATENCY_WARN</incidentType><triggerEventAttrList>phRecvTime,eventType,hostIpAddr,hostName,nfsReadOpsPerSec,nfsWriteOpsPerSec,nfsOpsPerSec,nfsReadLatency,nfsWriteLatency,nfsReadKBytesPerSec,nfsWriteKBytesPerSec</triggerEventAttrList></rule><rule phIncidentCategory="Storage" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_238" entityVersion="2" xmlId="Rule$PH_Rule_Perf_238" ownerId="500150" lastModified="1387781727352" id="1387551" custId="0" creationTime="1387520497825"><activatedTime>1387781727350</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that NetApp NFS Read/Write latency has reached a critical level (greater  than 50 msec) based on 2 successive readings in a 10 minute interval</description><eventFilters entityVersion="0" xmlId="EventFilter@2112375" ownerId="500150" lastModified="1387781727350" id="2112375" custId="0" creationTime="1387781727350"><groupBy>hostIpAddr,hostName</groupBy><groupConstraint>(AVG(nfsReadLatency) &gt;= 50 OR AVG(nfsWriteLatency) &gt;= 50) AND COUNT(*) &gt;= 2</groupConstraint><index>0</index><name>StorageDiskLatencyCrit</name><singleConstraint>eventType IN ("PH_DEV_MON_NETAPP_NFS3_MET", "PH_DEV_MON_NETAPP_NFS4_MET")</singleConstraint></eventFilters><name>NetApp NFS Read/Write Latency Critical</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112375</eventFilters><fireInternalIncident>true</fireInternalIncident><incidentAttrs>
        hostIpAddr = StorageDiskLatencyCrit.hostIpAddr, hostName = StorageDiskLatencyCrit.hostName, nfsReadLatency = StorageDiskLatencyCrit.AVG(nfsReadLatency), nfsWriteLatency = StorageDiskLatencyCrit.AVG(nfsWriteLatency)
      </incidentAttrs><incidentFireFreq>21600</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_NETAPP_NFS_LATENCY_CRIT</incidentType><triggerEventAttrList>phRecvTime,eventType,hostIpAddr,hostName,nfsReadOpsPerSec,nfsWriteOpsPerSec,nfsOpsPerSec,nfsReadLatency,nfsWriteLatency,nfsReadKBytesPerSec,nfsWriteKBytesPerSec</triggerEventAttrList></rule><rule phIncidentCategory="Storage" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_239" entityVersion="2" xmlId="Rule$PH_Rule_Perf_239" ownerId="500150" lastModified="1387781727533" id="1387552" custId="0" creationTime="1387520497930"><activatedTime>1387781727531</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that the CIFS Read or Write latency has reached a warning level (between 20 and 50 msec) based on 2 successive readings in a 10 minute interval</description><eventFilters entityVersion="0" xmlId="EventFilter@2112376" ownerId="500150" lastModified="1387781727531" id="2112376" custId="0" creationTime="1387781727531"><groupBy>hostIpAddr,hostName</groupBy><groupConstraint>(AVG(cifsLatency) &gt;= 20 AND AVG(cifsLatency) &lt; 50) AND COUNT(*) &gt;= 2</groupConstraint><index>0</index><name>StorageDiskLatencyWarn</name><singleConstraint>eventType IN ("PH_DEV_MON_NETAPP_CIFS_MET")</singleConstraint></eventFilters><name>NetApp CIFS Read/Write Latency Warning</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112376</eventFilters><fireInternalIncident>true</fireInternalIncident><incidentAttrs>
        hostIpAddr = StorageDiskLatencyWarn.hostIpAddr, hostName = StorageDiskLatencyWarn.hostName, cifsLatency = StorageDiskLatencyWarn.AVG(cifsLatency)
      </incidentAttrs><incidentFireFreq>21600</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_NETAPP_CIFS_LATENCY_WARN</incidentType><triggerEventAttrList>phRecvTime,eventType,hostIpAddr,hostName,cifsOpsPerSec,cifsLatency</triggerEventAttrList></rule><rule phIncidentCategory="Storage" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_240" entityVersion="2" xmlId="Rule$PH_Rule_Perf_240" ownerId="500150" lastModified="1387781727660" id="1387553" custId="0" creationTime="1387520498036"><activatedTime>1387781727658</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that NetApp CIFS latency has reached a critical level (greater  than 50 msec) based on 2 successive readings in a 10 minute interval</description><eventFilters entityVersion="0" xmlId="EventFilter@2112377" ownerId="500150" lastModified="1387781727658" id="2112377" custId="0" creationTime="1387781727658"><groupBy>hostIpAddr,hostName</groupBy><groupConstraint>AVG(cifsLatency) &gt;= 50  AND COUNT(*) &gt;= 2</groupConstraint><index>0</index><name>StorageDiskLatencyCrit</name><singleConstraint>eventType IN ("PH_DEV_MON_NETAPP_CIFS_MET")</singleConstraint></eventFilters><name>NetApp CIFS Latency Critical</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112377</eventFilters><fireInternalIncident>true</fireInternalIncident><incidentAttrs>
        hostIpAddr = StorageDiskLatencyCrit.hostIpAddr, hostName = StorageDiskLatencyCrit.hostName, cifsLatency = StorageDiskLatencyCrit.AVG(cifsLatency)
      </incidentAttrs><incidentFireFreq>21600</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_NETAPP_CIFS_LATENCY_CRIT</incidentType><triggerEventAttrList>phRecvTime,eventType,hostIpAddr,hostName,cifsOpsPerSec,cifsLatency</triggerEventAttrList></rule><rule phIncidentCategory="Storage" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_241" entityVersion="2" xmlId="Rule$PH_Rule_Perf_241" ownerId="500150" lastModified="1387781727785" id="1387554" custId="0" creationTime="1387520498143"><activatedTime>1387781727784</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that the ISCSI Read or Write latency has reached a warning level (between 20 and 50 msec) based on 2 successive readings in a 10 minute interval</description><eventFilters entityVersion="0" xmlId="EventFilter@2112378" ownerId="500150" lastModified="1387781727783" id="2112378" custId="0" creationTime="1387781727783"><groupBy>hostIpAddr,hostName</groupBy><groupConstraint>((AVG(iscsiReadLatency) &gt;= 20 AND AVG(iscsiReadLatency) &lt; 50) OR (AVG(iscsiWriteLatency) &gt;= 20 AND AVG(iscsiWriteLatency) &lt; 50)) AND COUNT(*) &gt;= 2</groupConstraint><index>0</index><name>StorageDiskLatencyWarn</name><singleConstraint>eventType IN ("PH_DEV_MON_NETAPP_ISCSI_MET")</singleConstraint></eventFilters><name>NetApp ISCSI Read/Write Latency Warning</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112378</eventFilters><fireInternalIncident>true</fireInternalIncident><incidentAttrs>
        hostIpAddr = StorageDiskLatencyWarn.hostIpAddr, hostName = StorageDiskLatencyWarn.hostName, iscsiReadLatency = StorageDiskLatencyWarn.AVG(iscsiReadLatency), iscsiWriteLatency = StorageDiskLatencyWarn.AVG(iscsiWriteLatency)
      </incidentAttrs><incidentFireFreq>21600</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_NETAPP_ISCSI_LATENCY_WARN</incidentType><triggerEventAttrList>phRecvTime,eventType,hostIpAddr,hostName,iscsiReadOpsPerSec,iscsiWriteOpsPerSec,iscsiOpsPerSec,iscsiReadLatency,iscsiWriteLatency,iscsiReadKBytesPerSec,iscsiWriteKBytesPerSec</triggerEventAttrList></rule><rule phIncidentCategory="Storage" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_242" entityVersion="2" xmlId="Rule$PH_Rule_Perf_242" ownerId="500150" lastModified="1387781727913" id="1387555" custId="0" creationTime="1387520498251"><activatedTime>1387781727910</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that NetApp ISCSI Read/Write latency has reached a critical level (greater  than 50 msec) based on 2 successive readings in a 10 minute interval</description><eventFilters entityVersion="0" xmlId="EventFilter@2112379" ownerId="500150" lastModified="1387781727910" id="2112379" custId="0" creationTime="1387781727910"><groupBy>hostIpAddr,hostName</groupBy><groupConstraint>(AVG(iscsiReadLatency) &gt;= 50 OR AVG(iscsiWriteLatency) &gt;= 50) AND COUNT(*) &gt;= 2</groupConstraint><index>0</index><name>StorageDiskLatencyCrit</name><singleConstraint>eventType IN ("PH_DEV_MON_NETAPP_ISCSI_MET")</singleConstraint></eventFilters><name>NetApp ISCSI Read/Write Latency Critical</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112379</eventFilters><fireInternalIncident>true</fireInternalIncident><incidentAttrs>
        hostIpAddr = StorageDiskLatencyCrit.hostIpAddr, hostName = StorageDiskLatencyCrit.hostName, iscsiReadLatency = StorageDiskLatencyCrit.AVG(iscsiReadLatency), iscsiWriteLatency = StorageDiskLatencyCrit.AVG(iscsiWriteLatency)
      </incidentAttrs><incidentFireFreq>21600</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_NETAPP_ISCSI_LATENCY_CRIT</incidentType><triggerEventAttrList>phRecvTime,eventType,hostIpAddr,hostName,iscsiReadOpsPerSec,iscsiWriteOpsPerSec,iscsiOpsPerSec,iscsiReadLatency,iscsiWriteLatency,iscsiReadKBytesPerSec,iscsiWriteKBytesPerSec</triggerEventAttrList></rule><rule phIncidentCategory="Storage" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_243" entityVersion="2" xmlId="Rule$PH_Rule_Perf_243" ownerId="500150" lastModified="1387781728041" id="1387556" custId="0" creationTime="1387520498358"><activatedTime>1387781728039</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that the FCP Read or Write latency has reached a warning level (between 20 and 50 msec) based on 2 successive readings in a 10 minute interval</description><eventFilters entityVersion="0" xmlId="EventFilter@2112380" ownerId="500150" lastModified="1387781728039" id="2112380" custId="0" creationTime="1387781728039"><groupBy>hostIpAddr,hostName</groupBy><groupConstraint>((AVG(fcpReadLatency) &gt;= 20 AND AVG(fcpReadLatency) &lt; 50) OR (AVG(fcpWriteLatency) &gt;= 20 AND AVG(fcpWriteLatency) &lt; 50)) AND COUNT(*) &gt;= 2</groupConstraint><index>0</index><name>StorageDiskLatencyWarn</name><singleConstraint>eventType IN ("PH_DEV_MON_NETAPP_FCP_MET")</singleConstraint></eventFilters><name>NetApp FCP Read/Write Latency Warning</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112380</eventFilters><fireInternalIncident>true</fireInternalIncident><incidentAttrs>
        hostIpAddr = StorageDiskLatencyWarn.hostIpAddr, hostName = StorageDiskLatencyWarn.hostName, fcpReadLatency = StorageDiskLatencyWarn.AVG(fcpReadLatency), fcpWriteLatency = StorageDiskLatencyWarn.AVG(fcpWriteLatency)
      </incidentAttrs><incidentFireFreq>21600</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_NETAPP_FCP_LATENCY_WARN</incidentType><triggerEventAttrList>phRecvTime,eventType,hostIpAddr,hostName,fcpReadOpsPerSec,fcpWriteOpsPerSec,fcpOpsPerSec,fcpReadLatency,fcpWriteLatency,fcpReadKBytesPerSec,fcpWriteKBytesPerSec</triggerEventAttrList></rule><rule phIncidentCategory="Storage" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_244" entityVersion="2" xmlId="Rule$PH_Rule_Perf_244" ownerId="500150" lastModified="1387781728170" id="1387557" custId="0" creationTime="1387520498465"><activatedTime>1387781728168</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that NetApp FCP Read/Write latency has reached a critical level (greater  than 50 msec) based on 2 successive readings in a 10 minute interval</description><eventFilters entityVersion="0" xmlId="EventFilter@2112381" ownerId="500150" lastModified="1387781728168" id="2112381" custId="0" creationTime="1387781728168"><groupBy>hostIpAddr,hostName</groupBy><groupConstraint>(AVG(fcpReadLatency) &gt;= 50 OR AVG(fcpWriteLatency) &gt;= 50) AND COUNT(*) &gt;= 2</groupConstraint><index>0</index><name>StorageDiskLatencyCrit</name><singleConstraint>eventType IN ("PH_DEV_MON_NETAPP_FCP_MET")</singleConstraint></eventFilters><name>NetApp FCP Read/Write Latency Critical</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112381</eventFilters><fireInternalIncident>true</fireInternalIncident><incidentAttrs>
        hostIpAddr = StorageDiskLatencyCrit.hostIpAddr, hostName = StorageDiskLatencyCrit.hostName, fcpReadLatency = StorageDiskLatencyCrit.AVG(fcpReadLatency), fcpWriteLatency = StorageDiskLatencyCrit.AVG(fcpWriteLatency)
      </incidentAttrs><incidentFireFreq>21600</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_NETAPP_FCP_LATENCY_CRIT</incidentType><triggerEventAttrList>phRecvTime,eventType,hostIpAddr,hostName,fcpReadOpsPerSec,fcpWriteOpsPerSec,fcpOpsPerSec,fcpReadLatency,fcpWriteLatency,fcpReadKBytesPerSec,fcpWriteKBytesPerSec</triggerEventAttrList></rule><rule phIncidentCategory="Storage" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_245" entityVersion="2" xmlId="Rule$PH_Rule_Perf_245" ownerId="500150" lastModified="1387781728297" id="1387558" custId="0" creationTime="1387520498573"><activatedTime>1387781728295</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that the FCP Read or Write latency has reached a warning level (between 20 and 50 msec) based on 2 successive readings in a 10 minute interval</description><eventFilters entityVersion="0" xmlId="EventFilter@2112382" ownerId="500150" lastModified="1387781728295" id="2112382" custId="0" creationTime="1387781728295"><groupBy>hostIpAddr,hostName</groupBy><groupConstraint>((AVG(devDiskRdLatency) &gt;= 20 AND AVG(devDiskRdLatency) &lt; 50) OR (AVG(devDiskWrLatency) &gt;= 20 AND AVG(devDiskWrLatency) &lt; 50)) AND COUNT(*) &gt;= 2</groupConstraint><index>0</index><name>StorageDiskLatencyWarn</name><singleConstraint>eventType IN ("PH_DEV_MON_NETAPP_VOL_MET")</singleConstraint></eventFilters><name>NetApp Volume Read/Write Latency Warning</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112382</eventFilters><fireInternalIncident>true</fireInternalIncident><incidentAttrs>
        hostIpAddr = StorageDiskLatencyWarn.hostIpAddr, hostName = StorageDiskLatencyWarn.hostName, devDiskRdLatency = StorageDiskLatencyWarn.AVG(devDiskRdLatency), devDiskWrLatency = StorageDiskLatencyWarn.AVG(devDiskWrLatency)
      </incidentAttrs><incidentFireFreq>21600</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_NETAPP_VOLUME_LATENCY_WARN</incidentType><triggerEventAttrList>phRecvTime,eventType,hostIpAddr,hostName,devDiskRdLatency,devDiskWrLatency,diskReadReqPerSec,diskWriteReqPerSec</triggerEventAttrList></rule><rule phIncidentCategory="Storage" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_246" entityVersion="2" xmlId="Rule$PH_Rule_Perf_246" ownerId="500150" lastModified="1387781728452" id="1387559" custId="0" creationTime="1387520498681"><activatedTime>1387781728450</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that NetApp Volume Read/Write latency has reached a critical level (greater  than 50 msec) based on 2 successive readings in a 10 minute interval</description><eventFilters entityVersion="0" xmlId="EventFilter@2112383" ownerId="500150" lastModified="1387781728450" id="2112383" custId="0" creationTime="1387781728450"><groupBy>hostIpAddr,hostName</groupBy><groupConstraint>(AVG(devDiskRdLatency) &gt;= 50 OR AVG(devDiskWrLatency) &gt;= 50) AND COUNT(*) &gt;= 2</groupConstraint><index>0</index><name>StorageDiskLatencyCrit</name><singleConstraint>eventType IN ("PH_DEV_MON_NETAPP_VOL_MET")</singleConstraint></eventFilters><name>NetApp Volume Read/Write Latency Critical</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112383</eventFilters><fireInternalIncident>true</fireInternalIncident><incidentAttrs>
        hostIpAddr = StorageDiskLatencyCrit.hostIpAddr, hostName = StorageDiskLatencyCrit.hostName, devDiskRdLatency = StorageDiskLatencyCrit.AVG(devDiskRdLatency), devDiskWrLatency = StorageDiskLatencyCrit.AVG(devDiskWrLatency)
      </incidentAttrs><incidentFireFreq>21600</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_NETAPP_VOLUME_LATENCY_CRIT</incidentType><triggerEventAttrList>phRecvTime,eventType,hostIpAddr,hostName,devDiskRdLatency,devDiskWrLatency,diskReadReqPerSec,diskWriteReqPerSec</triggerEventAttrList></rule><rule phIncidentCategory="Storage" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_247" entityVersion="2" xmlId="Rule$PH_Rule_Perf_247" ownerId="500150" lastModified="1387781728578" id="1387560" custId="0" creationTime="1387520498790"><activatedTime>1387781728576</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that the EqualLogic connection Read or Write latency has reached a warning level (between 20 and 50 msec) based on 2 successive readings in a 10 minute interval</description><eventFilters entityVersion="0" xmlId="EventFilter@2112384" ownerId="500150" lastModified="1387781728576" id="2112384" custId="0" creationTime="1387781728576"><groupBy>hostIpAddr,hostName</groupBy><groupConstraint>((AVG(devDiskRdLatency) &gt;= 20 AND AVG(devDiskRdLatency) &lt; 50) OR (AVG(devDiskWrLatency) &gt;= 20 AND AVG(devDiskWrLatency) &lt; 50)) AND COUNT(*) &gt;= 2</groupConstraint><index>0</index><name>StorageDiskLatencyWarn</name><singleConstraint>eventType IN ("PH_DEV_MON_EQL_CONN_MET")</singleConstraint></eventFilters><name>EqualLogic Connection Read/Write Latency Warning</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112384</eventFilters><fireInternalIncident>true</fireInternalIncident><incidentAttrs>
        hostIpAddr = StorageDiskLatencyWarn.hostIpAddr, hostName = StorageDiskLatencyWarn.hostName, devDiskRdLatency = StorageDiskLatencyWarn.AVG(devDiskRdLatency), devDiskWrLatency = StorageDiskLatencyWarn.AVG(devDiskWrLatency)
      </incidentAttrs><incidentFireFreq>21600</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_EQLOGIC_CONN_LATENCY_WARN</incidentType><triggerEventAttrList>phRecvTime,eventType,hostIpAddr,hostName,devDiskRdLatency,devDiskWrLatency,diskReadReqPerSec,diskWriteReqPerSec</triggerEventAttrList></rule><rule phIncidentCategory="Storage" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_248" entityVersion="2" xmlId="Rule$PH_Rule_Perf_248" ownerId="500150" lastModified="1387781728706" id="1387561" custId="0" creationTime="1387520498900"><activatedTime>1387781728704</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that EqualLogic Connection Read/Write latency has reached a critical level (greater  than 50 msec) based on 2 successive readings in a 10 minute interval</description><eventFilters entityVersion="0" xmlId="EventFilter@2112385" ownerId="500150" lastModified="1387781728704" id="2112385" custId="0" creationTime="1387781728704"><groupBy>hostIpAddr,hostName</groupBy><groupConstraint>(AVG(devDiskRdLatency) &gt;= 50 OR AVG(devDiskWrLatency) &gt;= 50) AND COUNT(*) &gt;= 2</groupConstraint><index>0</index><name>StorageDiskLatencyCrit</name><singleConstraint>eventType IN ("PH_DEV_MON_EQL_CONN_MET")</singleConstraint></eventFilters><name>EqualLogic Connection Read/Write Latency Critical</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112385</eventFilters><fireInternalIncident>true</fireInternalIncident><incidentAttrs>
        hostIpAddr = StorageDiskLatencyCrit.hostIpAddr, hostName = StorageDiskLatencyCrit.hostName, devDiskRdLatency = StorageDiskLatencyCrit.AVG(devDiskRdLatency), devDiskWrLatency = StorageDiskLatencyCrit.AVG(devDiskWrLatency)
      </incidentAttrs><incidentFireFreq>21600</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_EQLOGIC_CONN_LATENCY_CRIT</incidentType><triggerEventAttrList>phRecvTime,eventType,hostIpAddr,hostName,devDiskRdLatency,devDiskWrLatency,diskReadReqPerSec,diskWriteReqPerSec</triggerEventAttrList></rule><rule phIncidentCategory="Server" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_249" entityVersion="2" xmlId="Rule$PH_Rule_Perf_249" ownerId="500150" lastModified="1387781728834" id="1387562" custId="0" creationTime="1387520499009"><activatedTime>1387781728832</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that server paging file usage has reached a critical level (greater than 98% based on 5 successive readings in a 1 hour interval. The paging file is a reserved space on disk that backes up committed physical memory on a computer</description><eventFilters entityVersion="0" xmlId="EventFilter@2112386" ownerId="500150" lastModified="1387781728832" id="2112386" custId="0" creationTime="1387781728832"><groupBy>hostIpAddr,hostName</groupBy><groupConstraint>AVG(pageFileUsage) &gt;= 98 AND COUNT(*) &gt;= 5</groupConstraint><index>0</index><name>ServPagingCrit</name><singleConstraint>eventType = "PH_DEV_MON_SYS_PAGEFILE_USAGE" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server)</singleConstraint></eventFilters><name>Windows Server Paging File Usage Critical</name><triggerWindow>3600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112386</eventFilters><fireInternalIncident>true</fireInternalIncident><incidentAttrs>
        hostIpAddr = ServPagingCrit.hostIpAddr, hostName = ServPagingCrit.hostName, pageFileUsage = ServPagingCrit.AVG(pageFileUsage)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_SERVER_PAGING_FILE_CRIT</incidentType><triggerEventAttrList>phRecvTime,eventType,hostIpAddr,hostName,pageFileUsage,pageFilePeakUsage</triggerEventAttrList></rule><rule phIncidentCategory="Environmental" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Environ_1" entityVersion="2" xmlId="Rule$PH_Rule_Environ_1" ownerId="500150" lastModified="1387781729887" id="1387563" custId="0" creationTime="1387520499281"><activatedTime>1387781729887</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that key UPS operational etrics are outside of normal operational range</description><eventFilters entityVersion="0" xmlId="EventFilter@2112387" ownerId="500150" lastModified="1387781729887" id="2112387" custId="0" creationTime="1387781729887"><groupBy>hostIpAddr, hostName</groupBy><groupConstraint>COUNT (*) &gt;= 2 AND ( AVG(upsAdvOutputFreq) &lt;= 55 OR AVG(upsAdvOutputFreq) &gt;= 65 OR AVG(upsAdvOutputVoltage) &lt; 110 OR AVG(upsAdvOutputVoltage) &gt; 125 OR AVG(upsAdvOutputLoad) &gt;= 50)</groupConstraint><index>0</index><name>LowBattery1</name><singleConstraint>eventType = "PH_DEV_MON_UPS_METRIC" AND upsAdvOutputFreq IS NOT NULL AND upsAdvOutputVoltage IS NOT NULL</singleConstraint></eventFilters><name>UPS Battery Metrics Critical</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112387</eventFilters><incidentAttrs>
	hostIpAddr = LowBattery1.hostIpAddr,
        hostName = LowBattery1.hostName, 
	upsAdvOutputFreq = LowBattery1.AVG(upsAdvOutputFreq),
	upsAdvOutputVoltage = LowBattery1.AVG(upsAdvOutputVoltage),
	upsAdvOutputLoad = LowBattery1.AVG(upsAdvOutputLoad)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_UPS_BATTERY_METRIC_CRIT</incidentType><triggerEventAttrList>phRecvTime,eventType,hostName,upsRemainBatteryChargePct,upsBatteryStatus,upsReplaceBatteryIndicator,upsTimeOnBattery,upsBasicOutputStatus,upsAdvOutputLoad,upsAdvOutputVoltage,upsAdvOutputFreq</triggerEventAttrList></rule><rule phIncidentCategory="Environmental" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Environ_2" entityVersion="2" xmlId="Rule$PH_Rule_Environ_2" ownerId="500150" lastModified="1387781730043" id="1387564" custId="0" creationTime="1387520499378"><activatedTime>1387781730043</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that key UPS battery status are reflecting critical state</description><eventFilters entityVersion="0" xmlId="EventFilter@2112388" ownerId="500150" lastModified="1387781730043" id="2112388" custId="0" creationTime="1387781730043"><groupBy>hostIpAddr, hostName</groupBy><groupConstraint>COUNT (*) &gt;= 1 AND ( AVG(upsBatteryStatus) &gt; 2 OR AVG(upsRemainBatteryChargePct) &lt; 50 OR  AVG(upsTimeOnBattery) &gt;= 120 OR AVG(upsBasicOutputStatus) &gt; 2 OR AVG(upsReplaceBatteryIndicator) &gt; 1)</groupConstraint><index>0</index><name>LowBattery2</name><singleConstraint>eventType = "PH_DEV_MON_UPS_METRIC" AND (upsBatteryStatus = 3 OR upsBatteryStatus = 4 OR upsRemainBatteryChargePct &lt; 50 OR upsTimeOnBattery &gt;= 120 OR upsBasicOutputStatus != 2 OR upsReplaceBatteryIndicator = 2)</singleConstraint></eventFilters><name>UPS Battery Status Critical</name><triggerWindow>120</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112388</eventFilters><incidentAttrs>
	hostIpAddr = LowBattery2.hostIpAddr,
        hostName = LowBattery2.hostName,
	upsTimeOnBattery = LowBattery2.AVG(upsTimeOnBattery),
	upsBatteryStatus =  LowBattery2.AVG(upsBatteryStatus), 
	upsRemainBatteryChargePct = LowBattery2.AVG(upsRemainBatteryChargePct), 
	upsReplaceBatteryIndicator = LowBattery2.AVG(upsReplaceBatteryIndicator),
	upsBasicOutputStatus = LowBattery2.AVG(upsBasicOutputStatus)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_UPS_BATTERY_STAT_CRIT</incidentType><triggerEventAttrList>phRecvTime,eventType,hostName,upsRemainBatteryChargePct,upsBatteryStatus,upsReplaceBatteryIndicator,upsTimeOnBattery,upsBasicOutputStatus,upsAdvOutputLoad,upsAdvOutputVoltage,upsAdvOutputFreq</triggerEventAttrList></rule><rule phIncidentCategory="Environmental" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Environ_3" entityVersion="2" xmlId="Rule$PH_Rule_Environ_3" ownerId="500150" lastModified="1387781730154" id="1387565" custId="0" creationTime="1387520499473"><activatedTime>1387781730153</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that HVAC temperature is less than 5 degree Fahrenheit from upper threshold</description><eventFilters entityVersion="0" xmlId="EventFilter@2112389" ownerId="500150" lastModified="1387781730153" id="2112389" custId="0" creationTime="1387781730153"><groupBy>hostName,hostIpAddr</groupBy><groupConstraint>COUNT (*) &gt;= 2 AND AVG(envTempOffHighDegF) &lt; 5</groupConstraint><index>0</index><name>HVAC_Hot</name><singleConstraint>eventType = "PH_DEV_MON_HVAC_LIEBERT_METRIC"</singleConstraint></eventFilters><name>HVAC temp high</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112389</eventFilters><incidentAttrs>
	hostIpAddr = HVAC_Hot.hostIpAddr,
        hostName = HVAC_Hot.hostName,
	envTempOffHighDegF = HVAC_Hot.AVG(envTempOffHighDegF)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_HVAC_TOO_HOT</incidentType><triggerEventAttrList>phRecvTime,eventType,hostName,envTempDegF,envTempHighThreshDegF,envTempLowThreshDegF,envTempOffHighDegF,envTempOffLowDegF</triggerEventAttrList></rule><rule phIncidentCategory="Environmental" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Environ_4" entityVersion="2" xmlId="Rule$PH_Rule_Environ_4" ownerId="500150" lastModified="1387781730302" id="1387566" custId="0" creationTime="1387520499568"><activatedTime>1387781730302</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that HVAC temperature is less than 5 degree Fahrenheit from the lower threshold</description><eventFilters entityVersion="0" xmlId="EventFilter@2112390" ownerId="500150" lastModified="1387781730302" id="2112390" custId="0" creationTime="1387781730302"><groupBy>hostName,hostIpAddr</groupBy><groupConstraint>COUNT (*) &gt;= 2 AND AVG(envTempOffLowDegF) &lt; 5</groupConstraint><index>0</index><name>HVAC_Cold</name><singleConstraint>eventType = "PH_DEV_MON_HVAC_LIEBERT_METRIC"</singleConstraint></eventFilters><name>HVAC temp low</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112390</eventFilters><incidentAttrs>
	hostIpAddr = HVAC_Cold.hostIpAddr,
        hostName = HVAC_Cold.hostName,
	envTempOffLowDegF = HVAC_Cold.AVG(envTempOffLowDegF)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_HVAC_TOO_COLD</incidentType><triggerEventAttrList>phRecvTime,eventType,hostName,envTempDegF,envTempHighThreshDegF,envTempLowThreshDegF,envHumidityRel,envHumidityRelHighThresh,envHumidityRelLowThresh</triggerEventAttrList></rule><rule phIncidentCategory="Environmental" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Environ_5" entityVersion="2" xmlId="Rule$PH_Rule_Environ_5" ownerId="500150" lastModified="1387781730413" id="1387567" custId="0" creationTime="1387520499664"><activatedTime>1387781730412</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that HVAC relative humidity is less than 5 units from upper threshold</description><eventFilters entityVersion="0" xmlId="EventFilter@2112391" ownerId="500150" lastModified="1387781730412" id="2112391" custId="0" creationTime="1387781730412"><groupBy>hostName,hostIpAddr</groupBy><groupConstraint>COUNT (*) &gt;= 2 AND AVG(envHumidityOffHigh) &lt; 5</groupConstraint><index>0</index><name>HVAC_Humid</name><singleConstraint>eventType = "PH_DEV_MON_HVAC_LIEBERT_METRIC"</singleConstraint></eventFilters><name>HVAC humidity high</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112391</eventFilters><incidentAttrs>
	hostIpAddr = HVAC_Humid.hostIpAddr,
        hostName = HVAC_Humid.hostName,
	envHumidityOffHigh = HVAC_Humid.AVG(envHumidityOffHigh)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_HVAC_TOO_HUMID</incidentType><triggerEventAttrList>phRecvTime,eventType,hostName,envTempDegF,envTempHighThreshDegF,envTempLowThreshDegF,envHumidityRel,envHumidityRelHighThresh,envHumidityRelLowThresh</triggerEventAttrList></rule><rule phIncidentCategory="Environmental" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Environ_6" entityVersion="2" xmlId="Rule$PH_Rule_Environ_6" ownerId="500150" lastModified="1387781730527" id="1387568" custId="0" creationTime="1387520499760"><activatedTime>1387781730526</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that HVAC relative humidity is less than 5 units from lower threshold</description><eventFilters entityVersion="0" xmlId="EventFilter@2112392" ownerId="500150" lastModified="1387781730526" id="2112392" custId="0" creationTime="1387781730526"><groupBy>hostName,hostIpAddr</groupBy><groupConstraint>COUNT (*) &gt;= 2 AND AVG(envHumidityOffLow) &lt; 5</groupConstraint><index>0</index><name>HVAC_Humid</name><singleConstraint>eventType = "PH_DEV_MON_HVAC_LIEBERT_METRIC"</singleConstraint></eventFilters><name>HVAC humidity low</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112392</eventFilters><incidentAttrs>
	hostIpAddr = HVAC_Humid.hostIpAddr,
        hostName = HVAC_Humid.hostName,
	envHumidityOffLow = HVAC_Humid.AVG(envHumidityOffLow)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_HVAC_TOO_DRY</incidentType><triggerEventAttrList>phRecvTime,eventType,hostName,envTempDegF,envTempHighThreshDegF,envTempLowThreshDegF,envHumidityRel,envHumidityRelHighThresh,envHumidityRelLowThresh</triggerEventAttrList></rule><rule phIncidentCategory="Environmental" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Environ_7" entityVersion="2" xmlId="Rule$PH_Rule_Environ_7" ownerId="500150" lastModified="1387781730638" id="1387569" custId="0" creationTime="1387520499856"><activatedTime>1387781730638</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that Voltage total harmonic distortion is more than 0.15 pct</description><eventFilters entityVersion="0" xmlId="EventFilter@2112393" ownerId="500150" lastModified="1387781730638" id="2112393" custId="0" creationTime="1387781730638"><groupBy>hostName,hostIpAddr</groupBy><groupConstraint>COUNT (*) &gt;= 2 AND (AVG(outputVxTHD) &gt;= 15 OR AVG(outputVyTHD) &gt; 15 OR AVG(outputVzTHD) &gt;= 15)</groupConstraint><index>0</index><name>FPC_VHD_high</name><singleConstraint>eventType = "PH_DEV_MON_FPC_LIEBERT_METRIC"</singleConstraint></eventFilters><name>FPC Voltage THD high</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112393</eventFilters><incidentAttrs>
	hostIpAddr = FPC_VHD_high.hostIpAddr,
        hostName = FPC_VHD_high.hostName,
	outputVxTHD = FPC_VHD_high.AVG(outputVxTHD),
	outputVyTHD = FPC_VHD_high.AVG(outputVyTHD),
	outputVzTHD = FPC_VHD_high.AVG(outputVzTHD)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_FPC_VHD_HIGH</incidentType><triggerEventAttrList>phRecvTime,eventType,hostName,outputVoltageXNVolts,outputVoltageYNVolts,outputVoltageZNVolts,outputVxTHD,outputVyTHD,outputVzTHD</triggerEventAttrList></rule><rule phIncidentCategory="Environmental" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Environ_8" entityVersion="2" xmlId="Rule$PH_Rule_Environ_8" ownerId="500150" lastModified="1387781730750" id="1387570" custId="0" creationTime="1387520499953"><activatedTime>1387781730750</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that current total harmonic distortion is more than 0.15 pct</description><eventFilters entityVersion="0" xmlId="EventFilter@2112394" ownerId="500150" lastModified="1387781730750" id="2112394" custId="0" creationTime="1387781730750"><groupBy>hostName,hostIpAddr</groupBy><groupConstraint>COUNT (*) &gt;= 2 AND (AVG(outputLxTHD) &gt;= 5 OR AVG(outputLyTHD) &gt; 5 OR AVG(outputLzTHD) &gt;= 5)</groupConstraint><index>0</index><name>FPC_CHD_high</name><singleConstraint>eventType = "PH_DEV_MON_FPC_LIEBERT_METRIC"</singleConstraint></eventFilters><name>FPC Current THD high</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112394</eventFilters><incidentAttrs>
	hostIpAddr = FPC_CHD_high.hostIpAddr,
        hostName = FPC_CHD_high.hostName,
	outputLxTHD = FPC_CHD_high.AVG(outputLxTHD),
	outputLyTHD = FPC_CHD_high.AVG(outputLyTHD),
	outputLzTHD = FPC_CHD_high.AVG(outputLzTHD)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_FPC_CHD_HIGH</incidentType><triggerEventAttrList>phRecvTime,eventType,hostName,outputCurrentXAmps,outputCurrentYAmps,outputCurrentZAmps,outputLxTHD,outputLyTHD,outputLzTHD</triggerEventAttrList></rule><rule phIncidentCategory="Environmental" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Environ_9" entityVersion="2" xmlId="Rule$PH_Rule_Environ_9" ownerId="500150" lastModified="1387781730863" id="1387571" custId="0" creationTime="1387520500051"><activatedTime>1387781730862</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that ground current is more than 0.12 amps</description><eventFilters entityVersion="0" xmlId="EventFilter@2112395" ownerId="500150" lastModified="1387781730862" id="2112395" custId="0" creationTime="1387781730862"><groupBy>hostName,hostIpAddr</groupBy><groupConstraint>COUNT (*) &gt;= 2 AND AVG(groundCurrentAmps) &gt;= .12</groupConstraint><index>0</index><name>FPC_GC_high</name><singleConstraint>eventType = "PH_DEV_MON_FPC_LIEBERT_METRIC"</singleConstraint></eventFilters><name>FPC ground current high</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112395</eventFilters><incidentAttrs>
	hostIpAddr = FPC_GC_high.hostIpAddr,
        hostName = FPC_GC_high.hostName,
	groundCurrentAmps = FPC_GC_high.AVG(groundCurrentAmps)
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_FPC_GROUND_CURR_HIGH</incidentType><triggerEventAttrList>phRecvTime,eventType,hostName,neutralCurrentAmps,groundCurrentAmps</triggerEventAttrList></rule><rule phIncidentCategory="Environmental" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Environ_10" entityVersion="2" xmlId="Rule$PH_Rule_Environ_10" ownerId="500150" lastModified="1387781730978" id="1387572" custId="0" creationTime="1387520500155"><activatedTime>1387781730978</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that netbotz door sensor values went from Close to Open</description><eventFilters entityVersion="0" xmlId="EventFilter@2112396" ownerId="500150" lastModified="1387781730978" id="2112396" custId="0" creationTime="1387781730978"><groupBy>hostIpAddr,hostName,envSensorId,envSensorLabel,envSensorEnclosureId</groupBy><groupConstraint>COUNT (*) &gt;= 1</groupConstraint><index>0</index><name>DoorClosed</name><singleConstraint>eventType = "PH_DEV_MON_HW_DOOR_SWITCH" AND hostIpAddr IN (Group@PH_SYS_DEVICE_ENV_GEN) AND doorSwitchSensorVal = "Closed"</singleConstraint></eventFilters><eventFilters entityVersion="0" xmlId="EventFilter@2112397" ownerId="500150" lastModified="1387781730978" id="2112397" custId="0" creationTime="1387781730978"><groupBy>hostIpAddr,hostName,envSensorId,envSensorLabel,envSensorEnclosureId</groupBy><groupConstraint>COUNT (*) &gt;= 1</groupConstraint><index>1</index><name>DoorOpen</name><singleConstraint>eventType = "PH_DEV_MON_HW_DOOR_SWITCH" AND hostIpAddr IN (Group@PH_SYS_DEVICE_ENV_GEN) AND doorSwitchSensorVal = "Open"</singleConstraint></eventFilters><filterOperators><rank>0</rank><type>FOLLOWED_BY</type></filterOperators><globalConstraint>DoorClosed.hostIpAddr = DoorOpen.hostIpAddr, 
                     DoorClosed.envSensorId = DoorOpen.envSensorId,
		     DoorClosed.envSensorLabel = DoorOpen.envSensorLabel,
		     DoorClosed.envSensorEnclosureId = DoorOpen.envSensorEnclosureId
       </globalConstraint><name>NetBotz module door open</name><rawFOString>FOLLOWED_BY:0</rawFOString><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112396</eventFilters><eventFilters>EventFilter@2112397</eventFilters><incidentAttrs>
        hostIpAddr = DoorClosed.hostIpAddr,
	hostName = DoorClosed.hostName,
	envSensorId = DoorClosed.envSensorId,
	envSensorLabel = DoorClosed.envSensorLabel,
	envSensorEnclosureId  = DoorClosed.envSensorEnclosureId 
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_NETB_DOOR_OPEN</incidentType><triggerEventAttrList>phRecvTime,hostName,hostIpAddr,envSensorId,envSensorLabel,envSensorEnclosureId,devPort,doorSwitchSensorVal</triggerEventAttrList></rule><rule phIncidentCategory="Environmental" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Environ_11" entityVersion="2" xmlId="Rule$PH_Rule_Environ_11" ownerId="500150" lastModified="1387781731105" id="1387573" custId="0" creationTime="1387520500261"><activatedTime>1387781731104</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects camera motion from NetBotz camera motion</description><eventFilters entityVersion="0" xmlId="EventFilter@2112399" ownerId="500150" lastModified="1387781731104" id="2112399" custId="0" creationTime="1387781731104"><groupBy>hostIpAddr,hostName,envSensorId,envSensorLabel,envSensorEnclosureId</groupBy><groupConstraint>COUNT (*) &gt;= 1</groupConstraint><index>0</index><name>CameraNoMotion</name><singleConstraint>eventType = "PH_DEV_MON_HW_CAMERA_MOTION" AND hostIpAddr IN (Group@PH_SYS_DEVICE_ENV_GEN) AND cameraMotionSensorVal = "No Motion"</singleConstraint></eventFilters><eventFilters entityVersion="0" xmlId="EventFilter@2112400" ownerId="500150" lastModified="1387781731104" id="2112400" custId="0" creationTime="1387781731104"><groupBy>hostIpAddr,hostName,envSensorId,envSensorLabel,envSensorEnclosureId</groupBy><groupConstraint>COUNT (*) &gt;= 1</groupConstraint><index>1</index><name>CameraMotion</name><singleConstraint>eventType = "PH_DEV_MON_HW_CAMERA_MOTION" AND hostIpAddr IN (Group@PH_SYS_DEVICE_ENV_GEN) AND cameraMotionSensorVal = "Motion Detected"</singleConstraint></eventFilters><filterOperators><rank>0</rank><type>FOLLOWED_BY</type></filterOperators><globalConstraint>CameraNoMotion.hostIpAddr = CameraMotion.hostIpAddr, 
                     CameraNoMotion.envSensorId = CameraMotion.envSensorId,
		     CameraNoMotion.envSensorLabel = CameraMotion.envSensorLabel,
		     CameraNoMotion.envSensorEnclosureId = CameraMotion.envSensorEnclosureId
       </globalConstraint><name>NetBotz camera motion detected</name><rawFOString>FOLLOWED_BY:0</rawFOString><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112399</eventFilters><eventFilters>EventFilter@2112400</eventFilters><incidentAttrs>
        hostIpAddr = CameraNoMotion.hostIpAddr,
	hostName = CameraNoMotion.hostName,
	envSensorId = CameraNoMotion.envSensorId,
	envSensorLabel = CameraNoMotion.envSensorLabel,
	envSensorEnclosureId  = CameraNoMotion.envSensorEnclosureId 
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_NETB_CAMERA_MOTION</incidentType><triggerEventAttrList>phRecvTime,hostName,hostIpAddr,envSensorId,envSensorLabel,envSensorEnclosureId,devPort,cameraMotionSensorVal</triggerEventAttrList></rule><rule phIncidentCategory="Storage" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Trap_1" entityVersion="1" xmlId="Rule$PH_Rule_Trap_1" ownerId="500150" lastModified="1387781694774" id="2112050" custId="0" creationTime="1387781694773"><activatedTime>1387781694774</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects a high severity trap from NetApp Filers</description><eventFilters entityVersion="0" xmlId="EventFilter@2112014" ownerId="500150" lastModified="1387781694774" id="2112014" custId="0" creationTime="1387781694774"><groupBy>reptDevIpAddr, eventType</groupBy><groupConstraint>COUNT (*) &gt;= 1</groupConstraint><index>0</index><name>HighSevTrap</name><singleConstraint>reptVendor = "NetApp" AND reptModel = "DataONTAP" AND eventSeverityCat = "High"</singleConstraint></eventFilters><name>Critical NetApp Trap</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112014</eventFilters><incidentAttrs>
        destIpAddr = HighSevTrap.reptDevIpAddr, compEventType = HighSevTrap.eventType
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_NETAPP_TRAP_CRIT</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Storage" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Trap_2" entityVersion="1" xmlId="Rule$PH_Rule_Trap_2" ownerId="500150" lastModified="1387781694991" id="2112051" custId="0" creationTime="1387781694991"><activatedTime>1387781694991</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects a medium severity trap from NetApp Filers</description><eventFilters entityVersion="0" xmlId="EventFilter@2112015" ownerId="500150" lastModified="1387781694991" id="2112015" custId="0" creationTime="1387781694991"><groupBy>reptDevIpAddr, eventType</groupBy><groupConstraint>COUNT (*) &gt;= 1</groupConstraint><index>0</index><name>HighSevTrap</name><singleConstraint>reptVendor = "NetApp" AND reptModel = "DataONTAP" AND eventSeverityCat = "Medium"</singleConstraint></eventFilters><name>Warning NetApp Trap</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112015</eventFilters><incidentAttrs>
        destIpAddr = HighSevTrap.reptDevIpAddr, compEventType = HighSevTrap.eventType
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_NETAPP_TRAP_WARN</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Environmental" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Trap_3" entityVersion="1" xmlId="Rule$PH_Rule_Trap_3" ownerId="500150" lastModified="1387781695098" id="2112052" custId="0" creationTime="1387781695098"><activatedTime>1387781695098</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects a high severity trap from APC devices (UPS, PDUs etc)</description><eventFilters entityVersion="0" xmlId="EventFilter@2112016" ownerId="500150" lastModified="1387781695098" id="2112016" custId="0" creationTime="1387781695098"><groupBy>reptDevIpAddr,eventType,errorNo</groupBy><groupConstraint>COUNT (*) &gt;= 1</groupConstraint><index>0</index><name>HighSevTrap</name><singleConstraint>reptVendor = "APC" AND eventSeverityCat = "HIGH"</singleConstraint></eventFilters><name>Critical APC Trap</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112016</eventFilters><incidentAttrs>
        destIpAddr = HighSevTrap.reptDevIpAddr, compEventType = HighSevTrap.eventType, errorNo=HighSevTrap.errorNo </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_APC_TRAP_CRIT</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Environmental" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Trap_4" entityVersion="1" xmlId="Rule$PH_Rule_Trap_4" ownerId="500150" lastModified="1387781695211" id="2112053" custId="0" creationTime="1387781695211"><activatedTime>1387781695211</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects a medium severity trap from APC devices (UPS, PDUs etc)</description><eventFilters entityVersion="0" xmlId="EventFilter@2112018" ownerId="500150" lastModified="1387781695211" id="2112018" custId="0" creationTime="1387781695211"><groupBy>reptDevIpAddr,eventType,errorNo</groupBy><groupConstraint>COUNT (*) &gt;= 1</groupConstraint><index>0</index><name>MedSevTrap</name><singleConstraint>reptVendor = "APC" AND eventSeverityCat = "MEDIUM"</singleConstraint></eventFilters><name>Warning APC Trap</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112018</eventFilters><incidentAttrs>
        destIpAddr = MedSevTrap.reptDevIpAddr, compEventType = MedSevTrap.eventType, errorNo=MedSevTrap.errorNo 
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_APC_TRAP_WARN</incidentType><triggerEventAttrList>phRecvTime,eventType,reptDevIpAddr,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Server" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_48" entityVersion="1" xmlId="Rule$PH_Rule_Avail_48" ownerId="500150" lastModified="1387781704520" id="2112054" custId="0" creationTime="1387781704518"><activatedTime>1387781704519</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects a EC2 instance is down</description><eventFilters entityVersion="0" xmlId="EventFilter@2112208" ownerId="500150" lastModified="1387781704519" id="2112208" custId="0" creationTime="1387781704519"><groupBy>hostName,hostIpAddr,ec2InstanceId</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>EC2Down</name><singleConstraint>eventType = "PH_DEV_MON_EC2_INSTANCE_DOWN"</singleConstraint></eventFilters><name>EC2 Instance Down</name><triggerWindow>120</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112208</eventFilters><incidentAttrs>
        hostIpAddr = EC2Down.hostIpAddr,hostName = EC2Down.hostName,ec2InstanceId = EC2Down.ec2InstanceId
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_EC2_INSTANCE_DOWN</incidentType><triggerEventAttrList>phRecvTime,eventType,hostName,hostIpAddr,ec2InstanceId,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Storage" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_49" entityVersion="1" xmlId="Rule$PH_Rule_Avail_49" ownerId="500150" lastModified="1387781704644" id="2112055" custId="0" creationTime="1387781704642"><activatedTime>1387781704642</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects a storage port went down</description><eventFilters entityVersion="0" xmlId="EventFilter@2112210" ownerId="500150" lastModified="1387781704642" id="2112210" custId="0" creationTime="1387781704642"><groupBy>hostName,hostIpAddr,spName,spPortName,srcName</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>PortDown</name><singleConstraint>eventType = "PH_DEV_MON_STORAGE_PORT_UP_TO_DOWN"</singleConstraint></eventFilters><name>Storage Port Down</name><triggerWindow>120</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112210</eventFilters><incidentAttrs>
        hostName = PortDown.hostName,hostIpAddr = PortDown.hostIpAddr,spName = PortDown.spName,spPortName=PortDown.spPortName,srcName=PortDown.srcName
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_STORAGE_PORT_DOWN</incidentType><triggerEventAttrList>phRecvTime,eventType,hostName,hostIpAddr,ec2InstanceId,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Application" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_51" entityVersion="1" xmlId="Rule$PH_Rule_Avail_51" ownerId="500150" lastModified="1387781704779" id="2112056" custId="0" creationTime="1387781704777"><activatedTime>1387781704778</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that an manual mode service is started. Currently this works for windows servers and is detected via WMI.</description><eventFilters entityVersion="0" xmlId="EventFilter@2112212" ownerId="500150" lastModified="1387781704777" id="2112212" custId="0" creationTime="1387781704777"><groupBy>hostIpAddr,hostName,serviceName,servicePath</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>SrvcUp</name><singleConstraint>eventType = "PH_DEV_MON_MANUAL_SVC_STOP_TO_START"</singleConstraint></eventFilters><name>Manual Service Started</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112212</eventFilters><incidentAttrs>
        hostIpAddr = SrvcUp.hostIpAddr, hostName = SrvcUp.hostName, serviceName = SrvcUp.serviceName, servicePath = SrvcUp.servicePath
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>true</incidentFired><incidentType>EventType$PH_RULE_MANUAL_SRVC_START</incidentType><triggerEventAttrList>phRecvTime,hostIpAddr,hostName,serviceName,servicePath,serviceDesc</triggerEventAttrList></rule><rule phIncidentCategory="Other" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Vuln_17" entityVersion="1" xmlId="Rule$PH_Rule_Vuln_17" ownerId="500150" lastModified="1387781707289" id="2112057" custId="0" creationTime="1387781707289"><activatedTime>1387781707289</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that host anti-virus or content inspection devices found malware that it failed to remediate</description><eventFilters entityVersion="0" xmlId="EventFilter@2112230" ownerId="500150" lastModified="1387781707289" id="2112230" custId="0" creationTime="1387781707289"><groupBy>computer</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>MalwareFound</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_GenMalware_Remedy_Failed)</singleConstraint></eventFilters><name>Malware found but not remediated</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112230</eventFilters><incidentAttrs>
        computer = MalwareFound.computer
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_MALWARE_NON_REMEDY</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,eventType,hostIpAddr,user,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Other" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Vuln_18" entityVersion="1" xmlId="Rule$PH_Rule_Vuln_18" ownerId="500150" lastModified="1387781707399" id="2112058" custId="0" creationTime="1387781707398"><activatedTime>1387781707398</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that host anti-virus or content inspection devices found phishing attacks that it failed to remediate</description><eventFilters entityVersion="0" xmlId="EventFilter@2112231" ownerId="500150" lastModified="1387781707398" id="2112231" custId="0" creationTime="1387781707398"><groupBy>computer</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>MalwareFound</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_Phish_Remedy_Failed)</singleConstraint></eventFilters><name>Phishing attack found but not remediated</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112231</eventFilters><incidentAttrs>
        computer = MalwareFound.computer
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_PHISH_NON_REMEDY</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,eventType,hostIpAddr,user,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Other" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Vuln_19" entityVersion="1" xmlId="Rule$PH_Rule_Vuln_19" ownerId="500150" lastModified="1387781707509" id="2112059" custId="0" creationTime="1387781707508"><activatedTime>1387781707508</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that host anti-virus or content inspection devices found a rootkit that it failed to remediate</description><eventFilters entityVersion="0" xmlId="EventFilter@2112232" ownerId="500150" lastModified="1387781707508" id="2112232" custId="0" creationTime="1387781707508"><groupBy>computer</groupBy><groupConstraint>COUNT(*) &gt;= 1</groupConstraint><index>0</index><name>RootkitFound</name><singleConstraint>eventType IN (Group@PH_SYS_EVENT_Rootkit_Found)</singleConstraint></eventFilters><name>Rootkit found</name><triggerWindow>300</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112232</eventFilters><incidentAttrs>
        computer = RootkitFound.computer
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>false</incidentFired><incidentType>EventType$PH_RULE_ROOTKIT</incidentType><triggerEventAttrList>phRecvTime,reptDevIpAddr,eventType,hostIpAddr,user,rawEventMsg</triggerEventAttrList></rule><rule phIncidentCategory="Internal" debug="TESTUNAVAILABLE" dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_PH_24" entityVersion="1" xmlId="Rule$PH_Rule_Avail_PH_24" ownerId="500150" lastModified="1387781719173" id="2112060" custId="0" creationTime="1387781719172"><activatedTime>1387781719172</activatedTime><active>true</active><custInclusive>true</custInclusive><description>Detects that collector has not sent an event to Accelops cloud for more than 10 minutes</description><eventFilters entityVersion="0" xmlId="EventFilter@2112315" ownerId="500150" lastModified="1387781719172" id="2112315" custId="0" creationTime="1387781719172"><groupBy>customer,phCollectorName</groupBy><groupConstraint>COUNT (*) &gt;= 1</groupConstraint><index>0</index><name>AOCollectorDelay</name><singleConstraint>eventType = "PH_COLLECTOR_EVENT_ARRIVAL_DELAYED"</singleConstraint></eventFilters><name>System Collector Event Delayed</name><triggerWindow>600</triggerWindow><advanced>true</advanced><eventFilters>EventFilter@2112315</eventFilters><incidentAttrs>
        customer = AOCollectorDelay.customer, phCollectorName = AOCollectorDelay.phCollectorName
      </incidentAttrs><incidentFireFreq>86400</incidentFireFreq><incidentFired>true</incidentFired><incidentType>EventType$PH_RULE_ACCELOPS_COLLECTOR_DELAY</incidentType><triggerEventAttrList>phRecvTime,eventType,customer,phCollectorName,rawEventMsg</triggerEventAttrList></rule></rules></result></response>