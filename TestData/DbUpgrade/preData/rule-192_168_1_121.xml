<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<response timestamp="1316829377100" requestId="0">
    <result>
        <rules>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Vuln_1" entityVersion="3" xmlId="Rule$PH_Rule_Vuln_1" lastModified="1300496031610" id="3136150" custId="0" creationTime="1288817650813">
                <activatedTime>1300496031609</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects a high severity vulnerability reported by a vulnerability scanner</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53331967" ownerId="500150" lastModified="1300496031609" id="53331967" custId="0" creationTime="1300496031609">
                    <groupBy>hostName,vulnName</groupBy>
                    <groupConstraint>COUNT(*) &gt;= 1</groupConstraint>
                    <index>0</index>
                    <name>ScannerHighSev</name>
                    <singleConstraint>eventType IN (Group@PH_SYS_EVENT_Vulnerability) AND reptVendor IN ("Qualys", "Nessus", "nCircle") AND eventSeverity &gt;= 8</singleConstraint>
                </eventFilters>
                <name>Scanner found severe vulnerability</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53331967</eventFilters>
                <incidentAttrs>
        hostName = ScannerHighSev.hostName, vulnName = ScannerHighSev.vulnName
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_HIGH_SEV_SCANNER</incidentType>
                <triggerEventAttrList> scanEnd,reptVendor,hostName,osType,vulnName,eventSeverity,vulnType,vulnCVEId,vulnBugTraqID,vulnScore,vulnConseq,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Vuln_2" entityVersion="3" xmlId="Rule$PH_Rule_Vuln_2" lastModified="1300496031862" id="3136151" custId="0" creationTime="1288817650897">
                <activatedTime>1300496031862</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects that host anti-virus or content inspection devices found a virus but could not rremediate it</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53331968" ownerId="500150" lastModified="1300496031861" id="53331968" custId="0" creationTime="1300496031861">
                    <groupBy>hostIpAddr</groupBy>
                    <groupConstraint>COUNT(*) &gt;= 1</groupConstraint>
                    <index>0</index>
                    <name>VirusFound</name>
                    <singleConstraint>eventType IN (Group@PH_SYS_EVENT_Worm_Remedy_Failed) AND reptDevIpAddr IN (Group@PH_SYS_APP_SEC_MGMT,Group@PH_SYS_DEVICE_SEC_GW)</singleConstraint>
                </eventFilters>
                <name>Virus found but not remediated</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53331968</eventFilters>
                <incidentAttrs>
        hostIpAddr = VirusFound.hostIpAddr
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_VIRUS_NON_REMEDY</incidentType>
                <triggerEventAttrList> phRecvTime,reptDevIpAddr,eventType,hostIpAddr,computer,user,virusName,virusType,fileName,virusAction,virusQuarantStatus,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Vuln_3" entityVersion="3" xmlId="Rule$PH_Rule_Vuln_3" lastModified="1300496031974" id="3136152" custId="0" creationTime="1288817650978">
                <activatedTime>1300496031973</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects that host anti-virus or content inspection devices found a Spam/Malicious Mail Attachment but could not rremediate it. The sender is sending to 5 or more distinct receiver mail addresses</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53331969" ownerId="500150" lastModified="1300496031973" id="53331969" custId="0" creationTime="1300496031973">
                    <groupBy>hostIpAddr,senderMailAddr</groupBy>
                    <groupConstraint>COUNT(DISTINCT (receiverMailAddr)) &gt;= 5</groupConstraint>
                    <index>0</index>
                    <name>AttachFound</name>
                    <singleConstraint>eventType IN (Group@PH_SYS_EVENT_MailMalware_Found)</singleConstraint>
                </eventFilters>
                <name>Spam/Malicious Mail Attachment found but not remediated</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53331969</eventFilters>
                <incidentAttrs>
        srcIpAddr = AttachFound.hostIpAddr, senderMailAddr = AttachFound.senderMailAddr
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_MAILATTACH_NON_REMEDY</incidentType>
                <triggerEventAttrList> phRecvTime,reptDevIpAddr,eventType,srcIpAddr,senderMailAddr,receiverMailAddr,mailSubject,vendor,spamScore,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Vuln_4" entityVersion="3" xmlId="Rule$PH_Rule_Vuln_4" lastModified="1300496032106" id="3136153" custId="0" creationTime="1288817651068">
                <activatedTime>1300496032105</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects that host anti-virus or content inspection devices found a spyware but could not remediate it</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53331970" ownerId="500150" lastModified="1300496032105" id="53331970" custId="0" creationTime="1300496032105">
                    <groupBy>hostIpAddr</groupBy>
                    <groupConstraint>COUNT(*) &gt;= 1</groupConstraint>
                    <index>0</index>
                    <name>SpywareFound</name>
                    <singleConstraint>eventType IN (Group@PH_SYS_EVENT_Spyware_Remedy_Failed) AND reptDevIpAddr IN (Group@PH_SYS_APP_SEC_MGMT,Group@PH_SYS_DEVICE_SEC_GW)</singleConstraint>
                </eventFilters>
                <name>Spyware found but not remediated</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53331970</eventFilters>
                <incidentAttrs>
        hostIpAddr = SpywareFound.hostIpAddr
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_SPYWARE_NON_REMEDY</incidentType>
                <triggerEventAttrList> phRecvTime,reptDevIpAddr,eventType,hostIpAddr,computer,user,fileName,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Web_Server_1" entityVersion="3" xmlId="Rule$PH_Rule_Web_Server_1" lastModified="1300496032289" id="3136154" custId="0" creationTime="1288817651309">
                <activatedTime>1300496032289</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects multiple HTTP client side errors from the same IP - might indicate an attack . Thresholds are 5 errors from the samesrc IP within a 10 minute interval</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53331971" ownerId="500150" lastModified="1300496032288" id="53331971" custId="0" creationTime="1300496032288">
                    <groupBy>reptDevIpAddr,srcIpAddr</groupBy>
                    <groupConstraint>COUNT (*) &gt;= 5</groupConstraint>
                    <index>0</index>
                    <name>ExcessHTTPClientErr</name>
                    <singleConstraint>eventType IN ("IIS-Web-Forbidden-Access-Denied","IIS-Web-Bad-Request","IIS-Web-Length-Reqd-Access-Denied","Apache-Web-Forbidden-Access-Denied","Apache-Web-Bad-Request","Apache-Web-Length-Reqd-Access-Denied","Squid-Web-Forbidden-Access-Denied","Squid-Web-Bad-Request","Squid-Web-Length-Reqd-Access-Denied")</singleConstraint>
                </eventFilters>
                <name>Excessive HTTP Client Side Errors</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53331971</eventFilters>
                <incidentAttrs>
        srcIpAddr = ExcessHTTPClientErr.srcIpAddr, destIpAddr = ExcessHTTPClientErr.reptDevIpAddr,incidentCount = ExcessHTTPClientErr.COUNT(*)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_EXCESS_HTTP_CLIENT_ERR</incidentType>
                <triggerEventAttrList> phRecvTime,reptDevIpAddr,srcIpAddr,user,httpMethod,uriStem,eventType,httpStatusCode,httpSubStatusCode,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Web_Server_2" entityVersion="3" xmlId="Rule$PH_Rule_Web_Server_2" lastModified="1300496032429" id="3136155" custId="0" creationTime="1288817651552">
                <activatedTime>1300496032428</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects multiple FTP client side errors from the same IP - might indicate an attack from the source IP</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53331972" ownerId="500150" lastModified="1300496032428" id="53331972" custId="0" creationTime="1300496032428">
                    <groupBy>reptDevIpAddr,srcIpAddr,user</groupBy>
                    <groupConstraint>COUNT (*) &gt;= 5</groupConstraint>
                    <index>0</index>
                    <name>ExcessFTPClientErr</name>
                    <singleConstraint>eventType IN ("IIS-FTP-Command-Not-Implemented","IIS-FTP-File-Not-Found","IIS-FTP-Illegal-File")</singleConstraint>
                </eventFilters>
                <name>Excessive FTP Client Side Errors</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53331972</eventFilters>
                <incidentAttrs>
        srcIpAddr = ExcessFTPClientErr.srcIpAddr, destIpAddr = ExcessFTPClientErr.reptDevIpAddr,user = ExcessFTPClientErr.user, incidentCount = ExcessFTPClientErr.COUNT(*)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_EXCESS_FTP_CLIENT_ERR</incidentType>
                <triggerEventAttrList> phRecvTime,reptDevIpAddr,srcIpAddr,user,httpMethod,uriStem,httpStatusCode,httpSubStatusCode,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_201" entityVersion="5" xmlId="Rule$PH_Rule_Perf_201" lastModified="1300496032781" id="3136156" custId="0" creationTime="1288817651764">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects that server CPU has reached a warning level (between 75% and 85% based on 2 successive readings in a 10 minute interval</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53331973" ownerId="500150" lastModified="1300496032780" id="53331973" custId="0" creationTime="1300496032780">
                    <groupBy>hostIpAddr,hostName</groupBy>
                    <groupConstraint>AVG(cpuUtil) &gt;= 75 AND AVG(cpuUtil) &lt;= 85 AND COUNT(*) &gt;= 2</groupConstraint>
                    <index>0</index>
                    <name>ServCPUWarn</name>
                    <singleConstraint>eventType = "PH_DEV_MON_SYS_CPU_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server)</singleConstraint>
                </eventFilters>
                <name>Server CPU Warning</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53331973</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = ServCPUWarn.hostIpAddr, hostName = ServCPUWarn.hostName, cpuUtil = ServCPUWarn.AVG(cpuUtil)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_SERVER_CPU_WARN</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,cpuUtil,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_202" entityVersion="6" xmlId="Rule$PH_Rule_Perf_202" lastModified="1300496033035" id="3136157" custId="0" creationTime="1288817651862">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects that server CPU has reached a critical level (greater than 85% based on 2 successive readings in a 10 minute interval</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53331974" ownerId="500150" lastModified="1300496033033" id="53331974" custId="0" creationTime="1300496033033">
                    <groupBy>hostIpAddr,hostName</groupBy>
                    <groupConstraint>AVG(cpuUtil) &gt; 85 AND COUNT(*) &gt;= 2</groupConstraint>
                    <index>0</index>
                    <name>ServCPUCrit</name>
                    <singleConstraint>eventType = "PH_DEV_MON_SYS_CPU_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server)</singleConstraint>
                </eventFilters>
                <name>Server CPU Critical</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53331974</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = ServCPUCrit.hostIpAddr, hostName = ServCPUCrit.hostName, cpuUtil = ServCPUCrit.AVG(cpuUtil)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_SERVER_CPU_CRIT</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,cpuUtil,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="ACTIVATION" naturalId="PH_Rule_Perf_203" entityVersion="5" xmlId="Rule$PH_Rule_Perf_203" ownerId="0" lastModified="1301588311132" id="3136158" custId="0" creationTime="1288817651934">
                <activatedTime>1300496033221</activatedTime>
                <active>false</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that a network device CPU has reached a warning level (between 75% and 90% based on 2 successive readings in a 10 minute interval</description>
                <eventFilters entityVersion="1" xmlId="EventFilter@53331975" ownerId="500150" lastModified="1301588311138" id="53331975" custId="0" creationTime="1300496033220">
                    <groupBy>hostIpAddr,hostName</groupBy>
                    <groupConstraint> AVG ( cpuUtil )&gt;= 75  AND AVG ( cpuUtil )&lt;= 90  AND COUNT ( * )&gt;= 2 </groupConstraint>
                    <index>0</index>
                    <name>NetCPUWarn</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_SYS_CPU_UTIL"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Network) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Network CPU Warning</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53331975</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = NetCPUWarn.hostIpAddr, hostName = NetCPUWarn.hostName, cpuUtil = NetCPUWarn.AVG(cpuUtil)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_NET_CPU_WARN</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,cpuUtil,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_204" entityVersion="3" xmlId="Rule$PH_Rule_Perf_204" lastModified="1300496033371" id="3136159" custId="0" creationTime="1288817652006">
                <activatedTime>1300496033371</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects that a network device CPU has reached a critical level (greater than 90% based on 2 successive readings in a 10 minute interval</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53331976" ownerId="500150" lastModified="1300496033370" id="53331976" custId="0" creationTime="1300496033370">
                    <groupBy>hostIpAddr,hostName</groupBy>
                    <groupConstraint>AVG(cpuUtil) &gt; 90 AND COUNT(*) &gt;= 2</groupConstraint>
                    <index>0</index>
                    <name>NetCPUCrit</name>
                    <singleConstraint>eventType = "PH_DEV_MON_SYS_CPU_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network)</singleConstraint>
                </eventFilters>
                <name>Network CPU Critical</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53331976</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = NetCPUCrit.hostIpAddr, hostName = NetCPUCrit.hostName, cpuUtil = NetCPUCrit.AVG(cpuUtil)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_NET_CPU_CRIT</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,cpuUtil,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_205" entityVersion="6" xmlId="Rule$PH_Rule_Perf_205" lastModified="1300496033502" id="3136160" custId="0" creationTime="1288817652079">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects that server Memory has reached a warning level (between 75% and 85% based on 2 successive readings in a 10 minute interval</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53331977" ownerId="500150" lastModified="1300496033501" id="53331977" custId="0" creationTime="1300496033501">
                    <groupBy>hostIpAddr,hostName</groupBy>
                    <groupConstraint>AVG(memUtil) &gt;= 75 AND AVG(memUtil) &lt;= 85 AND COUNT(*) &gt;= 2</groupConstraint>
                    <index>0</index>
                    <name>ServMemWarn</name>
                    <singleConstraint>eventType = "PH_DEV_MON_SYS_MEM_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server) AND memName = "Physical Memory"</singleConstraint>
                </eventFilters>
                <name>Server Memory Warning</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53331977</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = ServMemWarn.hostIpAddr, hostName = ServMemWarn.hostName, memUtil = ServMemWarn.AVG(memUtil)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_SERVER_MEM_WARN</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,memUtil,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_206" entityVersion="6" xmlId="Rule$PH_Rule_Perf_206" lastModified="1300496033633" id="3136161" custId="0" creationTime="1288817652154">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects that server memory has reached a critical level (greater than 85% based on 2 successive readings in a 10 minute interval</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53331978" ownerId="500150" lastModified="1300496033631" id="53331978" custId="0" creationTime="1300496033631">
                    <groupBy>hostIpAddr,hostName</groupBy>
                    <groupConstraint>AVG(memUtil) &gt; 85 AND COUNT(*) &gt;= 2</groupConstraint>
                    <index>0</index>
                    <name>ServMemCrit</name>
                    <singleConstraint>eventType = "PH_DEV_MON_SYS_MEM_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server) AND memName = "Physical Memory"</singleConstraint>
                </eventFilters>
                <name>Server Memory Critical</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53331978</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = ServMemCrit.hostIpAddr, hostName = ServMemCrit.hostName, memUtil = ServMemCrit.AVG(memUtil)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_SERVER_MEM_CRIT</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,memUtil,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_207" entityVersion="6" xmlId="Rule$PH_Rule_Perf_207" lastModified="1300496033880" id="3136162" custId="0" creationTime="1288817652230">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects that a network device memory usage has reached a warning level (between 50% and 85% based on 2 successive readings in a 10 minute interval</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53331980" ownerId="500150" lastModified="1300496033878" id="53331980" custId="0" creationTime="1300496033878">
                    <groupBy>hostIpAddr,hostName</groupBy>
                    <groupConstraint>AVG(memUtil) &gt;= 65 AND AVG(memUtil) &lt;= 85 AND COUNT(*) &gt;= 2</groupConstraint>
                    <index>0</index>
                    <name>NetMemWarn</name>
                    <singleConstraint>eventType = "PH_DEV_MON_SYS_MEM_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network) AND memName = "Physical Memory"</singleConstraint>
                </eventFilters>
                <name>Network Memory Warning</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53331980</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = NetMemWarn.hostIpAddr, hostName = NetMemWarn.hostName, memUtil = NetMemWarn.AVG(memUtil)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_NET_MEM_WARN</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,memUtil,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_208" entityVersion="6" xmlId="Rule$PH_Rule_Perf_208" lastModified="1300496034015" id="3136163" custId="0" creationTime="1288817652307">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects that a network device memory has reached a critical level (greater than 85% based on 2 successive readings in a 10 minute interval</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53331981" ownerId="500150" lastModified="1300496034013" id="53331981" custId="0" creationTime="1300496034013">
                    <groupBy>hostIpAddr,hostName</groupBy>
                    <groupConstraint>AVG(memUtil) &gt; 85 AND COUNT(*) &gt;= 2</groupConstraint>
                    <index>0</index>
                    <name>NetMemCrit</name>
                    <singleConstraint>eventType = "PH_DEV_MON_SYS_MEM_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network) AND memName = "Physical Memory"</singleConstraint>
                </eventFilters>
                <name>Network Memory Critical</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53331981</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = NetMemCrit.hostIpAddr, hostName = NetMemCrit.hostName, memUtil = NetMemCrit.AVG(memUtil)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_NET_MEM_CRIT</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,memUtil,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="ACTIVATION" naturalId="PH_Rule_Perf_209" entityVersion="7" xmlId="Rule$PH_Rule_Perf_209" ownerId="0" lastModified="1300502404289" id="3136164" custId="0" creationTime="1288817652388">
                <activatedTime>1300496034219</activatedTime>
                <active>false</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that server disk space usage has reached a warning level (utilization between 80% and 95% and free disk still greater than 100 MB) based on 2 successive readings in a 10 minute interval</description>
                <eventFilters entityVersion="1" xmlId="EventFilter@53331982" ownerId="500150" lastModified="1300502404297" id="53331982" custId="0" creationTime="1300496034219">
                    <groupBy>hostIpAddr,hostName,diskName</groupBy>
                    <groupConstraint>(( AVG ( diskUtil )&gt;= 80  AND AVG ( diskUtil )&lt;= 95 ) OR( AVG ( diskUtil )&gt;= 95  AND AVG ( freeDiskMB )&gt; 100 )) AND COUNT ( * )&gt;= 2 </groupConstraint>
                    <index>0</index>
                    <name>ServDiskWarn</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_SYS_DISK_UTIL"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server)  AND  diskName NOT IN ("/boot") </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Server Disk space Warning</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53331982</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = ServDiskWarn.hostIpAddr, hostName = ServDiskWarn.hostName, diskName = ServDiskWarn.diskName, diskUtil = ServDiskWarn.AVG(diskUtil)
      </incidentAttrs>
                <incidentFireFreq>21600</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_SERVER_DISK_SPACE_WARN</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,diskName,diskUtil,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="ACTIVATION" naturalId="PH_Rule_Perf_210" entityVersion="14" xmlId="Rule$PH_Rule_Perf_210" ownerId="0" lastModified="1300502357992" id="3136165" custId="0" creationTime="1288817652469">
                <activatedTime>1300496034376</activatedTime>
                <active>false</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that server disk space usage has reached a critical level (greater than 95% and free disk less than 100 MB) based on 2 successive readings in a 10 minute interval</description>
                <eventFilters entityVersion="1" xmlId="EventFilter@53331983" ownerId="500150" lastModified="1300502357996" id="53331983" custId="0" creationTime="1300496034376">
                    <groupBy>hostIpAddr,hostName,diskName</groupBy>
                    <groupConstraint> AVG ( diskUtil )&gt; 95  AND AVG ( freeDiskMB )&lt; 100  AND COUNT ( * )&gt;= 2 </groupConstraint>
                    <index>0</index>
                    <name>ServDiskCrit</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_SYS_DISK_UTIL"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server)  AND  diskName NOT IN ("/boot") </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Server Disk Space Critical</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53331983</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = ServDiskCrit.hostIpAddr, hostName = ServDiskCrit.hostName, diskName = ServDiskCrit.diskName, diskUtil = ServDiskCrit.AVG(diskUtil)
      </incidentAttrs>
                <incidentFireFreq>21600</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_SERVER_DISK_SPACE_CRIT</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,diskName,diskUtil,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_211" entityVersion="7" xmlId="Rule$PH_Rule_Perf_211" lastModified="1300496034805" id="3136166" custId="0" creationTime="1288817652548">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects that interface utilization of a network device has reached a warning level (utilization between 30% and 50% based on 2 successive readings in a 10 minute interval. IPS devices are excluded since being a sniffing interface, they have high utilization under normal circumstances.</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53331986" ownerId="500150" lastModified="1300496034803" id="53331986" custId="0" creationTime="1300496034803">
                    <groupBy>hostIpAddr,hostName,intfName</groupBy>
                    <groupConstraint>((AVG(inIntfUtil) &gt;= 30 AND AVG(inIntfUtil) &lt;= 50) OR
          (AVG(outIntfUtil) &gt;= 30 AND AVG(outIntfUtil) &lt;= 50)) AND COUNT(*) &gt;= 2</groupConstraint>
                    <index>0</index>
                    <name>IntfUtilWarn</name>
                    <singleConstraint>eventType = "PH_DEV_MON_NET_INTF_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network) AND hostIpAddr NOT IN (Group@PH_SYS_DEVICE_NETWORK_IPS)</singleConstraint>
                </eventFilters>
                <name>Network Intf Util Warning</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53331986</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = IntfUtilWarn.hostIpAddr, hostName = IntfUtilWarn.hostName, intfName = IntfUtilWarn.intfName, inIntfUtil = IntfUtilWarn.AVG(inIntfUtil),outIntfUtil = IntfUtilWarn.AVG(outIntfUtil) 
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_NET_INTF_UTIL_WARN</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,intfName,inIntfUtil,outIntfUtil,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_212" entityVersion="7" xmlId="Rule$PH_Rule_Perf_212" lastModified="1300496034946" id="3136167" custId="0" creationTime="1288817652624">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects that interface utilization of a network device has reached a critical level (utilization greater than 50% based on 2 successive readings in a 10 minute interval. IPS devices are excluded since being a sniffing interface, they have high utilization under normal circumstances.</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53331987" ownerId="500150" lastModified="1300496034944" id="53331987" custId="0" creationTime="1300496034944">
                    <groupBy>hostIpAddr,hostName,intfName</groupBy>
                    <groupConstraint>(AVG(inIntfUtil) &gt; 50 OR AVG(outIntfUtil) &gt; 50) AND COUNT(*) &gt;= 2</groupConstraint>
                    <index>0</index>
                    <name>IntfUtilCrit</name>
                    <singleConstraint>eventType = "PH_DEV_MON_NET_INTF_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network) AND hostIpAddr NOT IN (Group@PH_SYS_DEVICE_NETWORK_IPS) AND intfName NOT IN ("lo","Null0")</singleConstraint>
                </eventFilters>
                <name>Network Intf Util Critical</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53331987</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = IntfUtilCrit.hostIpAddr, hostName = IntfUtilCrit.hostName, intfName = IntfUtilCrit.intfName, inIntfUtil = IntfUtilCrit.AVG(inIntfUtil),outIntfUtil = IntfUtilCrit.AVG(outIntfUtil) 
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_NET_INTF_UTIL_CRIT</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,intfName,inIntfUtil,outIntfUtil,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_211_B" entityVersion="6" xmlId="Rule$PH_Rule_Perf_211_B" lastModified="1300496035088" id="3136168" custId="0" creationTime="1288817652703">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects that interface utilization of a network IPS device has reached a warning level (utilization between 60% and 80% based on 2 successive readings in a 10 minute interval.</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53331988" ownerId="500150" lastModified="1300496035086" id="53331988" custId="0" creationTime="1300496035086">
                    <groupBy>hostIpAddr,hostName,intfName</groupBy>
                    <groupConstraint>((AVG(inIntfUtil) &gt;= 60 AND AVG(inIntfUtil) &lt;= 80) OR
          (AVG(outIntfUtil) &gt;= 60 AND AVG(outIntfUtil) &lt;= 80)) AND COUNT(*) &gt;= 2</groupConstraint>
                    <index>0</index>
                    <name>IntfUtilWarn</name>
                    <singleConstraint>eventType = "PH_DEV_MON_NET_INTF_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network) AND hostIpAddr IN (Group@PH_SYS_DEVICE_NETWORK_IPS) AND intfName NOT IN ("lo","Null0")</singleConstraint>
                </eventFilters>
                <name>Network IPS Intf Util Warning</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53331988</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = IntfUtilWarn.hostIpAddr, hostName = IntfUtilWarn.hostName, intfName = IntfUtilWarn.intfName, inIntfUtil = IntfUtilWarn.AVG(inIntfUtil),outIntfUtil = IntfUtilWarn.AVG(outIntfUtil) 
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_IPS_NET_INTF_UTIL_WARN</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,intfName,inIntfUtil,outIntfUtil,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_212_B" entityVersion="8" xmlId="Rule$PH_Rule_Perf_212_B" lastModified="1300496035290" id="3136169" custId="0" creationTime="1288817652793">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects that interface utilization of a network IPS device has reached a critical level (utilization greater than 80% based on 2 successive readings in a 10 minute interval.</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53331989" ownerId="500150" lastModified="1300496035288" id="53331989" custId="0" creationTime="1300496035288">
                    <groupBy>hostIpAddr,hostName,intfName</groupBy>
                    <groupConstraint>(AVG(inIntfUtil) &gt; 80 OR AVG(outIntfUtil) &gt; 80) AND COUNT(*) &gt;= 2</groupConstraint>
                    <index>0</index>
                    <name>IntfUtilCrit</name>
                    <singleConstraint>eventType = "PH_DEV_MON_NET_INTF_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network) AND hostIpAddr IN (Group@PH_SYS_DEVICE_NETWORK_IPS) AND intfName NOT CONTAIN "Loopback" AND intfName NOT IN ("lo","Null0")</singleConstraint>
                </eventFilters>
                <name>Network IPS Intf Util Critical</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53331989</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = IntfUtilCrit.hostIpAddr, hostName = IntfUtilCrit.hostName, intfName = IntfUtilCrit.intfName, inIntfUtil = IntfUtilCrit.AVG(inIntfUtil),outIntfUtil = IntfUtilCrit.AVG(outIntfUtil) 
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_IPS_NET_INTF_UTIL_CRIT</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,intfName,inIntfUtil,outIntfUtil,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="ACTIVATION" naturalId="PH_Rule_Perf_213" entityVersion="6" xmlId="Rule$PH_Rule_Perf_213" ownerId="0" lastModified="1300911678561" id="3136170" custId="0" creationTime="1288817652873">
                <activatedTime>1300496035447</activatedTime>
                <active>false</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that interface utilization of a server has reached a warning level (utilization between 30% and 50% based on 2 successive readings in a 10 minute interval</description>
                <eventFilters entityVersion="1" xmlId="EventFilter@53331990" ownerId="500150" lastModified="1300911678569" id="53331990" custId="0" creationTime="1300496035447">
                    <groupBy>hostIpAddr,hostName,intfName</groupBy>
                    <groupConstraint>(( AVG ( inIntfUtil )&gt;= 30  AND AVG ( inIntfUtil )&lt;= 50 ) OR( AVG ( outIntfUtil )&gt;= 30  AND AVG ( outIntfUtil )&lt;= 50 )) AND COUNT ( * )&gt;= 2 </groupConstraint>
                    <index>0</index>
                    <name>IntfUtilWarn</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_NET_INTF_UTIL"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server)  AND  hostIpAddr NOT IN (Group@PH_SYS_APP_NETWORK_IPS)  AND  intfName NOT CONTAIN "Loopback"  AND  intfName NOT IN ("lo","Null0") </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Server Intf Util Warning</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53331990</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = IntfUtilWarn.hostIpAddr, hostName = IntfUtilWarn.hostName, intfName = IntfUtilWarn.intfName, inIntfUtil = IntfUtilWarn.AVG(inIntfUtil),outIntfUtil = IntfUtilWarn.AVG(outIntfUtil) 
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_SERVER_INTF_UTIL_WARN</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,intfName,inIntfUtil,outIntfUtil,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="ACTIVATION" naturalId="PH_Rule_Perf_214" entityVersion="6" xmlId="Rule$PH_Rule_Perf_214" ownerId="0" lastModified="1300911720759" id="3136171" custId="0" creationTime="1288817652953">
                <activatedTime>1300496035584</activatedTime>
                <active>false</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that interface utilization of a network device has reached a critical level (utilization greater than 50% based on 2 successive readings in a 10 minute interval</description>
                <eventFilters entityVersion="1" xmlId="EventFilter@53331991" ownerId="500150" lastModified="1300911720766" id="53331991" custId="0" creationTime="1300496035584">
                    <groupBy>hostIpAddr,hostName,intfName</groupBy>
                    <groupConstraint>( AVG ( inIntfUtil )&gt; 50  OR AVG ( outIntfUtil )&gt; 50 ) AND COUNT ( * )&gt;= 2 </groupConstraint>
                    <index>0</index>
                    <name>IntfUtilCrit</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_NET_INTF_UTIL"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server)  AND  hostIpAddr NOT IN (Group@PH_SYS_APP_NETWORK_IPS)  AND  intfName NOT CONTAIN "Loopback"  AND  intfName NOT IN ("lo","Null0") </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Server Intf Util Critical</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53331991</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = IntfUtilCrit.hostIpAddr, hostName = IntfUtilCrit.hostName, intfName = IntfUtilCrit.intfName, inIntfUtil = IntfUtilCrit.AVG(inIntfUtil),outIntfUtil = IntfUtilCrit.AVG(outIntfUtil) 
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_SERVER_INTF_UTIL_CRIT</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,intfName,inIntfUtil,outIntfUtil,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_215" entityVersion="7" xmlId="Rule$PH_Rule_Perf_215" lastModified="1300496035729" id="3136172" custId="0" creationTime="1288817653041">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects that a network device interface error has reached a warning level (utilization between 1% and 5% based on 2 successive readings in a 10 minute interval</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53331992" ownerId="500150" lastModified="1300496035727" id="53331992" custId="0" creationTime="1300496035727">
                    <groupBy>hostIpAddr,hostName,intfName</groupBy>
                    <groupConstraint>AVG(inIntfPktErrPct) &gt;= 1 AND AVG(inIntfPktErrPct) &lt;= 5 OR
          AVG(outIntfPktErrPct) &gt;= 1 AND AVG(outIntfPktErrPct) &lt;= 5 AND COUNT(*) &gt;= 2</groupConstraint>
                    <index>0</index>
                    <name>IntfErrorWarn</name>
                    <singleConstraint>eventType = "PH_DEV_MON_NET_INTF_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network)</singleConstraint>
                </eventFilters>
                <name>Network Intf Error Warning</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53331992</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = IntfErrorWarn.hostIpAddr, hostName = IntfErrorWarn.hostName, intfName = IntfErrorWarn.intfName,inIntfPktErrPct = IntfErrorWarn.AVG(inIntfPktErrPct), outIntfPktErrPct = IntfErrorWarn.AVG(outIntfPktErrPct)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_NET_INTF_ERR_WARN</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,intfName,inIntfPktErrPct,outIntfPktErrPct,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_216" entityVersion="9" xmlId="Rule$PH_Rule_Perf_216" lastModified="1300496035890" id="3136173" custId="0" creationTime="1288817653124">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects that a network device interface errors has reached a critical level (greater than 5% based on 2 successive readings in a 10 minute interval</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53331993" ownerId="500150" lastModified="1300496035887" id="53331993" custId="0" creationTime="1300496035887">
                    <groupBy>hostIpAddr,hostName,intfName</groupBy>
                    <groupConstraint>AVG(inIntfPktErrPct) &gt; 5 OR AVG(outIntfPktErrPct) &gt; 5) AND COUNT(*) &gt;= 2</groupConstraint>
                    <index>0</index>
                    <name>IntfErrorCrit</name>
                    <singleConstraint>eventType = "PH_DEV_MON_NET_INTF_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network)</singleConstraint>
                </eventFilters>
                <name>Network Intf Error Critical</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53331993</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = IntfErrorCrit.hostIpAddr, hostName = IntfErrorCrit.hostName, intfName = IntfErrorCrit.intfName, inIntfPktErrPct = IntfErrorCrit.AVG(inIntfPktErrPct), outIntfPktErrPct = IntfErrorCrit.AVG(outIntfPktErrPct)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_NET_INTF_ERR_CRIT</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,intfName,inIntfPktErrPct,outIntfPktErrPct,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_217" entityVersion="4" xmlId="Rule$PH_Rule_Perf_217" lastModified="1300496036036" id="3136174" custId="0" creationTime="1288817653207">
                <activatedTime>1300496036034</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects that a server interface error has reached a warning level (utilization between 1% and 5% based on 2 successive readings in a 10 minute interval</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53331994" ownerId="500150" lastModified="1300496036034" id="53331994" custId="0" creationTime="1300496036034">
                    <groupBy>hostIpAddr,hostName,intfName</groupBy>
                    <groupConstraint>AVG(inIntfPktErrPct) &gt;= 1 AND AVG(inIntfPktErrPct) &lt;= 5 OR
          AVG(outIntfPktErrPct) &gt;= 1 AND AVG(outIntfPktErrPct) &lt;= 5 AND COUNT(*) &gt;= 2</groupConstraint>
                    <index>0</index>
                    <name>IntfErrorWarn</name>
                    <singleConstraint>eventType = "PH_DEV_MON_NET_INTF_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server)</singleConstraint>
                </eventFilters>
                <name>Server Intf Error Warning</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53331994</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = IntfErrorWarn.hostIpAddr, hostName = IntfErrorWarn.hostName, intfName = IntfErrorWarn.intfName,inIntfPktErrPct = IntfErrorWarn.AVG(inIntfPktErrPct), outIntfPktErrPct = IntfErrorWarn.AVG(outIntfPktErrPct)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_SERVER_INTF_ERR_WARN</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,intfName,inIntfPktErrPct,outIntfPktErrPct,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_218" entityVersion="5" xmlId="Rule$PH_Rule_Perf_218" lastModified="1300496036191" id="3136175" custId="0" creationTime="1288817653290">
                <activatedTime>1300496036188</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects that a server interface errors has reached a critical level (greater than 5% based on 2 successive readings in a 10 minute interval</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53331995" ownerId="500150" lastModified="1300496036188" id="53331995" custId="0" creationTime="1300496036188">
                    <groupBy>hostIpAddr,hostName,intfName</groupBy>
                    <groupConstraint>AVG(inIntfPktErrPct) &gt; 5 OR AVG(outIntfPktErrPct) &gt; 5) AND COUNT(*) &gt;= 2</groupConstraint>
                    <index>0</index>
                    <name>IntfErrorCrit</name>
                    <singleConstraint>eventType = "PH_DEV_MON_NET_INTF_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server)</singleConstraint>
                </eventFilters>
                <name>Server Intf Error Critical</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53331995</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = IntfErrorCrit.hostIpAddr, hostName = IntfErrorCrit.hostName, intfName = IntfErrorCrit.intfName, inIntfPktErrPct = IntfErrorCrit.AVG(inIntfPktErrPct), outIntfPktErrPct = IntfErrorCrit.AVG(outIntfPktErrPct)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_SERVER_INTF_ERR_CRIT</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,intfName,inIntfPktErrPct,outIntfPktErrPct,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_219" entityVersion="3" xmlId="Rule$PH_Rule_Perf_219" lastModified="1300496036356" id="3136176" custId="0" creationTime="1288817653374">
                <activatedTime>1300496036354</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects that virtual server CPU ready percent has reached a warning level (between 20% and 25% based on 2 successive readings in a 10 minute interval</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53331996" ownerId="500150" lastModified="1300496036354" id="53331996" custId="0" creationTime="1300496036354">
                    <groupBy>hostName,hostIpAddr,phyMachIpAddr,phyMachName</groupBy>
                    <groupConstraint>AVG(cpuReadyPct) &gt;= 20 AND AVG(cpuReadyPct) &lt; 25 AND COUNT(*) &gt;= 2</groupConstraint>
                    <index>0</index>
                    <name>VMCPUMedium</name>
                    <singleConstraint>eventType = "PH_DEV_MON_VM_CPU_UTIL"</singleConstraint>
                </eventFilters>
                <name>Virtual Machine CPU Warning</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53331996</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = VMCPUMedium.hostIpAddr,hostName = VMCPUMedium.hostName,phyMachIpAddr = VMCPUMedium.phyMachIpAddr,phyMachName = VMCPUMedium.phyMachName,cpuReadyPct = VMCPUMedium.AVG(cpuReadyPct)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_VM_CPU_WARN</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,hostName,hostIpAddr,phyMachIpAddr,phyMachName,cpuUtil,cpuSysPct,cpuReadyPct,phyCpuUtil,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_220" entityVersion="3" xmlId="Rule$PH_Rule_Perf_220" lastModified="1300496036533" id="3136177" custId="0" creationTime="1288817653459">
                <activatedTime>1300496036530</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects that virtual server CPU ready percent has reached a critical level (greater than 25% based on 2 successive readings in a 10 minute interval</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53331997" ownerId="500150" lastModified="1300496036530" id="53331997" custId="0" creationTime="1300496036530">
                    <groupBy>hostName,hostIpAddr,phyMachIpAddr,phyMachName</groupBy>
                    <groupConstraint>AVG(cpuReadyPct) &gt;= 25 AND COUNT(*) &gt;= 2</groupConstraint>
                    <index>0</index>
                    <name>VMCPUHigh</name>
                    <singleConstraint>eventType = "PH_DEV_MON_VM_CPU_UTIL"</singleConstraint>
                </eventFilters>
                <name>Virtual Machine CPU Critical</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53331997</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = VMCPUHigh.hostIpAddr,hostName = VMCPUHigh.hostName,phyMachIpAddr = VMCPUHigh.phyMachIpAddr,phyMachName = VMCPUHigh.phyMachName,cpuReadyPct = VMCPUHigh.AVG(cpuReadyPct)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_VM_CPU_CRIT</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,hostName,hostIpAddr,phyMachIpAddr,phyMachName,cpuUtil,cpuSysPct,cpuReadyPct,phyCpuUtil,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="ACTIVATION" naturalId="PH_Rule_Perf_221" entityVersion="5" xmlId="Rule$PH_Rule_Perf_221" ownerId="0" lastModified="1301588519514" id="3136178" custId="0" creationTime="1288817653566">
                <activatedTime>1300496036673</activatedTime>
                <active>false</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that virtual machine memory has reached a warning level based on swapping rate between 1MBps and 1.5MBps based on 2 successive readings in a 10 minute interval</description>
                <eventFilters entityVersion="1" xmlId="EventFilter@53331998" ownerId="500150" lastModified="1301588519526" id="53331998" custId="0" creationTime="1300496036673">
                    <groupBy>hostName,hostIpAddr,phyMachIpAddr,phyMachName</groupBy>
                    <groupConstraint> AVG ( swapReadKBytesPerSec )&gt;= 1000  AND AVG ( swapReadKBytesPerSec )&lt; 1500  AND COUNT ( * )&gt;= 2 </groupConstraint>
                    <index>0</index>
                    <name>VMMemMedium</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_VM_MEM_UTIL" </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Virtual Machine Memory Warning</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53331998</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = VMMemMedium.hostIpAddr,hostName = VMMemMedium.hostName,phyMachIpAddr = VMMemMedium.phyMachIpAddr,phyMachName = VMMemMedium.phyMachName,swapReadKBytesPerSec  = VMMemMedium.AVG(swapReadKBytesPerSec)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_VM_MEM_WARN</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,hostName,hostIpAddr,phyMachIpAddr,phyMachName,memUtil,swapReadKBytesPerSec,swapWriteKBytesPerSec,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_222" entityVersion="3" xmlId="Rule$PH_Rule_Perf_222" lastModified="1300496036823" id="3136179" custId="0" creationTime="1288817653658">
                <activatedTime>1300496036821</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects that virtual machine memory has reached a warning level based on swapping rate greater than 1.5MBps based on 2 successive readings in a 10 minute interval</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53331999" ownerId="500150" lastModified="1300496036820" id="53331999" custId="0" creationTime="1300496036820">
                    <groupBy>hostName,hostIpAddr,phyMachIpAddr,phyMachName</groupBy>
                    <groupConstraint>AVG(swapReadKBytesPerSec) &gt; 1500 AND COUNT(*) &gt;= 2</groupConstraint>
                    <index>0</index>
                    <name>VMMemHigh</name>
                    <singleConstraint>eventType = "PH_DEV_MON_VM_MEM_UTIL"</singleConstraint>
                </eventFilters>
                <name>Virtual Machine Memory Critical</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53331999</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = VMMemHigh.hostIpAddr,hostName = VMMemHigh.hostName,phyMachIpAddr = VMMemHigh.phyMachIpAddr,phyMachName = VMMemHigh.phyMachName,swapReadKBytesPerSec  = VMMemHigh.AVG(swapReadKBytesPerSec)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_VM_MEM_CRIT</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,hostName,hostIpAddr,phyMachIpAddr,phyMachName,cpuUtil,cpuSysPct,cpuReadyPct,phyCpuUtil,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_225" entityVersion="10" xmlId="Rule$PH_Rule_Perf_225" lastModified="1300496036960" id="3136180" custId="0" creationTime="1288817653745">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects that ESX CPU utilization has reached a warning level (between 75% and 95% based on 2 successive readings in a 10 minute interval</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332150" ownerId="500150" lastModified="1300496036957" id="53332150" custId="0" creationTime="1300496036957">
                    <groupBy>hostName,hostIpAddr</groupBy>
                    <groupConstraint>AVG(cpuUtil) &gt;= 75 AND AVG(cpuUtil) &lt;= 95 AND COUNT(*) &gt;= 2</groupConstraint>
                    <index>0</index>
                    <name>ESXCPUWarn</name>
                    <singleConstraint>eventType = "PH_DEV_MON_SYS_CPU_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_VM_SERVER)</singleConstraint>
                </eventFilters>
                <name>ESX CPU Warning</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332150</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = ESXCPUWarn.hostIpAddr,hostName = ESXCPUWarn.hostName,cpuUtil = ESXCPUWarn.AVG(cpuUtil)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_ESX_CPU_WARN</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,hostName,hostIpAddr,cpuUtil,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_226" entityVersion="6" xmlId="Rule$PH_Rule_Perf_226" lastModified="1300496037104" id="3136181" custId="0" creationTime="1288817653837">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects that ESX CPU utilization has reached a critical level (greater than 95% based on 2 successive readings in a 10 minute interval</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332151" ownerId="500150" lastModified="1300496037099" id="53332151" custId="0" creationTime="1300496037099">
                    <groupBy>hostName,hostIpAddr</groupBy>
                    <groupConstraint>AVG(cpuUtil) &gt; 95 AND COUNT(*) &gt;= 2</groupConstraint>
                    <index>0</index>
                    <name>ESXCPUCrit</name>
                    <singleConstraint>eventType = "PH_DEV_MON_SYS_CPU_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_VM_SERVER)</singleConstraint>
                </eventFilters>
                <name>ESX CPU Critical</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332151</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = ESXCPUCrit.hostIpAddr,hostName = ESXCPUCrit.hostName,cpuUtil = ESXCPUCrit.AVG(cpuUtil)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_ESX_CPU_CRIT</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,hostName,hostIpAddr,cpuUtil,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_227" entityVersion="6" xmlId="Rule$PH_Rule_Perf_227" lastModified="1300496037267" id="3136182" custId="0" creationTime="1288817653925">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects that ESX memory utilization has reached a warning level (greater than 85% and swap rate between 1MBps and 1.5 MBps) based on 2 successive readings in a 10 minute interval</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332152" ownerId="500150" lastModified="1300496037262" id="53332152" custId="0" creationTime="1300496037262">
                    <groupBy>hostName,hostIpAddr</groupBy>
                    <groupConstraint>AVG(memUtil) &gt;= 85 AND AVG(swapReadKBytesPerSec) &gt;= 1000 AND AVG(swapReadKBytesPerSec) &lt;= 1500 AND COUNT(*) &gt;= 2</groupConstraint>
                    <index>0</index>
                    <name>ESXMemWarn</name>
                    <singleConstraint>eventType = "PH_DEV_MON_SYS_MEM_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_VM_SERVER)</singleConstraint>
                </eventFilters>
                <name>ESX Memory Warning</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332152</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = ESXMemWarn.hostIpAddr, hostName = ESXMemWarn.hostName, memUtil = ESXMemWarn.AVG(memUtil), swapReadKBytesPerSec = ESXMemWarn.AVG(swapReadKBytesPerSec)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_ESX_MEM_WARN</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,hostName,hostIpAddr,memUtil,swapReadKBytesPerSec,swapWriteKBytesPerSec,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_228" entityVersion="10" xmlId="Rule$PH_Rule_Perf_228" lastModified="1300496037445" id="3136183" custId="0" creationTime="1288817654014">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects that ESX CPU utilization has reached a critical level (greater than 95% based on 2 successive readings in a 10 minute interval</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332153" ownerId="500150" lastModified="1300496037442" id="53332153" custId="0" creationTime="1300496037442">
                    <groupBy>hostName,hostIpAddr</groupBy>
                    <groupConstraint>AVG(memUtil) &gt; 95 AND AVG(swapReadKBytesPerSec) &gt; 1500 AND COUNT(*) &gt;= 2</groupConstraint>
                    <index>0</index>
                    <name>ESXMemCrit</name>
                    <singleConstraint>eventType = "PH_DEV_MON_SYS_MEM_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_VM_SERVER)</singleConstraint>
                </eventFilters>
                <name>ESX Memory Critical</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332153</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = ESXMemCrit.hostIpAddr,hostName = ESXMemCrit.hostName, memUtil = ESXMemCrit.AVG(memUtil), swapReadKBytesPerSec = ESXMemCrit.AVG(swapReadKBytesPerSec)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_ESX_MEM_CRIT</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,hostName,hostIpAddr,memUtil,swapReadKBytesPerSec,swapWriteKBytesPerSec,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_229" entityVersion="8" xmlId="Rule$PH_Rule_Perf_229" lastModified="1300496037619" id="3136184" custId="0" creationTime="1288817654102">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects that ESX disk I/O utilization has reached a warning level - average Disk IO Latency between 20ms and 50ms based on 2 successive readings in a 10 minute interval</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332154" ownerId="500150" lastModified="1300496037615" id="53332154" custId="0" creationTime="1300496037615">
                    <groupBy>hostName,hostIpAddr,diskAdapter</groupBy>
                    <groupConstraint>AVG(guestDiskRdLatency) &gt;= 20 AND AVG(guestDiskRdLatency) &lt;= 50 AND AVG(guestDiskWrLatency) &gt;= 20 AND AVG(guestDiskWrLatency) &lt; 50 AND COUNT(*) &gt;= 2</groupConstraint>
                    <index>0</index>
                    <name>ESXDiskWarn</name>
                    <singleConstraint>eventType = "PH_DEV_MON_ESX_DISK_IO"</singleConstraint>
                </eventFilters>
                <name>ESX Disk I/O Warning</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332154</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = ESXDiskWarn.hostIpAddr, hostName = ESXDiskWarn.hostName, diskAdapter = ESXDiskWarn.diskAdapter,
        guestDiskRdLatency = ESXDiskWarn.AVG(guestDiskRdLatency), guestDiskWrLatency = ESXDiskWarn.AVG(guestDiskWrLatency)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_ESX_DISKIO_WARN</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,hostName,hostIpAddr,diskAdapter,guestDiskRdLatency,guestDiskWrLatency,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_230" entityVersion="9" xmlId="Rule$PH_Rule_Perf_230" lastModified="1300496037874" id="3136185" custId="0" creationTime="1288817654191">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects that ESX disk I/O utilization has reached a critical level - average Disk IO Latency greater than 50ms based on 2 successive readings in a 10 minute interval</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332155" ownerId="500150" lastModified="1300496037871" id="53332155" custId="0" creationTime="1300496037871">
                    <groupBy>hostName,hostIpAddr,diskAdapter</groupBy>
                    <groupConstraint>AVG(guestDiskRdLatency) &gt;= 50 OR AVG(guestDiskWrLatency) &gt;= 50 AND COUNT(*) &gt;= 2</groupConstraint>
                    <index>0</index>
                    <name>ESXDiskCrit</name>
                    <singleConstraint>eventType = "PH_DEV_MON_ESX_DISK_IO"</singleConstraint>
                </eventFilters>
                <name>ESX Disk I/O Critical</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332155</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = ESXDiskCrit.hostIpAddr, hostName = ESXDiskCrit.hostName, diskAdapter = ESXDiskCrit.diskAdapter,
        guestDiskRdLatency = ESXDiskCrit.AVG(guestDiskRdLatency), guestDiskWrLatency = ESXDiskCrit.AVG(guestDiskWrLatency)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_ESX_DISKIO_CRIT</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,hostName,hostIpAddr,diskAdapter,guestDiskRdLatency,guestDiskWrLatency,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_231" entityVersion="15" xmlId="Rule$PH_Rule_Perf_231" lastModified="1300496038037" id="3136186" custId="0" creationTime="1288817654288">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects that ESX network I/O utilization has reached a warning level - average network interface utilization between 35% and 50% based on 2 successive readings in a 10 minute interval</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332156" ownerId="500150" lastModified="1300496038034" id="53332156" custId="0" creationTime="1300496038034">
                    <groupBy>hostName,hostIpAddr,vSwitch</groupBy>
                    <groupConstraint>((AVG(inIntfUtil) &gt;= 35 AND AVG(inIntfUtil) &lt;= 50) OR (AVG(outIntfUtil) &gt;= 35 AND AVG(outIntfUtil) &lt;= 50)) AND COUNT(*) &gt;= 2</groupConstraint>
                    <index>0</index>
                    <name>ESXIntfWarn</name>
                    <singleConstraint>eventType = "PH_DEV_MON_NET_INTF_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_VM_SERVER)</singleConstraint>
                </eventFilters>
                <name>ESX Network I/O Warning</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332156</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = ESXIntfWarn.hostIpAddr, hostName = ESXIntfWarn.hostName, vSwitch = ESXIntfWarn.vSwitch,
        inIntfUtil = ESXIntfWarn.AVG(inIntfUtil), outIntfUtil = ESXIntfWarn.AVG(outIntfUtil)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_ESX_INTF_WARN</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,hostName,hostIpAddr,vSwitch, inIntfUtil, outIntfUtil, rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_232" entityVersion="6" xmlId="Rule$PH_Rule_Perf_232" lastModified="1300496038234" id="3136187" custId="0" creationTime="1288817654380">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects that ESX network I/O utilization has reached a critical level - average network interface utilization greater than 50% based on 2 successive readings in a 10 minute interval</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332157" ownerId="500150" lastModified="1300496038231" id="53332157" custId="0" creationTime="1300496038231">
                    <groupBy>hostName,hostIpAddr,vSwitch</groupBy>
                    <groupConstraint>(AVG(inIntfUtil) &gt; 50 OR AVG(outIntfUtil) &gt; 50) AND COUNT(*) &gt;= 2</groupConstraint>
                    <index>0</index>
                    <name>ESXIntfCrit</name>
                    <singleConstraint>eventType = "PH_DEV_MON_NET_INTF_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_VM_SERVER)</singleConstraint>
                </eventFilters>
                <name>ESX Network I/O Critical</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332157</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = ESXIntfCrit.hostIpAddr, hostName = ESXIntfCrit.hostName, vSwitch = ESXIntfCrit.vSwitch,
        inIntfUtil = ESXIntfCrit.AVG(inIntfUtil), outIntfUtil = ESXIntfCrit.AVG(outIntfUtil)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_ESX_INTF_CRIT</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,hostName,hostIpAddr,vSwitch, inIntfUtil, outIntfUtil, rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_IPS_1" entityVersion="3" xmlId="Rule$PH_Rule_IPS_1" lastModified="1300496038424" id="3136188" custId="0" creationTime="1288817654552">
                <activatedTime>1300496038423</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects multiple IPS events from the same source IP in a short period of time - the source IP may have been infected</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332158" ownerId="500150" lastModified="1300496038422" id="53332158" custId="0" creationTime="1300496038422">
                    <groupBy>srcIpAddr</groupBy>
                    <groupConstraint>COUNT (DISTINCT (eventType)) &gt;= 3</groupConstraint>
                    <index>0</index>
                    <name>DistinctIPSEvents</name>
                    <singleConstraint>(reptDevIpAddr IN (Group@PH_SYS_DEVICE_NETWORK_IPS) OR (reptDevIpAddr IN (Group@PH_SYS_APP_NETWORK_IPS) AND eventType CONTAIN "Snort-")) AND eventSeverity &gt;= 7</singleConstraint>
                </eventFilters>
                <name>Multiple Distinct IPS Events From Same Src</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332158</eventFilters>
                <incidentAttrs>
        srcIpAddr = DistinctIPSEvents.srcIpAddr, incidentCount = DistinctIPSEvents.COUNT (DISTINCT (eventType))
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_MULTIPLE_IPS_SAME_SRC</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_IPS_2" entityVersion="3" xmlId="Rule$PH_Rule_IPS_2" lastModified="1300496038576" id="3136189" custId="0" creationTime="1288817654626">
                <activatedTime>1300496038575</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects multiple IPS scans from the same source IP in a short period of time.</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332159" ownerId="500150" lastModified="1300496038575" id="53332159" custId="0" creationTime="1300496038575">
                    <groupBy>srcIpAddr</groupBy>
                    <groupConstraint>COUNT(*) &gt;= 2</groupConstraint>
                    <index>0</index>
                    <name>IPSScan</name>
                    <singleConstraint>(reptDevIpAddr IN (Group@PH_SYS_DEVICE_NETWORK_IPS) OR (reptDevIpAddr IN (Group@PH_SYS_APP_NETWORK_IPS) AND eventType CONTAIN "Snort-")) AND eventType IN (Group@PH_SYS_EVENT_Reconn)</singleConstraint>
                </eventFilters>
                <name>Multiple IPS Scans From Same Src</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332159</eventFilters>
                <incidentAttrs>
        srcIpAddr = IPSScan.srcIpAddr, incidentCount = IPSScan.COUNT(*)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_SCAN_IPS_SAME_SRC</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_IPS_3" entityVersion="3" xmlId="Rule$PH_Rule_IPS_3" lastModified="1300496038707" id="3136190" custId="0" creationTime="1288817654709">
                <activatedTime>1300496038706</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects a high risk rating IPS exploit event. This is applicable for Cisco IPS.</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332160" ownerId="500150" lastModified="1300496038706" id="53332160" custId="0" creationTime="1300496038706">
                    <groupBy>srcIpAddr,eventType,eventName</groupBy>
                    <groupConstraint>COUNT(*) &gt;= 1</groupConstraint>
                    <index>0</index>
                    <name>IPSHighRR</name>
                    <singleConstraint>reptDevIpAddr IN (Group@PH_SYS_DEVICE_NETWORK_IPS) AND eventType NOT IN (Group@PH_SYS_EVENT_Logon,Group@PH_SYS_EVENT_Reconn) AND ipsEvRR &gt;= 85</singleConstraint>
                </eventFilters>
                <name>High Risk Rating Cisco IPS Exploit</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332160</eventFilters>
                <incidentAttrs>
        srcIpAddr = IPSHighRR.srcIpAddr, compEventType = IPSHighRR.eventType, compEventName = IPSHighRR.eventName, incidentCount = IPSHighRR.COUNT(*)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_HIGH_RR_IPS</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="ACTIVATION" naturalId="PH_Rule_IPS_4" entityVersion="10" xmlId="Rule$PH_Rule_IPS_4" ownerId="0" lastModified="1301594835968" id="3136191" custId="0" creationTime="1288817654813">
                <activatedTime>1300496038816</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects a high severity IPS exploit detected by non-Cisco IPS</description>
                <eventFilters entityVersion="3" xmlId="EventFilter@53332161" ownerId="500150" lastModified="1301594835975" id="53332161" custId="0" creationTime="1300496038816">
                    <groupBy>srcIpAddr,eventType</groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>NonCiscoIPSHighSev</name>
                    <singleConstraint>(  reptDevIpAddr IN (Group@PH_SYS_DEVICE_NETWORK_IPS)  OR(  reptDevIpAddr IN (Group@PH_SYS_APP_NETWORK_IPS)  AND  eventType CONTAIN "Snort-" )) AND  reptVendor != "Cisco"  AND  eventType NOT IN (Group@PH_SYS_EVENT_Logon,Group@PH_SYS_EVENT_Reconn)  AND  eventSeverity &gt;= 8 </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>High Severity IPS Exploit</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332161</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>
        srcIpAddr = NonCiscoIPSHighSev.srcIpAddr, compEventType = NonCiscoIPSHighSev.eventType, incidentCount = NonCiscoIPSHighSev.COUNT(*)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_HIGH_SEV_IPS</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_IPS_5" entityVersion="5" xmlId="Rule$PH_Rule_IPS_5" ownerId="0" lastModified="1301593891950" id="3136192" custId="0" creationTime="1288817654897">
                <activatedTime>1300496038928</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects a high severity security exploit detected by non IPS devices</description>
                <eventFilters entityVersion="2" xmlId="EventFilter@53332162" ownerId="500150" lastModified="1301593891959" id="53332162" custId="0" creationTime="1300496038928">
                    <groupBy>srcIpAddr,eventType</groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>NonIPSHighSev</name>
                    <singleConstraint>  reptDevIpAddr NOT IN (Group@PH_SYS_DEVICE_NETWORK_IPS,Group@PH_SYS_APP_NETWORK_IPS)  AND  eventType IN (Group@PH_SYS_EVENT_Exploit,Group@PH_SYS_EVENT_Malware,Group@PH_SYS_EVENT_UnusualTraffic)  AND  eventSeverity &gt;= 8 </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>High Severity Security Exploit</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332162</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>
        srcIpAddr = NonIPSHighSev.srcIpAddr, incidentCount = NonIPSHighSev.COUNT(*)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_HIGH_SEV_SEC_NONIPS</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_1" entityVersion="3" xmlId="Rule$PH_Rule_Access_1" lastModified="1300496039085" id="3136193" custId="0" creationTime="1288817655062">
                <activatedTime>1300496039084</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects multiple logon failures at a network device - 5 consecutive failures in a 10 minute period. This rule triggers for network devices that do not report a source IP address.</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332163" ownerId="500150" lastModified="1300496039084" id="53332163" custId="0" creationTime="1300496039084">
                    <groupBy>reptDevIpAddr, user</groupBy>
                    <groupConstraint>COUNT (*) &gt;= 5</groupConstraint>
                    <index>0</index>
                    <name>ExcessNetLoginFailure</name>
                    <singleConstraint>eventType IN (Group@PH_SYS_EVENT_HostLogonFailure) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_Network) AND srcIpAddr IS NULL</singleConstraint>
                </eventFilters>
                <name>Multiple Admin Login Failures: Net Device (no Source IP)</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332163</eventFilters>
                <incidentAttrs>
        destIpAddr = ExcessNetLoginFailure.reptDevIpAddr, user = ExcessNetLoginFailure.user, incidentCount = ExcessNetLoginFailure.COUNT(*)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_EXCESS_FAILED_LOGON_NET_DEV</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,user,destIpPort,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_2" entityVersion="3" xmlId="Rule$PH_Rule_Access_2" lastModified="1300496039198" id="3136194" custId="0" creationTime="1288817655140">
                <activatedTime>1300496039197</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects excessive logon failures at a network device - 5 consecutive failures in a 10 minute period. This rule triggers for network devices that report a source IP address.</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332164" ownerId="500150" lastModified="1300496039196" id="53332164" custId="0" creationTime="1300496039196">
                    <groupBy>srcIpAddr, reptDevIpAddr, user</groupBy>
                    <groupConstraint>COUNT (*) &gt;= 5</groupConstraint>
                    <index>0</index>
                    <name>ExcessNetLoginFailure</name>
                    <singleConstraint>eventType IN (Group@PH_SYS_EVENT_HostLogonFailure) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_Network) AND srcIpAddr IS NOT NULL</singleConstraint>
                </eventFilters>
                <name>Multiple Admin Login Failures: Net Device</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332164</eventFilters>
                <incidentAttrs>
        srcIpAddr = ExcessNetLoginFailure.srcIpAddr, destIpAddr = ExcessNetLoginFailure.reptDevIpAddr, user = ExcessNetLoginFailure.user, incidentCount = ExcessNetLoginFailure.COUNT(*)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_EXCESS_FAILED_LOGON_2_NET_DEV</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,user,destIpPort,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_3" entityVersion="2" xmlId="Rule$PH_Rule_Access_3" lastModified="1300496039332" id="3136195" custId="0" creationTime="1288817655215">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects repeating occurrences of multiple logon failures at a network device</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332165" ownerId="500150" lastModified="1300496039331" id="53332165" custId="0" creationTime="1300496039331">
                    <groupBy>srcIpAddr,eventType,destIpAddr</groupBy>
                    <groupConstraint>COUNT (*) &gt;= 3</groupConstraint>
                    <index>0</index>
                    <name>RepeatExcessNetLoginFailure</name>
                    <singleConstraint>eventType = "PH_RULE_EXCESS_FAILED_LOGON_2_NET_DEV"</singleConstraint>
                </eventFilters>
                <name>Repeated Admin Multiple Login Failures: Net Device</name>
                <triggerWindow>86400</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332165</eventFilters>
                <incidentAttrs>
        srcIpAddr = RepeatExcessNetLoginFailure.srcIpAddr, destIpAddr = RepeatExcessNetLoginFailure.destIpAddr, incidentCount =RepeatExcessNetLoginFailure.COUNT(*)  
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_REPEAT_EXCESS_FAILED_LOGON_2_NET_DEV</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,destIpAddr,user,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_5" entityVersion="7" xmlId="Rule$PH_Rule_Access_5" lastModified="1300496039442" id="3136196" custId="0" creationTime="1288817655301">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects excessive logon failures at a server - 5 consecutive failures in a 10 minute period</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332166" ownerId="500150" lastModified="1300496039441" id="53332166" custId="0" creationTime="1300496039441">
                    <groupBy>srcIpAddr, reptDevIpAddr, user</groupBy>
                    <groupConstraint>COUNT (*) &gt;= 5</groupConstraint>
                    <index>0</index>
                    <name>ExcessServerLoginFailure</name>
                    <singleConstraint>eventType IN (Group@PH_SYS_EVENT_HostLogonFailure) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_Server)</singleConstraint>
                </eventFilters>
                <name>Multiple Logon Failures: Server</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332166</eventFilters>
                <incidentAttrs>
        srcIpAddr = ExcessServerLoginFailure.srcIpAddr, destIpAddr = ExcessServerLoginFailure.reptDevIpAddr, user = ExcessServerLoginFailure.user, incidentCount = ExcessServerLoginFailure.COUNT(*)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_EXCESS_FAILED_LOGON_SERVER</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,user,destIpPort,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_6" entityVersion="2" xmlId="Rule$PH_Rule_Access_6" lastModified="1300496039638" id="3136197" custId="0" creationTime="1288817655373">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects repeating occurrences of multiple logon failures at a server from the same user.</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332167" ownerId="500150" lastModified="1300496039637" id="53332167" custId="0" creationTime="1300496039637">
                    <groupBy>srcIpAddr,eventType,destIpAddr</groupBy>
                    <groupConstraint>COUNT (*) &gt;= 3</groupConstraint>
                    <index>0</index>
                    <name>RepeatExcessServerLoginFailure</name>
                    <singleConstraint>eventType = "PH_RULE_EXCESS_FAILED_LOGON_SERVER"</singleConstraint>
                </eventFilters>
                <name>Repeated Multiple Logon Failures: Server</name>
                <triggerWindow>86400</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332167</eventFilters>
                <incidentAttrs>
        srcIpAddr = RepeatExcessServerLoginFailure.srcIpAddr, destIpAddr = RepeatExcessServerLoginFailure.destIpAddr, incidentCount = RepeatExcessServerLoginFailure.COUNT(*)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_REPEAT_EXCESS_FAILED_LOGON_SERVER</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,destIpAddr,user,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_10" entityVersion="3" xmlId="Rule$PH_Rule_Access_10" lastModified="1300496039805" id="3136198" custId="0" creationTime="1288817655462">
                <activatedTime>1300496039804</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects excessive privileged logon failures at a server - 3 consecutive failures in a 10 minute period</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332168" ownerId="500150" lastModified="1300496039803" id="53332168" custId="0" creationTime="1300496039803">
                    <groupBy>srcIpAddr, reptDevIpAddr, user</groupBy>
                    <groupConstraint>COUNT (*) &gt;= 3</groupConstraint>
                    <index>0</index>
                    <name>ExcessPrivLoginFailure</name>
                    <singleConstraint>eventType IN (Group@PH_SYS_EVENT_HostPrivLogonFailure) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_Server)</singleConstraint>
                </eventFilters>
                <name>Multiple Privileged Logon Failures: Server</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332168</eventFilters>
                <incidentAttrs>
        srcIpAddr = ExcessPrivLoginFailure.srcIpAddr, destIpAddr = ExcessPrivLoginFailure.reptDevIpAddr, user = ExcessPrivLoginFailure.user, incidentCount = ExcessPrivLoginFailure.COUNT(*)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_EXCESS_FAILED_PRIV_LOGON_SERVER</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,user,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_15A" entityVersion="3" xmlId="Rule$PH_Rule_Access_15A" lastModified="1300496039961" id="3136199" custId="0" creationTime="1288817655544">
                <activatedTime>1300496039959</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects excessive application logon failures - 5 consecutive failures in a 10 minute period. Application logsons include the one that may require authentication for accessing the authentication, such as HTTP, SNMP, FTP, POP3, IMAP etc.</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332169" ownerId="500150" lastModified="1300496039959" id="53332169" custId="0" creationTime="1300496039959">
                    <groupBy>srcIpAddr, reptDevIpAddr, user</groupBy>
                    <groupConstraint>COUNT (*) &gt;= 5</groupConstraint>
                    <index>0</index>
                    <name>ExcessWebLoginFailure</name>
                    <singleConstraint>eventType IN (Group@PH_SYS_EVENT_WebLogonFailure)</singleConstraint>
                </eventFilters>
                <name>Multiple Logon Failures: Web Server</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332169</eventFilters>
                <incidentAttrs>
        srcIpAddr = ExcessWebLoginFailure.srcIpAddr, destIpAddr = ExcessWebLoginFailure.reptDevIpAddr, user = ExcessWebLoginFailure.user, incidentCount = ExcessWebLoginFailure.COUNT(*)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_EXCESS_FAILED_LOGON_WEB</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,user,destIpPort,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_16A" entityVersion="2" xmlId="Rule$PH_Rule_Access_16A" lastModified="1300496040083" id="3136350" custId="0" creationTime="1288817655619">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects repeating occurrences of multiple application logon failures</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332170" ownerId="500150" lastModified="1300496040082" id="53332170" custId="0" creationTime="1300496040082">
                    <groupBy>srcIpAddr,eventType,destIpAddr</groupBy>
                    <groupConstraint>COUNT (*) &gt;= 3</groupConstraint>
                    <index>0</index>
                    <name>Filter_Rule_Access_16_1</name>
                    <singleConstraint>eventType = "PH_RULE_EXCESS_FAILED_LOGON_APPL"</singleConstraint>
                </eventFilters>
                <name>Repeated Multiple Logon Failures: Web Server</name>
                <triggerWindow>86400</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332170</eventFilters>
                <incidentAttrs>
        srcIpAddr = Filter_Rule_Access_16_1.srcIpAddr, destIpAddr = Filter_Rule_Access_16_1.destIpAddr, incidentCount = Filter_Rule_Access_16_1.COUNT(*)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_REPEAT_EXCESS_FAILED_LOGON_WEB</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,destIpAddr,user,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_15B" entityVersion="3" xmlId="Rule$PH_Rule_Access_15B" lastModified="1300496040205" id="3136351" custId="0" creationTime="1288817655716">
                <activatedTime>1300496040203</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects excessive application logon failures - 5 consecutive failures in a 10 minute period. Application logsons include the one that may require authentication for accessing the authentication, such as HTTP, SNMP, FTP, POP3, IMAP etc.</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332171" ownerId="500150" lastModified="1300496040203" id="53332171" custId="0" creationTime="1300496040203">
                    <groupBy>srcIpAddr, reptDevIpAddr, user</groupBy>
                    <groupConstraint>COUNT (*) &gt;= 5</groupConstraint>
                    <index>0</index>
                    <name>ExcessDBLoginFailure1</name>
                    <singleConstraint>eventType IN (Group@PH_SYS_EVENT_DBLogonFailure)</singleConstraint>
                </eventFilters>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332172" ownerId="500150" lastModified="1300496040203" id="53332172" custId="0" creationTime="1300496040203">
                    <groupBy>srcName, reptDevIpAddr, user</groupBy>
                    <groupConstraint>COUNT (*) &gt;= 5</groupConstraint>
                    <index>1</index>
                    <name>ExcessDBLoginFailure2</name>
                    <singleConstraint>eventType IN (Group@PH_SYS_EVENT_DBLogonFailure)</singleConstraint>
                </eventFilters>
                <filterOperators>
                    <rank>0</rank>
                    <type>OR</type>
                </filterOperators>
                <name>Multiple Logon Failures: Database</name>
                <rawFOString>OR:0</rawFOString>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332171</eventFilters>
                <eventFilters>EventFilter@53332172</eventFilters>
                <incidentAttrs>
        srcIpAddr = ExcessDBLoginFailure1.srcIpAddr, srcName = ExcessDBLoginFailure2.srcName, destIpAddr = ExcessDBLoginFailure1.reptDevIpAddr, user = ExcessDBLoginFailure1.user, incidentCount = ExcessDBLoginFailure1.COUNT(*)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_EXCESS_FAILED_LOGON_DB</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,srcName,user,destIpPort,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_16B" entityVersion="2" xmlId="Rule$PH_Rule_Access_16B" lastModified="1300496040327" id="3136352" custId="0" creationTime="1288817655792">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects repeating occurrences of multiple application logon failures</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332173" ownerId="500150" lastModified="1300496040325" id="53332173" custId="0" creationTime="1300496040325">
                    <groupBy>srcIpAddr,eventType,destIpAddr</groupBy>
                    <groupConstraint>COUNT (*) &gt;= 3</groupConstraint>
                    <index>0</index>
                    <name>Filter_Rule_Access_16_1</name>
                    <singleConstraint>eventType = "PH_RULE_EXCESS_FAILED_LOGON_DB"</singleConstraint>
                </eventFilters>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332174" ownerId="500150" lastModified="1300496040325" id="53332174" custId="0" creationTime="1300496040325">
                    <groupBy>srcName,eventType,destIpAddr</groupBy>
                    <groupConstraint>COUNT (*) &gt;= 3</groupConstraint>
                    <index>1</index>
                    <name>Filter_Rule_Access_16_2</name>
                    <singleConstraint>eventType = "PH_RULE_EXCESS_FAILED_LOGON_DB"</singleConstraint>
                </eventFilters>
                <filterOperators>
                    <rank>0</rank>
                    <type>OR</type>
                </filterOperators>
                <name>Repeated Multiple Logon Failures: Database</name>
                <rawFOString>OR:0</rawFOString>
                <triggerWindow>86400</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332173</eventFilters>
                <eventFilters>EventFilter@53332174</eventFilters>
                <incidentAttrs>
        srcIpAddr = Filter_Rule_Access_16_1.srcIpAddr, srcName = Filter_Rule_Access_16_2.srcName, destIpAddr = Filter_Rule_Access_16_1.destIpAddr, incidentCount = Filter_Rule_Access_16_1.COUNT(*)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_REPEAT_EXCESS_FAILED_LOGON_DB</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,srcName,destIpAddr,user,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_15C" entityVersion="3" xmlId="Rule$PH_Rule_Access_15C" lastModified="1300496040459" id="3136353" custId="0" creationTime="1288817655872">
                <activatedTime>1300496040458</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects excessive application logon failures - 5 consecutive failures in a 10 minute period. Application logsons include the one that may require authentication for accessing the authentication, such as HTTP, SNMP, FTP, POP3, IMAP etc.</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332175" ownerId="500150" lastModified="1300496040458" id="53332175" custId="0" creationTime="1300496040458">
                    <groupBy>srcIpAddr, reptDevIpAddr, user</groupBy>
                    <groupConstraint>COUNT (*) &gt;= 5</groupConstraint>
                    <index>0</index>
                    <name>ExcessMiscAppLoginFailure1</name>
                    <singleConstraint>srcIpAddr IS NOT NULL AND eventType IN (Group@PH_SYS_EVENT_AppLogonFailure) AND eventType NOT IN (Group@PH_SYS_EVENT_AAALogonFailure)</singleConstraint>
                </eventFilters>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332176" ownerId="500150" lastModified="1300496040458" id="53332176" custId="0" creationTime="1300496040458">
                    <groupBy>reptDevIpAddr, user</groupBy>
                    <groupConstraint>COUNT (*) &gt;= 5</groupConstraint>
                    <index>1</index>
                    <name>ExcessMiscAppLoginFailure2</name>
                    <singleConstraint>srcIpAddr IS NULL AND eventType IN (Group@PH_SYS_EVENT_AppLogonFailure) AND eventType NOT IN (Group@PH_SYS_EVENT_AAALogonFailure)</singleConstraint>
                </eventFilters>
                <filterOperators>
                    <rank>0</rank>
                    <type>OR</type>
                </filterOperators>
                <name>Multiple Logon Failures: Misc App</name>
                <rawFOString>OR:0</rawFOString>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332175</eventFilters>
                <eventFilters>EventFilter@53332176</eventFilters>
                <incidentAttrs>
        srcIpAddr = ExcessMiscAppLoginFailure1.srcIpAddr, destIpAddr = ExcessMiscAppLoginFailure1.reptDevIpAddr, user = ExcessMiscAppLoginFailure1.user, incidentCount = ExcessMiscAppLoginFailure1.COUNT(*), destIpAddr = ExcessMiscAppLoginFailure2.reptDevIpAddr, user = ExcessMiscAppLoginFailure2.user, incidentCount = ExcessMiscAppLoginFailure2.COUNT(*)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_EXCESS_FAILED_LOGON_APPL</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,user,destIpPort,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_16C" entityVersion="2" xmlId="Rule$PH_Rule_Access_16C" lastModified="1300496040629" id="3136354" custId="0" creationTime="1288817655955">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects repeating occurrences of multiple application logon failures</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332177" ownerId="500150" lastModified="1300496040625" id="53332177" custId="0" creationTime="1300496040625">
                    <groupBy>srcIpAddr,eventType,destIpAddr</groupBy>
                    <groupConstraint>COUNT (*) &gt;= 3</groupConstraint>
                    <index>0</index>
                    <name>RepeatExcessMiscAppLoginFailure1</name>
                    <singleConstraint>srcIpAddr IS NOT NULL AND eventType = "PH_RULE_EXCESS_FAILED_LOGON_APPL"</singleConstraint>
                </eventFilters>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332178" ownerId="500150" lastModified="1300496040626" id="53332178" custId="0" creationTime="1300496040626">
                    <groupBy>eventType,destIpAddr</groupBy>
                    <groupConstraint>COUNT (*) &gt;= 3</groupConstraint>
                    <index>1</index>
                    <name>RepeatExcessMiscAppLoginFailure2</name>
                    <singleConstraint>srcIpAddr IS NULL AND eventType = "PH_RULE_EXCESS_FAILED_LOGON_APPL"</singleConstraint>
                </eventFilters>
                <filterOperators>
                    <rank>0</rank>
                    <type>OR</type>
                </filterOperators>
                <name>Repeated Multiple Logon Failures: Misc App</name>
                <rawFOString>OR:0</rawFOString>
                <triggerWindow>86400</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332177</eventFilters>
                <eventFilters>EventFilter@53332178</eventFilters>
                <incidentAttrs>
        srcIpAddr = RepeatExcessMiscAppLoginFailure1.srcIpAddr, destIpAddr = RepeatExcessMiscAppLoginFailure1.destIpAddr, incidentCount = RepeatExcessMiscAppLoginFailure1.COUNT(*), destIpAddr = RepeatExcessMiscAppLoginFailure2.destIpAddr, incidentCount = RepeatExcessMiscAppLoginFailure2.COUNT(*)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_REPEAT_EXCESS_FAILED_LOGON_APPL</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,destIpAddr,user,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_20" entityVersion="6" xmlId="Rule$PH_Rule_Access_20" lastModified="1300496040784" id="3136355" custId="0" creationTime="1288817656041">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects multiple domain logon failures - 5 consecutive failures in a 10 minute period</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332179" ownerId="500150" lastModified="1300496040783" id="53332179" custId="0" creationTime="1300496040783">
                    <groupBy>srcIpAddr, reptDevIpAddr, user, domain</groupBy>
                    <groupConstraint>COUNT (*) &gt;= 5</groupConstraint>
                    <index>0</index>
                    <name>ExcessDomainLoginFailure</name>
                    <singleConstraint>eventType IN (Group@PH_SYS_EVENT_DomainLogonFailure)</singleConstraint>
                </eventFilters>
                <name>Multiple Logon Failures: Domain</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332179</eventFilters>
                <incidentAttrs>
        srcIpAddr = ExcessDomainLoginFailure.srcIpAddr, destIpAddr = ExcessDomainLoginFailure.reptDevIpAddr, domain = ExcessDomainLoginFailure.domain, user = ExcessDomainLoginFailure.user, incidentCount = ExcessDomainLoginFailure.COUNT(*)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_EXCESS_FAILED_LOGON_DOMAIN</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,user,computer,winLogonType,winLogonFailCode,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_21" entityVersion="2" xmlId="Rule$PH_Rule_Access_21" lastModified="1300496040908" id="3136356" custId="0" creationTime="1288817656120">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects repeating occurrences of multiple domain logon failures</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332180" ownerId="500150" lastModified="1300496040906" id="53332180" custId="0" creationTime="1300496040906">
                    <groupBy>srcIpAddr,eventType,destIpAddr</groupBy>
                    <groupConstraint>COUNT (*) &gt;= 3</groupConstraint>
                    <index>0</index>
                    <name>RepeatExcessDomainLoginFailure</name>
                    <singleConstraint>eventType = "PH_RULE_EXCESS_FAILED_LOGON_DOMAIN"</singleConstraint>
                </eventFilters>
                <name>Repeated Multiple Logon Failures: Domain</name>
                <triggerWindow>86400</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332180</eventFilters>
                <incidentAttrs>
        srcIpAddr = RepeatExcessDomainLoginFailure.srcIpAddr, destIpAddr = RepeatExcessDomainLoginFailure.destIpAddr, incidentCount = RepeatExcessDomainLoginFailure.COUNT(*)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_REPEAT_EXCESS_FAILED_LOGON_DOMAIN</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,destIpAddr,user,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_25" entityVersion="3" xmlId="Rule$PH_Rule_Access_25" lastModified="1300496041043" id="3136357" custId="0" creationTime="1288817656209">
                <activatedTime>1300496041041</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects multiple VPN logon failures - 5 consecutive failures in a 10 minute period</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332181" ownerId="500150" lastModified="1300496041041" id="53332181" custId="0" creationTime="1300496041041">
                    <groupBy>srcIpAddr, reptDevIpAddr, user</groupBy>
                    <groupConstraint>COUNT (*) &gt;= 5</groupConstraint>
                    <index>0</index>
                    <name>ExcessVPNLoginFailure</name>
                    <singleConstraint>eventType IN (Group@PH_SYS_EVENT_VPNLogonFailure)</singleConstraint>
                </eventFilters>
                <name>Multiple Logon Failures: VPN</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332181</eventFilters>
                <incidentAttrs>
        srcIpAddr = ExcessVPNLoginFailure.srcIpAddr, destIpAddr = ExcessVPNLoginFailure.reptDevIpAddr, user = ExcessVPNLoginFailure.user, incidentCount = ExcessVPNLoginFailure.COUNT(*)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_EXCESS_FAILED_LOGON_VPN</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,user,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_26" entityVersion="2" xmlId="Rule$PH_Rule_Access_26" lastModified="1300496041178" id="3136358" custId="0" creationTime="1288817656287">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects repeating occurrences of excessive VPN logon failures</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332182" ownerId="500150" lastModified="1300496041176" id="53332182" custId="0" creationTime="1300496041176">
                    <groupBy>srcIpAddr,eventType,destIpAddr</groupBy>
                    <groupConstraint>COUNT (*) &gt;= 3</groupConstraint>
                    <index>0</index>
                    <name>RepeatExcessVPNLoginFailure</name>
                    <singleConstraint>eventType = "PH_RULE_EXCESS_FAILED_LOGON_VPN"</singleConstraint>
                </eventFilters>
                <name>Repeated Multiple Logon Failures: VPN</name>
                <triggerWindow>86400</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332182</eventFilters>
                <incidentAttrs>
        srcIpAddr = RepeatExcessVPNLoginFailure.srcIpAddr, destIpAddr = RepeatExcessVPNLoginFailure.destIpAddr, incidentCount = RepeatExcessVPNLoginFailure.COUNT(*)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_REPEAT_EXCESS_FAILED_LOGON_VPN</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,destIpAddr,user,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_30" entityVersion="3" xmlId="Rule$PH_Rule_Access_30" lastModified="1300496041309" id="3136359" custId="0" creationTime="1288817656369">
                <activatedTime>1300496041307</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects multiple Wireless logon failures - 5 consecutive failures in a 10 minute period</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332183" ownerId="500150" lastModified="1300496041307" id="53332183" custId="0" creationTime="1300496041307">
                    <groupBy>srcMACAddr,reptDevIpAddr,user,eventType</groupBy>
                    <groupConstraint>COUNT (*) &gt;= 5</groupConstraint>
                    <index>0</index>
                    <name>ExcessWLANLoginFailure</name>
                    <singleConstraint>eventType IN (Group@PH_SYS_EVENT_WirelessLogonFailure)</singleConstraint>
                </eventFilters>
                <name>Multiple Logon Failures: WLAN</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332183</eventFilters>
                <incidentAttrs>
        srcMACAddr = ExcessWLANLoginFailure.srcMACAddr, destIpAddr = ExcessWLANLoginFailure.reptDevIpAddr, user = ExcessWLANLoginFailure.user, incidentCount = ExcessWLANLoginFailure.COUNT(*)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_EXCESS_FAILED_LOGON_WIRELESS</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,srcMACAddr,user,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_31" entityVersion="2" xmlId="Rule$PH_Rule_Access_31" lastModified="1300496041436" id="3136360" custId="0" creationTime="1288817656444">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects repeating occurrences of excessive wireless LAN logon failures</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332184" ownerId="500150" lastModified="1300496041434" id="53332184" custId="0" creationTime="1300496041434">
                    <groupBy>srcMACAddr,user,destIpAddr,eventType</groupBy>
                    <groupConstraint>COUNT (*) &gt;= 3</groupConstraint>
                    <index>0</index>
                    <name>RepeatExcessWLANLoginFailure</name>
                    <singleConstraint>eventType = "PH_RULE_EXCESS_FAILED_LOGON_WIRELESS"</singleConstraint>
                </eventFilters>
                <name>Repeated Multiple Logon Failures: WLAN</name>
                <triggerWindow>86400</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332184</eventFilters>
                <incidentAttrs>
        srcMACAddr = RepeatExcessWLANLoginFailure.srcMACAddr, destIpAddr = RepeatExcessWLANLoginFailure.destIpAddr, incidentCount = RepeatExcessWLANLoginFailure.COUNT(*)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_REPEAT_EXCESS_FAILED_LOGON_WIRELESS</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,destIpAddr,user,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_51A" entityVersion="9" xmlId="Rule$PH_Rule_Access_51A" lastModified="1300496041556" id="3136361" custId="0" creationTime="1288817656514">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects account lockout caused by excessive logon failures</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332185" ownerId="500150" lastModified="1300496041554" id="53332185" custId="0" creationTime="1300496041554">
                    <groupBy>reptDevIpAddr, user</groupBy>
                    <groupConstraint>COUNT (*) &gt;= 1</groupConstraint>
                    <index>0</index>
                    <name>DomainAcctLockout</name>
                    <singleConstraint>eventType IN (Group@PH_SYS_EVENT_DomainAccountLocked) AND reptDevIpAddr IN (Group@PH_SYS_APP_DOMAIN_CONTROLLER)</singleConstraint>
                </eventFilters>
                <name>Domain Account Lockout</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332185</eventFilters>
                <incidentAttrs>
        destIpAddr = DomainAcctLockout.reptDevIpAddr, user = DomainAcctLockout.user, incidentCount = DomainAcctLockout.COUNT(*)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_ACCOUNT_LOCKOUT_DOMAIN</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,user,computer,winLogonType,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_51B" entityVersion="6" xmlId="Rule$PH_Rule_Access_51B" lastModified="1300496041681" id="3136362" custId="0" creationTime="1288817656595">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects account lockout caused by excessive logon failures</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332186" ownerId="500150" lastModified="1300496041679" id="53332186" custId="0" creationTime="1300496041679">
                    <groupBy>srcIpAddr,reptDevIpAddr, user</groupBy>
                    <groupConstraint>COUNT (*) &gt;= 1</groupConstraint>
                    <index>0</index>
                    <name>NetDevAcctLockout</name>
                    <singleConstraint>eventType IN (Group@PH_SYS_EVENT_HostAccountLocked) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_Network)</singleConstraint>
                </eventFilters>
                <name>Network Device Account Lockout</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332186</eventFilters>
                <incidentAttrs>
        srcIpAddr = NetDevAcctLockout.srcIpAddr, destIpAddr = NetDevAcctLockout.reptDevIpAddr, user = NetDevAcctLockout.user, incidentCount = NetDevAcctLockout.COUNT(*)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_ACCOUNT_LOCKOUT_NET_DEV</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,user,computer,winLogonType,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_51C" entityVersion="7" xmlId="Rule$PH_Rule_Access_51C" lastModified="1300496041999" id="3136363" custId="0" creationTime="1288817656676">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects account lockout caused by excessive logon failures</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332187" ownerId="500150" lastModified="1300496041809" id="53332187" custId="0" creationTime="1300496041809">
                    <groupBy>reptDevIpAddr, user</groupBy>
                    <groupConstraint>COUNT (*) &gt;= 1</groupConstraint>
                    <index>0</index>
                    <name>ServerAcctLockout</name>
                    <singleConstraint>eventType IN (Group@PH_SYS_EVENT_HostAccountLocked) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_Server) AND reptDevIpAddr NOT IN (Group@PH_SYS_APP_DOMAIN_CONTROLLER)</singleConstraint>
                </eventFilters>
                <name>Server Account Lockout</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332187</eventFilters>
                <incidentAttrs>
        destIpAddr = ServerAcctLockout.reptDevIpAddr, user = ServerAcctLockout.user, incidentCount = ServerAcctLockout.COUNT(*)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_ACCOUNT_LOCKOUT_SERVER</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,user,computer,winLogonType,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_52" entityVersion="3" xmlId="Rule$PH_Rule_Access_52" lastModified="1300496042142" id="3136364" custId="0" creationTime="1288817656755">
                <activatedTime>1300496042141</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects logon attempts to disabled accounts</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332188" ownerId="500150" lastModified="1300496042140" id="53332188" custId="0" creationTime="1300496042140">
                    <groupBy>reptDevIpAddr, user</groupBy>
                    <groupConstraint>COUNT (*) &gt;= 3</groupConstraint>
                    <index>0</index>
                    <name>DisabledAcctLogin</name>
                    <singleConstraint>eventType = "Win-Security-531"</singleConstraint>
                </eventFilters>
                <name>Disabled Account Logon Attempt</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332188</eventFilters>
                <incidentAttrs>
        destIpAddr = DisabledAcctLogin.reptDevIpAddr, user = DisabledAcctLogin.user, incidentCount = DisabledAcctLogin.COUNT(*)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_DISABLED_ACCOUNT_ACCESS</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,user,computer,winLogonType,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_53" entityVersion="5" xmlId="Rule$PH_Rule_Access_53" lastModified="1300496042286" id="3136365" custId="0" creationTime="1288817656836">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects logon attempts at times which are not permitted by policy</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332189" ownerId="500150" lastModified="1300496042283" id="53332189" custId="0" creationTime="1300496042283">
                    <groupBy>reptDevIpAddr, user</groupBy>
                    <groupConstraint>COUNT (*) &gt;= 3</groupConstraint>
                    <index>0</index>
                    <name>LoginTimeViolation</name>
                    <singleConstraint>eventType = "Win-Security-530"</singleConstraint>
                </eventFilters>
                <name>Logon Time Restriction Violation</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332189</eventFilters>
                <incidentAttrs>
        destIpAddr = LoginTimeViolation.reptDevIpAddr, user = LoginTimeViolation.user, incidentCount = LoginTimeViolation.COUNT(*)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_LOGON_TIME_VIOLATION</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,user,computer,winLogonType,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_54" entityVersion="3" xmlId="Rule$PH_Rule_Access_54" lastModified="1300496042409" id="3136366" custId="0" creationTime="1288817656927">
                <activatedTime>1300496042407</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects the same source having excessive logon failures at distinct hosts</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332190" ownerId="500150" lastModified="1300496042406" id="53332190" custId="0" creationTime="1300496042406">
                    <groupBy>srcIpAddr</groupBy>
                    <groupConstraint>COUNT (DISTINCT (destIpAddr)) &gt;= 10</groupConstraint>
                    <index>0</index>
                    <name>PasswordScan_ManyDest</name>
                    <singleConstraint>eventType IN ("PH_RULE_EXCESS_FAILED_LOGON_2_NET_DEVICE","PH_RULE_EXCESS_FAILED_LOGON_SERVER","PH_RULE_EXCESS_FAILED_PRIV_LOGON_SERVER","PH_RULE_EXCESS_FAILED_LOGON_DB", "PH_RULE_REPEAT_EXCESS_FAILED_LOGON_WEB", "PH_RULE_EXCESS_FAILED_LOGON_APPL","PH_RULE_EXCESS_FAILED_LOGON_DOMAIN", "PH_RULE_EXCESS_FAILED_LOGON_VPN", "PH_RULE_EXCESS_FAILED_LOGON_WIRELESS")</singleConstraint>
                </eventFilters>
                <name>Multiple Logon Failures: Same Src, Multiple Hosts</name>
                <triggerWindow>3600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332190</eventFilters>
                <incidentAttrs>
        srcIpAddr = PasswordScan_ManyDest.srcIpAddr, incidentCount = PasswordScan_ManyDest.COUNT (DISTINCT (destIpAddr))
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_FAILED_LOGON_MULTIPLE_HOSTS</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,destIpAddr,user,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_55" entityVersion="3" xmlId="Rule$PH_Rule_Access_55" lastModified="1300496042541" id="3136367" custId="0" creationTime="1288817657018">
                <activatedTime>1300496042539</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects same source having excessive login failures at the same destination host but multiple distinct accounts are used during the logon failure</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332191" ownerId="500150" lastModified="1300496042539" id="53332191" custId="0" creationTime="1300496042539">
                    <groupBy>srcIpAddr,destIpAddr</groupBy>
                    <groupConstraint>COUNT (DISTINCT (user)) &gt;= 3</groupConstraint>
                    <index>0</index>
                    <name>PasswordScan_SameDest_ManyAcct</name>
                    <singleConstraint>eventType IN ("PH_RULE_EXCESS_FAILED_LOGON_2_NET_DEVICE","PH_RULE_EXCESS_FAILED_LOGON_SERVER","PH_RULE_EXCESS_FAILED_PRIV_LOGON_SERVER","PH_RULE_EXCESS_FAILED_LOGON_DB", "PH_RULE_REPEAT_EXCESS_FAILED_LOGON_WEB", "PH_RULE_EXCESS_FAILED_LOGON_APPL","PH_RULE_EXCESS_FAILED_LOGON_DOMAIN", "PH_RULE_EXCESS_FAILED_LOGON_VPN","PH_RULE_EXCESS_FAILED_LOGON_WIRELESS")</singleConstraint>
                </eventFilters>
                <name>Multiple Logon Failures: Same Src and Dest, Multiple Accounts</name>
                <triggerWindow>3600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332191</eventFilters>
                <incidentAttrs>
        srcIpAddr = PasswordScan_SameDest_ManyAcct.srcIpAddr, destIpAddr = PasswordScan_SameDest_ManyAcct.destIpAddr, incidentCount = PasswordScan_SameDest_ManyAcct.COUNT (DISTINCT (user))
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_FAILED_LOGON_MULTIPLE_ACCOUNTS</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,destIpAddr,user,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Access_56" entityVersion="8" xmlId="Rule$PH_Rule_Access_56" lastModified="1300496042690" id="3136368" custId="0" creationTime="1288817657105">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects an unusual condition where a source has authentication failures at a host but that is not followed by a successful authentication at the same host within the same day</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332192" ownerId="500150" lastModified="1300496042685" id="53332192" custId="0" creationTime="1300496042685">
                    <groupBy>srcIpAddr,destIpAddr,user</groupBy>
                    <groupConstraint>COUNT (*) &gt;= 1</groupConstraint>
                    <index>0</index>
                    <name>FailedLogin</name>
                    <singleConstraint>eventType IN ("PH_RULE_EXCESS_FAILED_LOGON_NET_DEVICE","PH_RULE_EXCESS_FAILED_LOGON_SERVER","PH_RULE_EXCESS_FAILED_PRIV_LOGON_SERVER","PH_RULE_EXCESS_FAILED_LOGON_DB", "PH_RULE_REPEAT_EXCESS_FAILED_LOGON_WEB", "PH_RULE_EXCESS_FAILED_LOGON_APPL","PH_RULE_EXCESS_FAILED_LOGON_DOMAIN", "PH_RULE_EXCESS_FAILED_LOGON_VPN","PH_RULE_EXCESS_FAILED_LOGON_WIRELESS")</singleConstraint>
                </eventFilters>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332193" ownerId="500150" lastModified="1300496042685" id="53332193" custId="0" creationTime="1300496042685">
                    <groupBy>srcIpAddr,reptDevIpAddr,user</groupBy>
                    <index>1</index>
                    <name>SuccessLogin</name>
                    <singleConstraint>eventType IN (Group@PH_SYS_EVENT_HostLogonSuccess, Group@PH_SYS_EVENT_HostPrivLogonSuccess, Group@PH_SYS_EVENT_DomainLogonSuccess, Group@PH_SYS_EVENT_VPNLogonSuccess, Group@PH_SYS_EVENT_WirelessLogonSuccess, Group@PH_SYS_EVENT_AppLogonSuccess)</singleConstraint>
                </eventFilters>
                <filterOperators>
                    <rank>0</rank>
                    <type>NOT_FOLLOWED_BY</type>
                </filterOperators>
                <globalConstraint>FailedLogin.destIpAddr = SuccessLogin.reptDevIpAddr, FailedLogin.srcIpAddr = SuccessLogin.srcIpAddr, FailedLogin.user = SuccessLogin.user   </globalConstraint>
                <name>Suspicious Logon Failure: no following successful login</name>
                <rawFOString>NOT_FOLLOWED_BY:0</rawFOString>
                <triggerWindow>86400</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332192</eventFilters>
                <eventFilters>EventFilter@53332193</eventFilters>
                <incidentAttrs>
        srcIpAddr = FailedLogin.srcIpAddr, destIpAddr = FailedLogin.destIpAddr, user = FailedLogin.user
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_SUSPICIOUS_FAILED_LOGON_NO_SUCCESS</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,destIpAddr,user,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Excessive_ICMP_Unreachables" entityVersion="5" xmlId="Rule$PH_Rule_Excessive_ICMP_Unreachables" lastModified="1300496042915" id="3136369" custId="0" creationTime="1288817657299">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects an usually high frequency of ICMP destination unreachable packets between the same source and destination - this indicates routing error</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332194" ownerId="500150" lastModified="1300496042914" id="53332194" custId="0" creationTime="1300496042914">
                    <groupBy>srcIpAddr, destIpAddr</groupBy>
                    <groupConstraint>COUNT (*) &gt;= 10</groupConstraint>
                    <index>0</index>
                    <name>ExcessICMPUnreach</name>
                    <singleConstraint>ipProto = 1 AND icmpType = 3 AND eventType IN ("IOS-NETFLOW-BI", Group@PH_SYS_EVENT_PermitTraffic,Group@PH_SYS_EVENT_DenyTraffic) AND srcIpAddr NOT IN (Group@PH_SYS_APP_ACCELOPS)</singleConstraint>
                </eventFilters>
                <name>Excessive ICMP Unreachables</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332194</eventFilters>
                <incidentAttrs>
        srcIpAddr = ExcessICMPUnreach.srcIpAddr, destIpAddr =ExcessICMPUnreach.destIpAddr   
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_ICMP_UNREACH_SAME_HOSTS</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,icmpType,icmpCode,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_No_Response_To_Ping_Net" entityVersion="14" xmlId="Rule$PH_Rule_No_Response_To_Ping_Net" lastModified="1300496043052" id="3136370" custId="0" creationTime="1288817657397">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects a device does not respond to ping - 10 out of 10 ping packets are lost - either the host is down or there is a routing problem</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332195" ownerId="500150" lastModified="1300496043051" id="53332195" custId="0" creationTime="1300496043051">
                    <groupBy>hostIpAddr</groupBy>
                    <groupConstraint>AVG(pktLossPct) = 100 AND COUNT(*) &gt;= 1</groupConstraint>
                    <index>0</index>
                    <name>AllPingLossNet</name>
                    <singleConstraint>eventType = "PH_DEV_MON_PING_STAT" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network)</singleConstraint>
                </eventFilters>
                <name>Network Device Down - no ping response</name>
                <triggerWindow>60</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332195</eventFilters>
                <incidentAttrs>
        hostIpAddr = AllPingLossNet.hostIpAddr
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_NON_RESPONSIVE_NET_DEV</incidentType>
                <triggerEventAttrList> phRecvTime,reptDevIpAddr,hostIpAddr,pktLossPct,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Degraded_Ping_Net" entityVersion="6" xmlId="Rule$PH_Rule_Degraded_Ping_Net" lastModified="1300496043231" id="3136371" custId="0" creationTime="1288817657503">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects a host with degraded ping response - more than 50% packet loss and more than 100 ms avg response time</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332197" ownerId="500150" lastModified="1300496043230" id="53332197" custId="0" creationTime="1300496043230">
                    <groupBy>hostIpAddr</groupBy>
                    <groupConstraint>AVG(pktLossPct) &gt;= 50 AND AVG(pktLossPct) &lt; 100 AND COUNT(*) &gt;= 1</groupConstraint>
                    <index>0</index>
                    <name>PartPingLossNet</name>
                    <singleConstraint>eventType = "PH_DEV_MON_PING_STAT" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network)</singleConstraint>
                </eventFilters>
                <name>Network Device Degraded - Lossy Ping Response</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332197</eventFilters>
                <incidentAttrs>
        hostIpAddr = PartPingLossNet.hostIpAddr,pktLossPct=PartPingLossNet.AVG(pktLossPct))
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_DEGRADED_PING_NET_DEV</incidentType>
                <triggerEventAttrList> phRecvTime,reptDevIpAddr,hostIpAddr,avgDurationMSec,minDurationMSec,pktLossPct,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="ACTIVATION" naturalId="PH_Rule_No_Response_To_Ping_Server" entityVersion="11" xmlId="Rule$PH_Rule_No_Response_To_Ping_Server" ownerId="0" lastModified="1303506903914" id="3136372" custId="0" creationTime="1288817657584">
                <activatedTime>1300496043405</activatedTime>
                <active>false</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects a device does not respond to ping - 10 out of 10 ping packets are lost - either the host is down or there is a routing problem</description>
                <eventFilters entityVersion="1" xmlId="EventFilter@53332199" ownerId="500150" lastModified="1303506903916" id="53332199" custId="0" creationTime="1300496043405">
                    <groupBy>hostIpAddr</groupBy>
                    <groupConstraint> AVG ( pktLossPct )= 100  AND COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>AllPingLossSrv</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_PING_STAT"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Server Down - No Ping Response</name>
                <triggerWindow>60</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332199</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = AllPingLossSrv.hostIpAddr
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_NON_RESPONSIVE_SERVER</incidentType>
                <triggerEventAttrList> phRecvTime,reptDevIpAddr,hostIpAddr,pktLossPct,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Degraded_Ping_Server" entityVersion="5" xmlId="Rule$PH_Rule_Degraded_Ping_Server" lastModified="1300496043630" id="3136373" custId="0" creationTime="1288817657660">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects a host with degraded ping response - more than 50% packet loss and more than 100 ms avg response time</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332251" ownerId="500150" lastModified="1300496043629" id="53332251" custId="0" creationTime="1300496043629">
                    <groupBy>hostIpAddr</groupBy>
                    <groupConstraint>(AVG(pktLossPct) &gt;= 50) AND AVG(pktLossPct) &lt; 100 AND COUNT(*) &gt;= 1</groupConstraint>
                    <index>0</index>
                    <name>PartPingLossSrv</name>
                    <singleConstraint>eventType = "PH_DEV_MON_PING_STAT" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server)</singleConstraint>
                </eventFilters>
                <name>Server Degraded - Lossy Ping Response</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332251</eventFilters>
                <incidentAttrs>
        hostIpAddr = PartPingLossSrv.hostIpAddr,pktLossPct=PartPingLossSrv.AVG(pktLossPct)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_DEGRADED_PING_SERVER</incidentType>
                <triggerEventAttrList> phRecvTime,reptDevIpAddr,hostIpAddr,avgDurationMSec,minDurationMSec,pktLossPct,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_10" entityVersion="5" xmlId="Rule$PH_Rule_Avail_10" lastModified="1300496043896" id="3136374" custId="0" creationTime="1288817657752">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects that a network interface of a network device is staying down - that is didn't come up within 5 minutes of going down</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332253" ownerId="500150" lastModified="1300496043894" id="53332253" custId="0" creationTime="1300496043894">
                    <groupBy>hostIpAddr,intfName</groupBy>
                    <index>0</index>
                    <name>IntfDownNetDev</name>
                    <singleConstraint>eventType IN (Group@PH_SYS_EVENT_NetIntfShutdown) AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network)</singleConstraint>
                </eventFilters>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332254" ownerId="500150" lastModified="1300496043894" id="53332254" custId="0" creationTime="1300496043894">
                    <groupBy>hostIpAddr,intfName</groupBy>
                    <index>1</index>
                    <name>IntfUpNetDev</name>
                    <singleConstraint>eventType IN (Group@PH_SYS_EVENT_NetIntfRestart) AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network)</singleConstraint>
                </eventFilters>
                <filterOperators>
                    <rank>0</rank>
                    <type>NOT_FOLLOWED_BY</type>
                </filterOperators>
                <globalConstraint>IntfDownNetDev.hostIpAddr = IntfUpNetDev.hostIpAddr, IntfDownNetDev.intfName = IntfUpNetDev.intfName 
       </globalConstraint>
                <name>Network Device Interface Staying Down</name>
                <rawFOString>NOT_FOLLOWED_BY:0</rawFOString>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332253</eventFilters>
                <eventFilters>EventFilter@53332254</eventFilters>
                <incidentAttrs>
        hostIpAddr = IntfDownNetDev.hostIpAddr,intfName = IntfDownNetDev.intfName
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_DOWN_INTF_NET</incidentType>
                <triggerEventAttrList> phRecvTime,reptDevIpAddr,hostIpAddr,intfName,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_11" entityVersion="5" xmlId="Rule$PH_Rule_Avail_11" lastModified="1300496044037" id="3136375" custId="0" creationTime="1288817657843">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects that a network interface of a server stays down - that is didn't come up within 5 minutes of going down</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332257" ownerId="500150" lastModified="1300496044034" id="53332257" custId="0" creationTime="1300496044034">
                    <groupBy>hostIpAddr,intfName</groupBy>
                    <index>0</index>
                    <name>IntfDownSrv</name>
                    <singleConstraint>eventType IN (Group@PH_SYS_EVENT_NetIntfShutdown) AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server)</singleConstraint>
                </eventFilters>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332258" ownerId="500150" lastModified="1300496044034" id="53332258" custId="0" creationTime="1300496044034">
                    <groupBy>hostIpAddr,intfName</groupBy>
                    <index>1</index>
                    <name>IntfUpSrv</name>
                    <singleConstraint>eventType IN (Group@PH_SYS_EVENT_NetIntfRestart) AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server)</singleConstraint>
                </eventFilters>
                <filterOperators>
                    <rank>0</rank>
                    <type>NOT_FOLLOWED_BY</type>
                </filterOperators>
                <globalConstraint>IntfDownSrv.hostIpAddr = IntfUpSrv.hostIpAddr, IntfDownSrv.intfName = IntfUpSrv.intfName 
       </globalConstraint>
                <name>Server Network Interface Staying Down</name>
                <rawFOString>NOT_FOLLOWED_BY:0</rawFOString>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332257</eventFilters>
                <eventFilters>EventFilter@53332258</eventFilters>
                <incidentAttrs>
        hostIpAddr = IntfDownSrv.hostIpAddr, intfName = IntfDownSrv.intfName
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_DOWN_INTF_SERVER</incidentType>
                <triggerEventAttrList> phRecvTime,reptDevIpAddr,hostIpAddr,intfName,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_12" entityVersion="6" xmlId="Rule$PH_Rule_Avail_12" lastModified="1300496044168" id="3136376" custId="0" creationTime="1288817657933">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects that a network interface of a network device is flapping - that is, coming up and down more than 3 times in 15 minutes. This may indicate hardware issues.</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332259" ownerId="500150" lastModified="1300496044166" id="53332259" custId="0" creationTime="1300496044166">
                    <groupBy>hostIpAddr,intfName</groupBy>
                    <groupConstraint>COUNT(*) &gt;= 3</groupConstraint>
                    <index>0</index>
                    <name>IntfDownNetDev</name>
                    <singleConstraint>eventType IN (Group@PH_SYS_EVENT_NetIntfShutdown) AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network)</singleConstraint>
                </eventFilters>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332260" ownerId="500150" lastModified="1300496044166" id="53332260" custId="0" creationTime="1300496044166">
                    <groupBy>hostIpAddr,intfName</groupBy>
                    <groupConstraint>COUNT(*) &gt;= 3</groupConstraint>
                    <index>1</index>
                    <name>IntfUpNetDev</name>
                    <singleConstraint>eventType IN (Group@PH_SYS_EVENT_NetIntfRestart) AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network)</singleConstraint>
                </eventFilters>
                <filterOperators>
                    <rank>0</rank>
                    <type>AND</type>
                </filterOperators>
                <globalConstraint>IntfDownNetDev.hostIpAddr = IntfUpNetDev.hostIpAddr, IntfDownNetDev.intfName = IntfUpNetDev.intfName 
       </globalConstraint>
                <name>Network Device Interface Flapping</name>
                <rawFOString>AND:0</rawFOString>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332259</eventFilters>
                <eventFilters>EventFilter@53332260</eventFilters>
                <incidentAttrs>
        hostIpAddr = IntfDownNetDev.hostIpAddr, intfName = IntfDownNetDev.intfName
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_INTF_FLAP_NET_DEV</incidentType>
                <triggerEventAttrList> phRecvTime,reptDevIpAddr,hostIpAddr,intfName,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_13" entityVersion="3" xmlId="Rule$PH_Rule_Avail_13" lastModified="1300496044282" id="3136377" custId="0" creationTime="1288817658018">
                <activatedTime>1300496044280</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects that a network interface of a server is flapping - that is, coming up and down more than 3 times in 15 minutes. This may indicate hardware issues.</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332261" ownerId="500150" lastModified="1300496044280" id="53332261" custId="0" creationTime="1300496044280">
                    <groupBy>hostIpAddr,intfName</groupBy>
                    <groupConstraint>COUNT(*) &gt;= 3</groupConstraint>
                    <index>0</index>
                    <name>IntfDownSrv</name>
                    <singleConstraint>eventType IN (Group@PH_SYS_EVENT_NetIntfShutdown) AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server)</singleConstraint>
                </eventFilters>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332262" ownerId="500150" lastModified="1300496044280" id="53332262" custId="0" creationTime="1300496044280">
                    <groupBy>hostIpAddr,intfName</groupBy>
                    <groupConstraint>COUNT(*) &gt;= 3</groupConstraint>
                    <index>1</index>
                    <name>IntfUpSrv</name>
                    <singleConstraint>eventType IN (Group@PH_SYS_EVENT_NetIntfRestart) AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server)</singleConstraint>
                </eventFilters>
                <filterOperators>
                    <rank>0</rank>
                    <type>AND</type>
                </filterOperators>
                <globalConstraint>IntfDownSrv.hostIpAddr = IntfUpSrv.hostIpAddr, IntfDownSrv.intfName = IntfUpSrv.intfName 
       </globalConstraint>
                <name>Server Network Interface Flapping</name>
                <rawFOString>AND:0</rawFOString>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332261</eventFilters>
                <eventFilters>EventFilter@53332262</eventFilters>
                <incidentAttrs>
        hostIpAddr = IntfDownSrv.hostIpAddr, intfName = IntfDownSrv.intfName
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_INTF_FLAP_SERVER</incidentType>
                <triggerEventAttrList> phRecvTime,reptDevIpAddr,hostIpAddr,intfName,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_14" entityVersion="3" xmlId="Rule$PH_Rule_Avail_14" lastModified="1300496044406" id="3136378" custId="0" creationTime="1288817658094">
                <activatedTime>1300496044405</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects half/Full duplex mismatch on an network interface. This indicates configuration issues.</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332263" ownerId="500150" lastModified="1300496044404" id="53332263" custId="0" creationTime="1300496044404">
                    <groupBy>reptDevIpAddr,srcIntfName,destName,destIntfName</groupBy>
                    <groupConstraint>COUNT(*) &gt; 5</groupConstraint>
                    <index>0</index>
                    <name>IntfDuplexMismatch</name>
                    <singleConstraint>eventType = "IOS-CDP-DUPLEX_MISMATCH" AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_Network)</singleConstraint>
                </eventFilters>
                <name>Network Interface Duplex Mismatch</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332263</eventFilters>
                <incidentAttrs>
        srcIpAddr = IntfDuplexMismatch.reptDevIpAddr,srcIntfName = IntfDuplexMismatch.srcIntfName,destName = IntfDuplexMismatch.destName,destIntfName = IntfDuplexMismatch.destIntfName	
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_INTF_DUPLEX_MISMATCH</incidentType>
                <triggerEventAttrList> phRecvTime,reptDevIpAddr,srcIntfName,destName,destIntfName,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_No_Service_Response" entityVersion="7" xmlId="Rule$PH_Rule_No_Service_Response" lastModified="1300496044556" id="3136379" custId="0" creationTime="1288817658168">
                <activatedTime>1300496044554</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects a service suddenly went down from up state and is no longer responding to synthetic transaction monitoring probes.</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332264" ownerId="500150" lastModified="1300496044554" id="53332264" custId="0" creationTime="1300496044554">
                    <groupBy>hostName,hostIpAddr,appPort,endUserMonitorName</groupBy>
                    <groupConstraint>COUNT(*) &gt;= 2</groupConstraint>
                    <index>0</index>
                    <name>AppDown</name>
                    <singleConstraint>eventType = "PH_DEV_MON_EUM_FAIL"</singleConstraint>
                </eventFilters>
                <name>Service Down - No Response to STM</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332264</eventFilters>
                <incidentAttrs>
        hostName=AppDown.hostName,hostIpAddr=AppDown.hostIpAddr,appPort=AppDown.appPort,endUserMonitorName=AppDown.endUserMonitorName
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_NON_RESPONSIVE_SERVICE</incidentType>
                <triggerEventAttrList> phRecvTime,reptDevIpAddr,hostName,hostIpAddr,appGroupName,appPort,endUserMonitorName,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_15" entityVersion="3" xmlId="Rule$PH_Rule_Avail_15" lastModified="1300496044693" id="3136380" custId="0" creationTime="1288817658262">
                <activatedTime>1300496044691</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects that an important server process staying down - that is didn't come up within 5 minutes of going down</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332266" ownerId="500150" lastModified="1300496044691" id="53332266" custId="0" creationTime="1300496044691">
                    <groupBy>hostIpAddr,appName,swProcName</groupBy>
                    <index>0</index>
                    <name>AppDownSrv</name>
                    <singleConstraint>eventType = "PH_DEV_MON_PROC_STOP" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server) AND ((appName CONTAIN "Oracle Database") OR (appName CONTAIN "IBM DB2") OR (appName CONTAIN "Microsoft SQL") OR (appName CONTAIN "MySQL Database") OR (appName CONTAIN "Postgress Database") OR (appName CONTAIN "Sybase Adaptive") OR (appName CONTAIN "Microsoft IIS") OR (appName CONTAIN "Tomcat Appserver") OR (appName CONTAIN "Apache Webserver")OR (appName CONTAIN "MS Exchange") OR (appName CONTAIN "Sendmail") OR (appName CONTAIN "Postfix"))</singleConstraint>
                </eventFilters>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332267" ownerId="500150" lastModified="1300496044691" id="53332267" custId="0" creationTime="1300496044691">
                    <groupBy>hostIpAddr,appName,swProcName</groupBy>
                    <index>1</index>
                    <name>AppUpSrv</name>
                    <singleConstraint>eventType = "PH_DEV_MON_PROC_START" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server) AND ((appName CONTAIN "Oracle Database") OR (appName CONTAIN "IBM DB2") OR (appName CONTAIN "Microsoft SQL") OR (appName CONTAIN "MySQL Database") OR (appName CONTAIN "Postgress Database") OR (appName CONTAIN "Sybase Adaptive") OR (appName CONTAIN "Microsoft IIS") OR (appName CONTAIN "Tomcat Appserver") OR (appName CONTAIN "Apache Webserver")OR (appName CONTAIN "MS Exchange") OR (appName CONTAIN "Sendmail") OR (appName CONTAIN "Postfix"))</singleConstraint>
                </eventFilters>
                <filterOperators>
                    <rank>0</rank>
                    <type>NOT_FOLLOWED_BY</type>
                </filterOperators>
                <globalConstraint>AppDownSrv.hostIpAddr = AppUpSrv.hostIpAddr, AppDownSrv.appName = AppUpSrv.appName 
       </globalConstraint>
                <name>Important Application Stopped</name>
                <rawFOString>NOT_FOLLOWED_BY:0</rawFOString>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332266</eventFilters>
                <eventFilters>EventFilter@53332267</eventFilters>
                <incidentAttrs>
        hostIpAddr = AppDownSrv.hostIpAddr, appName = AppDownSrv.appName, swProcName = AppDownSrv.swProcName
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_IMPORTANT_APP_DOWN</incidentType>
                <triggerEventAttrList> phRecvTime,reptDevIpAddr,hostIpAddr,hostName,appName,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Cont_No_Service_Response" entityVersion="2" xmlId="Rule$PH_Rule_Cont_No_Service_Response" lastModified="1300496044810" id="3136381" custId="0" creationTime="1288817658339">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects a service staying down - that is went from up to down and did not come up and is no longer responding to end user monitoring probes.</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332268" ownerId="500150" lastModified="1300496044807" id="53332268" custId="0" creationTime="1300496044807">
                    <groupBy>hostName,hostIpAddr,appPort,endUserMonitorName</groupBy>
                    <groupConstraint>COUNT(*) &gt;= 1</groupConstraint>
                    <index>0</index>
                    <name>AppDown</name>
                    <singleConstraint>eventType = "PH_DEV_MON_EUM_FAIL"</singleConstraint>
                </eventFilters>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332269" ownerId="500150" lastModified="1300496044808" id="53332269" custId="0" creationTime="1300496044808">
                    <groupBy>hostName,hostIpAddr,appPort,endUserMonitorName</groupBy>
                    <groupConstraint>COUNT(*) &gt;= 1</groupConstraint>
                    <index>1</index>
                    <name>AppStillDown</name>
                    <singleConstraint>eventType = "PH_DEV_MON_EUM_SUCCESS"</singleConstraint>
                </eventFilters>
                <filterOperators>
                    <rank>0</rank>
                    <type>NOT_FOLLOWED_BY</type>
                </filterOperators>
                <globalConstraint>
	 AppStillDown.hostName = AppDown.hostName, AppStillDown.hostIpAddr = AppDown.hostIpAddr, AppStillDown.appPort = AppDown.appPort, AppStillDown.endUserMonitorName = AppDown.endUserMonitorName
       </globalConstraint>
                <name>Service Staying Down - No Response to STM</name>
                <rawFOString>NOT_FOLLOWED_BY:0</rawFOString>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332268</eventFilters>
                <eventFilters>EventFilter@53332269</eventFilters>
                <incidentAttrs>
        hostName=AppDown.hostName,hostIpAddr=AppDown.hostIpAddr,appPort=AppDown.appPort,endUserMonitorName=AppDown.endUserMonitorName
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_NON_RESPONSIVE_SERVICE_CONTINUE</incidentType>
                <triggerEventAttrList> phRecvTime,reptDevIpAddr,hostName,hostIpAddr,appGroupName,appPort,endUserMonitorName,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Degraded_Service_Response" entityVersion="5" xmlId="Rule$PH_Rule_Degraded_Service_Response" lastModified="1300496044947" id="3136382" custId="0" creationTime="1288817658416">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects that the response time of a end user monitored service is greater than a defined threshold (average over 3 samples in 15 minutes is more than 5 seconds)</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332270" ownerId="500150" lastModified="1300496044944" id="53332270" custId="0" creationTime="1300496044944">
                    <groupBy>hostName,hostIpAddr,appPort,endUserMonitorName,endUserMonitorStep</groupBy>
                    <groupConstraint>COUNT(*) &gt;= 3 AND (AVG(appResponseTimeMSec) &gt; 5000)</groupConstraint>
                    <index>0</index>
                    <name>ResponseHigh</name>
                    <singleConstraint>eventType = "PH_DEV_MON_EUM_SUCCESS"</singleConstraint>
                </eventFilters>
                <name>Service Degraded - Slow Response to STM</name>
                <triggerWindow>900</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332270</eventFilters>
                <incidentAttrs>
        hostName=ResponseHigh.hostName,hostIpAddr=ResponseHigh.hostIpAddr,appPort=ResponseHigh.appPort,endUserMonitorName=ResponseHigh.endUserMonitorName,endUserMonitorStep=ResponseHigh.endUserMonitorStep,appResponseTimeMSec=ResponseHigh.AVG(appResponseTimeMSec)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_DEGRADED_SERVICE</incidentType>
                <triggerEventAttrList> phRecvTime,reptDevIpAddr,hostName,hostIpAddr,appGroupName,appName,endUserMonitorName,endUserMonitorStep,appResponseTimeMSec </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_21" entityVersion="5" xmlId="Rule$PH_Rule_Avail_21" lastModified="1300496045080" id="3136383" custId="0" creationTime="1288817658494">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects a network device hardware issue that is of warning criticality.</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332271" ownerId="500150" lastModified="1300496045078" id="53332271" custId="0" creationTime="1300496045078">
                    <groupBy>hostName,hostIpAddr,hwComponentName,hwComponentStatus</groupBy>
                    <groupConstraint>COUNT(*) &gt;= 1</groupConstraint>
                    <index>0</index>
                    <name>HwIssueWarn</name>
                    <singleConstraint>eventType IN (Group@PH_SYS_EVENT_HwProblem) AND eventSeverityCat = "MEDIUM" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network)</singleConstraint>
                </eventFilters>
                <name>Network Device Hardware Warning</name>
                <triggerWindow>900</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332271</eventFilters>
                <incidentAttrs>
        hostName=HwIssueWarn.hostName,hostIpAddr=HwIssueWarn.hostIpAddr,hwComponentName=HwIssueWarn.hwComponentName,hwComponentStatus = HwIssueWarn.hwComponentStatus
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_NET_HW_WARN</incidentType>
                <triggerEventAttrList> phRecvTime,hostName,hostIpAddr,hwStatusCode,hwComponentName,hwComponentStatus,hwFailReason,rawEventMsg</triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="ACTIVATION" naturalId="PH_Rule_Avail_22" entityVersion="8" xmlId="Rule$PH_Rule_Avail_22" ownerId="0" lastModified="1300512985141" id="3136384" custId="0" creationTime="1288817658572">
                <activatedTime>1300496045234</activatedTime>
                <active>false</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects a critical network device hardware alert.</description>
                <eventFilters entityVersion="1" xmlId="EventFilter@53332272" ownerId="500150" lastModified="1300512985146" id="53332272" custId="0" creationTime="1300496045234">
                    <groupBy>hostName,hostIpAddr,hwComponentName,hwComponentStatus</groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>HwIssueCrit</name>
                    <singleConstraint>  eventType IN (Group@PH_SYS_EVENT_HwProblem)  AND  eventSeverityCat = "HIGH"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Network) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Network Device Hardware Critical</name>
                <triggerWindow>900</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332272</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>
        hostName=HwIssueCrit.hostName,hostIpAddr=HwIssueCrit.hostIpAddr,hwComponentName=HwIssueCrit.hwComponentName,hwComponentStatus = HwIssueCrit.hwComponentStatus
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_NET_HW_CRITICAL</incidentType>
                <triggerEventAttrList> phRecvTime,hostName,hostIpAddr,hwStatusCode,hwComponentName,hwComponentStatus,hwFailReason,rawEventMsg</triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="ACTIVATION" naturalId="PH_Rule_Avail_23" entityVersion="14" xmlId="Rule$PH_Rule_Avail_23" ownerId="0" lastModified="1300512790768" id="3136385" custId="0" creationTime="1288817658654">
                <activatedTime>1300496045376</activatedTime>
                <active>false</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects a server hardware issue that is of warning criticality.</description>
                <eventFilters entityVersion="4" xmlId="EventFilter@53332273" ownerId="500150" lastModified="1300512790772" id="53332273" custId="0" creationTime="1300496045376">
                    <groupBy>hostName,hostIpAddr,hwComponentName,hwComponentStatus</groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>HwIssueWarn</name>
                    <singleConstraint>  eventType IN (Group@PH_SYS_EVENT_HwProblem)  AND  eventSeverityCat = "MEDIUM"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Server Hardware Warning</name>
                <triggerWindow>900</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332273</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>
        hostName=HwIssueWarn.hostName,hostIpAddr=HwIssueWarn.hostIpAddr,hwComponentName=HwIssueWarn.hwComponentName,hwComponentStatus = HwIssueWarn.hwComponentStatus
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_SERVER_HW_WARN</incidentType>
                <triggerEventAttrList> phRecvTime,hostName,hostIpAddr,hwStatusCode,hwComponentName,hwComponentStatus,hwFailReason,rawEventMsg</triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="ACTIVATION" naturalId="PH_Rule_Avail_24" entityVersion="7" xmlId="Rule$PH_Rule_Avail_24" ownerId="0" lastModified="1300512767477" id="3136386" custId="0" creationTime="1288817658737">
                <activatedTime>1300496045494</activatedTime>
                <active>false</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects a critical server hardware alert.</description>
                <eventFilters entityVersion="3" xmlId="EventFilter@53332274" ownerId="500150" lastModified="1300512767482" id="53332274" custId="0" creationTime="1300496045494">
                    <groupBy>hostName,hostIpAddr,hwComponentName,hwComponentStatus</groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>HwIssueCrit</name>
                    <singleConstraint>  eventType IN (Group@PH_SYS_EVENT_HwProblem)  AND  eventSeverityCat = "HIGH"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Server Hardware Critical</name>
                <triggerWindow>900</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332274</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>
        hostName=HwIssueCrit.hostName,hostIpAddr=HwIssueCrit.hostIpAddr,hwComponentName=HwIssueCrit.hwComponentName,hwComponentStatus = HwIssueCrit.hwComponentStatus
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_SERVER_HW_CRITICAL</incidentType>
                <triggerEventAttrList> phRecvTime,hostName,hostIpAddr,hwStatusCode,hwComponentName,hwComponentStatus,hwFailReason,rawEventMsg</triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_25" entityVersion="5" xmlId="Rule$PH_Rule_Avail_25" lastModified="1300496045623" id="3136387" custId="0" creationTime="1288817658816">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects a low TCP/UDP port on a server staying down - that is, went from up to down and did not come up in 10 min</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332275" ownerId="500150" lastModified="1300496045621" id="53332275" custId="0" creationTime="1300496045621">
                    <groupBy>hostName,hostIpAddr,serviceName,ipProto,ipPort</groupBy>
                    <groupConstraint>COUNT(*) &gt;= 1</groupConstraint>
                    <index>0</index>
                    <name>PortDown</name>
                    <singleConstraint>eventType = "PH_DEV_MON_PORT_CLOSE" AND ipPort &lt;= 1024 AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server)</singleConstraint>
                </eventFilters>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332276" ownerId="500150" lastModified="1300496045621" id="53332276" custId="0" creationTime="1300496045621">
                    <groupBy>hostName,hostIpAddr,serviceName,ipProto,ipPort</groupBy>
                    <groupConstraint>COUNT(*) &gt;= 1</groupConstraint>
                    <index>1</index>
                    <name>PortStillDown</name>
                    <singleConstraint>eventType = "PH_DEV_MON_PORT_OPEN" AND ipPort &lt;= 1024 AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server)</singleConstraint>
                </eventFilters>
                <filterOperators>
                    <rank>0</rank>
                    <type>NOT_FOLLOWED_BY</type>
                </filterOperators>
                <globalConstraint>
	 PortStillDown.hostName = PortDown.hostName, PortStillDown.hostIpAddr = PortDown.hostIpAddr, PortStillDown.serviceName = PortDown.serviceName, PortStillDown.ipPort = PortDown.ipPort, PortStillDown.ipProto = PortDown.ipProto
       </globalConstraint>
                <name>Server Network Low Port Staying Down</name>
                <rawFOString>NOT_FOLLOWED_BY:0</rawFOString>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332275</eventFilters>
                <eventFilters>EventFilter@53332276</eventFilters>
                <incidentAttrs>
        hostName=PortDown.hostName,hostIpAddr=PortDown.hostIpAddr,serviceName=PortDown.serviceName,ipPort=PortDown.ipPort,ipProto=PortDown.ipProto
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_NETWORK_PORT_STAY_DOWN</incidentType>
                <triggerEventAttrList> phRecvTime,reptDevIpAddr,hostName,hostIpAddr,serviceName,ipProto,ipPort,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_8" entityVersion="3" xmlId="Rule$PH_Rule_Perf_8" lastModified="1300496046962" id="3136388" custId="0" creationTime="1288817659041">
                <activatedTime>1300496046961</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects high CPU usage by a server application on the basis of 3 consecutive measurements in a 15 minute period</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332288" ownerId="500150" lastModified="1300496046961" id="53332288" custId="0" creationTime="1300496046961">
                    <groupBy>hostIpAddr, appName</groupBy>
                    <groupConstraint>AVG(cpuUtil) &gt;= 85 AND COUNT(*) &gt;= 3</groupConstraint>
                    <index>0</index>
                    <name>HighProcessCPU</name>
                    <singleConstraint>eventType = "PH_DEV_MON_PROC_RESOURCE_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server)</singleConstraint>
                </eventFilters>
                <name>High Process CPU: Server</name>
                <triggerWindow>900</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332288</eventFilters>
                <incidentAttrs>
        hostIpAddr = HighProcessCPU.hostIpAddr, appName = HighProcessCPU.appName, cpuUtil = HighProcessCPU.AVG(cpuUtil)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_HIGH_CPU_APPL_SERVER</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,hostIpAddr,appName,cpuUtil,memUtil,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_9" entityVersion="6" xmlId="Rule$PH_Rule_Perf_9" lastModified="1300496047091" id="3136389" custId="0" creationTime="1288817659117">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects high memory usage by a server application on the basis of 3 consecutive measurements in a 15 minute period</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332289" ownerId="500150" lastModified="1300496047090" id="53332289" custId="0" creationTime="1300496047090">
                    <groupBy>hostIpAddr, appName</groupBy>
                    <groupConstraint>AVG(memUtil) &gt;= 80 AND COUNT(*) &gt;= 3</groupConstraint>
                    <index>0</index>
                    <name>HighProcessMemory</name>
                    <singleConstraint>eventType = "PH_DEV_MON_PROC_RESOURCE_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server)</singleConstraint>
                </eventFilters>
                <name>High Process Memory: Server</name>
                <triggerWindow>900</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332289</eventFilters>
                <incidentAttrs>
        hostIpAddr = HighProcessMemory.hostIpAddr, appName = HighProcessMemory.appName, memUtil = HighProcessMemory.AVG(memUtil)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_HIGH_MEM_APPL_SERVER</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,hostIpAddr,appName,cpuUtil,memUtil,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_10" entityVersion="3" xmlId="Rule$PH_Rule_Perf_10" lastModified="1300496047233" id="3136390" custId="0" creationTime="1288817659222">
                <activatedTime>1300496047232</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects the process count at a server to be twice the average</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332290" ownerId="500150" lastModified="1300496047232" id="53332290" custId="0" creationTime="1300496047232">
                    <groupBy>hostIpAddr</groupBy>
                    <groupConstraint>PH_FUNC_DIFF_STAT_AVG_1(AVG(procCount), 2.0) &gt;= 0 AND COUNT(*) &gt;= 3</groupConstraint>
                    <index>0</index>
                    <name>ExcessProcessCount</name>
                    <singleConstraint>eventType = "PH_DEV_MON_SYS_PROC_COUNT"</singleConstraint>
                </eventFilters>
                <name>Server Process Count Anomaly</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332290</eventFilters>
                <incidentAttrs>
        hostIpAddr = ExcessProcessCount.hostIpAddr, procCount = ExcessProcessCount.AVG(procCount)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_STAT_HIGH_PROC_COUNT</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,hostIpAddr,procCount,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_21" entityVersion="2" xmlId="Rule$PH_Rule_Perf_21" lastModified="1300496047373" id="3136391" custId="0" creationTime="1288817659293">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects that the health of a network device is critical and needs immediate attention based average CPU, memory and interface utilization and interface errors - at least one of the measured attributes has crossed the specified HIGH threshold</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332291" ownerId="500150" lastModified="1300496047371" id="53332291" custId="0" creationTime="1300496047371">
                    <groupBy>hostIpAddr,hostName</groupBy>
                    <index>0</index>
                    <name>NetHealthCrit</name>
                    <singleConstraint>eventType IN ("PH_RULE_NET_CPU_CRIT","PH_RULE_NET_MEM_CRIT", "PH_RULE_NET_INTF_UTIL_CRIT","PH_RULE_NET_INTF_ERR_CRIT") AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network)</singleConstraint>
                </eventFilters>
                <name>Network Device Health: Critical</name>
                <triggerWindow>540</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332291</eventFilters>
                <incidentAttrs>
        hostIpAddr = NetHealthCrit.hostIpAddr,hostName = NetHealthCrit.hostName
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_HEALTH_NET_DEV_CRITICAL</incidentType>
                <triggerEventAttrList> phRecvTime,hostIpAddr,hostName, eventType,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_22" entityVersion="2" xmlId="Rule$PH_Rule_Perf_22" lastModified="1300496047512" id="3136392" custId="0" creationTime="1288817659357">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects that the health of a windows server is critical and needs immediate attention based average CPU, memory, disk and interface utilization and interface errors - at least one of the measured attributes has crossed the specified HIGH threshold</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332292" ownerId="500150" lastModified="1300496047511" id="53332292" custId="0" creationTime="1300496047511">
                    <groupBy>hostIpAddr, hostName</groupBy>
                    <index>0</index>
                    <name>WinHealthCrit</name>
                    <singleConstraint>eventType IN ("PH_RULE_SERVER_CPU_CRIT","PH_RULE_SERVER_MEM_CRIT","PH_RULE_SERVER_DISK_SPACE_CRIT", "PH_RULE_SERVER_INTF_UTIL_CRIT","PH_RULE_SERVER_INTF_ERR_CRIT") AND hostIpAddr IN (Group@PH_SYS_DEVICE_WINDOWS_SERVER)</singleConstraint>
                </eventFilters>
                <name>Windows Server Health: Critical</name>
                <triggerWindow>540</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332292</eventFilters>
                <incidentAttrs>
        hostIpAddr = WinHealthCrit.hostIpAddr, hostName = WinHealthCrit.hostName
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_HEALTH_WIN_SERVER_CRITICAL</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_24" entityVersion="2" xmlId="Rule$PH_Rule_Perf_24" lastModified="1300496047638" id="3136393" custId="0" creationTime="1288817659422">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects that the health of a unix server is critical and needs immediate attention based average CPU, memory, disk and interface utilization and interface errors - at least one of the measured attributes has crossed the specified HIGH threshold</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332293" ownerId="500150" lastModified="1300496047637" id="53332293" custId="0" creationTime="1300496047637">
                    <groupBy>hostIpAddr, hostName</groupBy>
                    <index>0</index>
                    <name>UnixHealthCrit</name>
                    <singleConstraint>eventType IN ("PH_RULE_SERVER_CPU_CRIT","PH_RULE_SERVER_MEM_CRIT","PH_RULE_SERVER_DISK_SPACE_CRIT", "PH_RULE_SERVER_INTF_UTIL_CRIT","PH_RULE_SERVER_INTF_ERR_CRIT") AND hostIpAddr IN (Group@PH_SYS_DEVICE_UNIX_SERVER)</singleConstraint>
                </eventFilters>
                <name>Unix Server Health: Critical</name>
                <triggerWindow>540</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332293</eventFilters>
                <incidentAttrs>
        hostIpAddr = UnixHealthCrit.hostIpAddr, hostName = UnixHealthCrit.hostName
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_HEALTH_UNIX_SERVER_CRITICAL</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,cpuUtil,memUtil,diskUtil,freeDiskMB,diskIOUtil,intfName,inIntfUtil,outIntfUtil,inIntfPktErrPct,outIntfPktErrPct,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_28" entityVersion="2" xmlId="Rule$PH_Rule_Perf_28" lastModified="1300496047794" id="3136394" custId="0" creationTime="1288817659501">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects that the health of a network device need to be watched carefully based average CPU, memory and interface utilization and interface errors- at least one of the measured attributes has crossed the specified LOW threshold but has not yet crossed the specified HIGH threshold</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332294" ownerId="500150" lastModified="1300496047793" id="53332294" custId="0" creationTime="1300496047793">
                    <groupBy>hostIpAddr,hostName</groupBy>
                    <index>0</index>
                    <name>NetHealthWarn</name>
                    <singleConstraint>eventType IN ("PH_RULE_NET_CPU_WARN","PH_RULE_NET_MEM_WARN", "PH_RULE_NET_INTF_UTIL_WARN","PH_RULE_NET_INTF_ERR_WARN") AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network)</singleConstraint>
                </eventFilters>
                <name>Network Device Health: Warning</name>
                <triggerWindow>540</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332294</eventFilters>
                <incidentAttrs>
        hostIpAddr = NetHealthWarn.hostIpAddr, hostName = NetHealthWarn.hostName
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_HEALTH_NET_DEV_WATCH</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,hostIpAddr,hostName,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_29" entityVersion="2" xmlId="Rule$PH_Rule_Perf_29" lastModified="1300496047911" id="3136395" custId="0" creationTime="1288817659577">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects that the health of a windows server need to be watched carefully based average CPU, memory, disk and interface utilization and interface errors- at least one of the measured attributes has crossed the specified LOW threshold but has not yet crossed the specified HIGH threshold</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332295" ownerId="500150" lastModified="1300496047910" id="53332295" custId="0" creationTime="1300496047910">
                    <groupBy>hostIpAddr,hostName</groupBy>
                    <index>0</index>
                    <name>WinHealthWarn</name>
                    <singleConstraint>eventType IN ("PH_RULE_SERVER_CPU_WARN","PH_RULE_SERVER_MEM_WARN","PH_RULE_SERVER_DISK_SPACE_WARN", "PH_RULE_SERVER_INTF_UTIL_WARN","PH_RULE_SERVER_INTF_ERR_WARN") AND hostIpAddr IN (Group@PH_SYS_DEVICE_WINDOWS_SERVER)</singleConstraint>
                </eventFilters>
                <name>Windows Server Health: Warning</name>
                <triggerWindow>540</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332295</eventFilters>
                <incidentAttrs>
        hostIpAddr = WinHealthWarn.hostIpAddr, hostName = WinHealthWarn.hostName
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_HEALTH_WIN_SERVER_WATCH</incidentType>
                <phEventCategory>1</phEventCategory>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,cpuUtil,memUtil,diskUtil,diskIOUtil,intfName,inIntfUtil,outIntfUtil,inIntfPktErrPct,outIntfPktErrPct,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_30" entityVersion="2" xmlId="Rule$PH_Rule_Perf_30" lastModified="1300496048029" id="3136396" custId="0" creationTime="1288817659658">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects that the health of a unix server need to be watched carefully based average CPU, memory, disk and interface utilization and interface errors- at least one of the measured attributes has crossed the specified LOW threshold but has not yet crossed the specified HIGH threshold</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332296" ownerId="500150" lastModified="1300496048027" id="53332296" custId="0" creationTime="1300496048027">
                    <groupBy>hostIpAddr,hostName</groupBy>
                    <index>0</index>
                    <name>UnixHealthWarn</name>
                    <singleConstraint>eventType IN ("PH_RULE_SERVER_CPU_WARN","PH_RULE_SERVER_MEM_WARN","PH_RULE_SERVER_DISK_SPACE_WARN", "PH_RULE_SERVER_INTF_UTIL_WARN","PH_RULE_SERVER_INTF_ERR_WARN") AND hostIpAddr IN (Group@PH_SYS_DEVICE_UNIX_SERVER)</singleConstraint>
                </eventFilters>
                <name>Unix Server Health: Warning</name>
                <triggerWindow>540</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332296</eventFilters>
                <incidentAttrs>
        hostIpAddr = UnixHealthWarn.hostIpAddr, hostName = UnixHealthWarn.hostName
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_HEALTH_UNIX_SERVER_WATCH</incidentType>
                <phEventCategory>1</phEventCategory>
                <triggerEventAttrList> phRecvTime,eventType,hostIpAddr,hostName, rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_31" entityVersion="3" xmlId="Rule$PH_Rule_Perf_31" lastModified="1300496048142" id="3136397" custId="0" creationTime="1288817659742">
                <activatedTime>1300496048141</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects high CPU usage by an application on the basis of 3 consecutive measurements in a 15 minute period</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332297" ownerId="500150" lastModified="1300496048141" id="53332297" custId="0" creationTime="1300496048141">
                    <groupBy>hostIpAddr, appName</groupBy>
                    <groupConstraint>AVG(cpuUtil) &gt;= 85 AND COUNT(*) &gt;= 3</groupConstraint>
                    <index>0</index>
                    <name>NetProcCPUHigh</name>
                    <singleConstraint>eventType = "PH_DEV_MON_PROC_RESOURCE_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network)</singleConstraint>
                </eventFilters>
                <name>High Process CPU: Network Device</name>
                <triggerWindow>900</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332297</eventFilters>
                <incidentAttrs>
        hostIpAddr = NetProcCPUHigh.hostIpAddr, appName = NetProcCPUHigh.appName, cpuUtil = NetProcCPUHigh.AVG(cpuUtil)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_HIGH_CPU_APPL_NET_DEV</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,hostIpAddr,appName,cpuUtil,memUtil,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_32" entityVersion="10" xmlId="Rule$PH_Rule_Perf_32" lastModified="1300496048286" id="3136398" custId="0" creationTime="1288817659830">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects high memory usage by an application on the basis of 3 consecutive measurements in a 15 minute period</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332298" ownerId="500150" lastModified="1300496048285" id="53332298" custId="0" creationTime="1300496048285">
                    <groupBy>hostIpAddr, appName</groupBy>
                    <groupConstraint>AVG(memUtil) &gt;= 80 AND COUNT(*) &gt;= 3</groupConstraint>
                    <index>0</index>
                    <name>NetProcMemHigh</name>
                    <singleConstraint>eventType = "PH_DEV_MON_PROC_RESOURCE_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network)</singleConstraint>
                </eventFilters>
                <name>High Process Memory: Network Device</name>
                <triggerWindow>900</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332298</eventFilters>
                <incidentAttrs>
        hostIpAddr = NetProcMemHigh.hostIpAddr, appName = NetProcMemHigh.appName, memUtil = NetProcMemHigh.AVG(memUtil)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_HIGH_MEM_APPL_NET_DEV</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,hostIpAddr,appName,cpuUtil,memUtil,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_43" entityVersion="2" xmlId="Rule$PH_Rule_Perf_43" lastModified="1300496048442" id="3136399" custId="0" creationTime="1288817659917">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects that the health of a virtual machine need to be watched carefully based on specific VM metrics such as CPU ready percent, memory swapping rates and disk I/O activity- at least one of the measured attributes has crossed the specified LOW threshold but has not yet crossed the specified HIGH threshold</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332299" ownerId="500150" lastModified="1300496048441" id="53332299" custId="0" creationTime="1300496048441">
                    <groupBy>hostName,hostIpAddr,phyMachIpAddr,phyMachName</groupBy>
                    <index>0</index>
                    <name>VMHealthWarn</name>
                    <singleConstraint>eventType IN ("PH_RULE_VM_CPU_WARN", "PH_RULE_VM_MEM_WARN", "PH_RULE_VM_DISKIO_WARN")</singleConstraint>
                </eventFilters>
                <name>Virtual Machine Health: Warning</name>
                <triggerWindow>540</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332299</eventFilters>
                <incidentAttrs>
        hostIpAddr = VMHealthWarn.hostIpAddr,hostName = VMHealthWarn.hostName,phyMachIpAddr = VMHealthWarn.phyMachIpAddr,phyMachName = VMHealthWarn.phyMachName
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_HEALTH_VM_WATCH</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,hostName,hostIpAddr,phyMachIpAddr,phyMachName,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_44" entityVersion="2" xmlId="Rule$PH_Rule_Perf_44" lastModified="1300496048582" id="3136550" custId="0" creationTime="1288817659982">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects that the health of a virtual machine is critical based on specific VM metrics such as CPU ready percent, memory swapping rates and disk I/O activity- at least one of the measured attributes has crossed the specified HIGH threshold</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332350" ownerId="500150" lastModified="1300496048579" id="53332350" custId="0" creationTime="1300496048579">
                    <groupBy>hostName,hostIpAddr,phyMachIpAddr,phyMachName</groupBy>
                    <index>0</index>
                    <name>VMHealthCrit</name>
                    <singleConstraint>eventType IN ("PH_RULE_VM_CPU_CRIT", "PH_RULE_VM_MEM_CRIT", "PH_RULE_VM_DISKIO_CRIT")</singleConstraint>
                </eventFilters>
                <name>Virtual Machine Health: Critical</name>
                <triggerWindow>540</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332350</eventFilters>
                <incidentAttrs>
        hostIpAddr = VMHealthCrit.hostIpAddr,hostName = VMHealthCrit.hostName,phyMachIpAddr = VMHealthCrit.phyMachIpAddr,phyMachName = VMHealthCrit.phyMachName
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_HEALTH_VM_CRITICAL</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,hostName,hostIpAddr,phyMachIpAddr,phyMachName,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_47" entityVersion="2" xmlId="Rule$PH_Rule_Perf_47" lastModified="1300496048703" id="3136551" custId="0" creationTime="1288817660063">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects that the health of an ESX server is to be watched carefully since either the performance of one of the component VMs has entered a watched state or the ESX server itself is showing high resource utilization at the aggregate level.</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332351" ownerId="500150" lastModified="1300496048702" id="53332351" custId="0" creationTime="1300496048702">
                    <groupBy>hostName,hostIpAddr</groupBy>
                    <index>0</index>
                    <name>VMHealthWatch</name>
                    <singleConstraint>eventType IN ("PH_RULE_ESX_CPU_WARN","PH_RULE_ESX_MEM_WARN","PH_RULE_ESX_DISKIO_WARN", "PH_RULE_ESX_INTF_WARN")</singleConstraint>
                </eventFilters>
                <name>ESX Server Health: Warning</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332351</eventFilters>
                <incidentAttrs>
        hostIpAddr = VMHealthWatch.hostIpAddr, hostName = VMHealthWatch.hostName
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_HEALTH_ESX_WATCH</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,hostIpAddr,hostName,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_48" entityVersion="2" xmlId="Rule$PH_Rule_Perf_48" lastModified="1300496048823" id="3136552" custId="0" creationTime="1288817660130">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects that the health of an ESX server is critical since either the performance of one of the component VMs is in critical state or the ESX server itself is showing critical resource utilization at the aggregate level.</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332352" ownerId="500150" lastModified="1300496048821" id="53332352" custId="0" creationTime="1300496048821">
                    <groupBy>hostName,hostIpAddr</groupBy>
                    <index>0</index>
                    <name>VMHealthWatch</name>
                    <singleConstraint>eventType IN ("PH_RULE_ESX_CPU_CRIT","PH_RULE_ESX_MEM_CRIT","PH_RULE_ESX_DISKIO_CRIT", "PH_RULE_ESX_INTF_CRIT")</singleConstraint>
                </eventFilters>
                <name>ESX Server Health: Critical</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332352</eventFilters>
                <incidentAttrs>
        hostName = VMHealthWatch.hostName,hostIpAddr = VMHealthWatch.hostIpAddr
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_HEALTH_ESX_CRITICAL</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_VoIP_1" entityVersion="3" xmlId="Rule$PH_Rule_VoIP_1" lastModified="1300496049027" id="3136553" custId="0" creationTime="1288817660335">
                <activatedTime>1300496049027</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects degraded voip call quality (mos score between 2.2 and 3.5)</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332353" ownerId="500150" lastModified="1300496049026" id="53332353" custId="0" creationTime="1300496049026">
                    <groupBy>srcName,destName,ipSLAProto,codec</groupBy>
                    <groupConstraint>AVG(mosScore) &gt; 2.2 AND AVG(mosScore) &lt;= 3.5 AND COUNT (*) &gt;= 2</groupConstraint>
                    <index>0</index>
                    <name>MediumCallQuality</name>
                    <singleConstraint>eventType = "PH_DEV_MON_IPSLA_VOIP_MET"</singleConstraint>
                </eventFilters>
                <name>Degraded VoIP Call Quality</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332353</eventFilters>
                <incidentAttrs>
        srcName = MediumCallQuality.srcName, destName = MediumCallQuality.destName, ipSLAProto= MediumCallQuality.ipSLAProto, codec = MediumCallQuality.codec  
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_DEGRADED_VOIP_MOS</incidentType>
                <triggerEventAttrList> phRecvTime,srcIpAddr,srcName,destIpAddr,destName,ipSLAProto,codec,mosScore,icpifScore,avgDurationMSec,avgJitterMs,pktLost,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_VoIP_2" entityVersion="3" xmlId="Rule$PH_Rule_VoIP_2" lastModified="1300496049180" id="3136554" custId="0" creationTime="1288817660413">
                <activatedTime>1300496049179</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects poor voip call quality (mos score less than 2.2)</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332354" ownerId="500150" lastModified="1300496049179" id="53332354" custId="0" creationTime="1300496049179">
                    <groupBy>srcName,destName,ipSLAProto,codec</groupBy>
                    <groupConstraint>AVG(mosScore) &lt;= 2.2 AND COUNT (*) &gt;= 2</groupConstraint>
                    <index>0</index>
                    <name>PoorCallQuality</name>
                    <singleConstraint>eventType = "PH_DEV_MON_IPSLA_VOIP_MET"</singleConstraint>
                </eventFilters>
                <name>Poor VoIP Call Quality</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332354</eventFilters>
                <incidentAttrs>
        srcName = PoorCallQuality.srcName, destName = PoorCallQuality.destName, ipSLAProto= PoorCallQuality.ipSLAProto, codec = PoorCallQuality.codec  
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_POOR_VOIP_MOS</incidentType>
                <triggerEventAttrList> phRecvTime,srcIpAddr,srcName,destIpAddr,destName,ipSLAProto,codec,mosScore,icpifScore,avgDurationMSec,avgJitterMs,pktLost,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_1" entityVersion="3" xmlId="Rule$PH_Rule_Flow_1" lastModified="1300496049345" id="3136555" custId="0" creationTime="1288817660586">
                <activatedTime>1300496049345</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects excessive half-open TCP sessions from the same source to many distinct destinations in a short period of time. The threshold is 200 flows within 3 minutes. Scanning may be a precursor to exploits. However, network management and mapping tools often scan the network for discovery purposes and authorized scanners need to be blacklisted. P2P clients also exhibit this behavior when they attempt to establish connections to (non-existent) peers.</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332355" ownerId="500150" lastModified="1300496049345" id="53332355" custId="0" creationTime="1300496049345">
                    <groupBy>srcIpAddr</groupBy>
                    <groupConstraint>COUNT (DISTINCT (destIpAddr)) &gt;= 200</groupConstraint>
                    <index>0</index>
                    <name>HostScanTCP</name>
                    <singleConstraint>eventType = "IOS-NETFLOW-BI" AND srcDestTCPFlags = 2 AND ipProto = 6 AND srcIpAddr NOT IN (Group@PH_SYS_APP_ACCELOPS)</singleConstraint>
                </eventFilters>
                <name>Heavy TCP Host Scan</name>
                <triggerWindow>180</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332355</eventFilters>
                <incidentAttrs>
        srcIpAddr = HostScanTCP.srcIpAddr, incidentCount = HostScanTCP.COUNT (DISTINCT (destIpAddr))
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_HEAVY_TCP_HOST_SCAN</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,srcDestTCPFlags,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_2" entityVersion="3" xmlId="Rule$PH_Rule_Flow_2" lastModified="1300496049464" id="3136556" custId="0" creationTime="1288817660669">
                <activatedTime>1300496049464</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects excessive half-open TCP sessions from the same source to many distinct destinations and on the same destination port in a short period of time. The threshold is 200 flows within 3 minutes. A fixed destination port may indicate that the scanning host is attempting to find hosts on a well known port (with a vulnerability). Scanning may be a precursor to exploits. However, network management and mapping tools often scan the network for discovery purposes and authorized scanners need to be blacklisted. P2P clients also exhibit this behavior when they attempt to establish connections to (non-existent) peers.</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332356" ownerId="500150" lastModified="1300496049464" id="53332356" custId="0" creationTime="1300496049464">
                    <groupBy>srcIpAddr, destIpPort</groupBy>
                    <groupConstraint>COUNT (DISTINCT (destIpAddr)) &gt;= 100</groupConstraint>
                    <index>0</index>
                    <name>HostScanFixedTCPPort</name>
                    <singleConstraint>eventType = "IOS-NETFLOW-BI" AND srcDestTCPFlags = 2 AND ipProto = 6 AND srcIpAddr NOT IN (Group@PH_SYS_APP_ACCELOPS)</singleConstraint>
                </eventFilters>
                <name>Heavy TCP Host Scan On Fixed Port</name>
                <triggerWindow>180</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332356</eventFilters>
                <incidentAttrs>
        srcIpAddr = HostScanFixedTCPPort.srcIpAddr, destIpPort = HostScanFixedTCPPort.destIpPort, incidentCount = HostScanFixedTCPPort.COUNT (DISTINCT (destIpAddr))
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_HEAVY_TCP_HOST_SCAN_FIXED_PORT</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,srcDestTCPFlags,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_3" entityVersion="3" xmlId="Rule$PH_Rule_Flow_3" lastModified="1300496049566" id="3136557" custId="0" creationTime="1288817660739">
                <activatedTime>1300496049566</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects excessive number of UDP connections from the same source to many distinct destinations in a short period of time. The threshold is 200 flows within 3 minutes. Scanning may be a precursor to exploits. However, network management and mapping tools often scan the network for discovery purposes and authorized scanners need to be blacklisted. P2P clients also exhibit this behavior when they attempt to establish connections to (non-existent) peers.</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332357" ownerId="500150" lastModified="1300496049565" id="53332357" custId="0" creationTime="1300496049565">
                    <groupBy>srcIpAddr</groupBy>
                    <groupConstraint>COUNT (DISTINCT (destIpAddr)) &gt;= 200</groupConstraint>
                    <index>0</index>
                    <name>HostScanUDP</name>
                    <singleConstraint>eventType = "IOS-NETFLOW-BI" AND ipProto = 17 AND srcIpAddr NOT IN (Group@PH_SYS_APP_ACCELOPS)</singleConstraint>
                </eventFilters>
                <name>Heavy UDP Host Scan</name>
                <triggerWindow>180</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332357</eventFilters>
                <incidentAttrs>
        srcIpAddr = HostScanUDP.srcIpAddr, incidentCount = HostScanUDP.COUNT (DISTINCT (destIpAddr))
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_HEAVY_UDP_HOST_SCAN</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_4" entityVersion="3" xmlId="Rule$PH_Rule_Flow_4" lastModified="1300496049680" id="3136558" custId="0" creationTime="1288817660820">
                <activatedTime>1300496049680</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects excessive number of UDP connections from the same source to many distinct destinations and on the same destination port in a short period of time. The threshold is 200 flows within 3 minutes. A fixed destination port may indicate that the scanning host is attempting to find hosts on a well known port (with a vulnerability). Scanning may be a precursor to exploits. However, network management and mapping tools often scan the network for discovery purposes and authorized scanners need to be blacklisted. P2P clients also exhibit this behavior when they attempt to establish connections to (non-existent) peers.</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332358" ownerId="500150" lastModified="1300496049679" id="53332358" custId="0" creationTime="1300496049679">
                    <groupBy>srcIpAddr, destIpPort</groupBy>
                    <groupConstraint>COUNT (DISTINCT (destIpAddr)) &gt;= 100</groupConstraint>
                    <index>0</index>
                    <name>HostScanFixedUDPPort</name>
                    <singleConstraint>eventType = "IOS-NETFLOW-BI" AND ipProto = 17 AND srcIpAddr NOT IN (Group@PH_SYS_APP_ACCELOPS)</singleConstraint>
                </eventFilters>
                <name>Heavy UDP Host Scan On Fixed Port</name>
                <triggerWindow>120</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332358</eventFilters>
                <incidentAttrs>
        srcIpAddr = HostScanFixedUDPPort.srcIpAddr, destIpPort = HostScanFixedUDPPort.destIpPort, incidentCount = HostScanFixedUDPPort.COUNT (DISTINCT (destIpAddr))
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_HEAVY_UDP_HOST_SCAN_FIXED_PORT</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_5" entityVersion="5" xmlId="Rule$PH_Rule_Flow_5" lastModified="1300496049794" id="3136559" custId="0" creationTime="1288817660902">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects excessive number of ICMP echo request packets from the same source to many distinct destinations in a short period of time. Nachi worm exploited pings to spread. The threshold is 50 pings within 3 minutes. Scanning may be a precursor to exploits. However, network management and mapping tools often scan the network for discovery purposes and authorized scanners need to be blacklisted.</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332359" ownerId="500150" lastModified="1300496049793" id="53332359" custId="0" creationTime="1300496049793">
                    <groupBy>srcIpAddr</groupBy>
                    <groupConstraint>COUNT (DISTINCT (destIpAddr)) &gt;= 50</groupConstraint>
                    <index>0</index>
                    <name>PingSweep</name>
                    <singleConstraint>eventType = "IOS-NETFLOW-BI" AND ipProto = 1 AND icmpType = 8 AND srcIpAddr NOT IN (Group@PH_SYS_APP_ACCELOPS)</singleConstraint>
                </eventFilters>
                <name>Heavy ICMP Ping sweep</name>
                <triggerWindow>180</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332359</eventFilters>
                <incidentAttrs>
        srcIpAddr = PingSweep.srcIpAddr, incidentCount = PingSweep.COUNT (DISTINCT (destIpAddr))
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_HEAVY_ICMP_PING_SWEEP</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,icmpType,icmpCode,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_6" entityVersion="3" xmlId="Rule$PH_Rule_Flow_6" lastModified="1300496049904" id="3136560" custId="0" creationTime="1288817661001">
                <activatedTime>1300496049903</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects excessive number of half-open TCP connections from many distinct sources to the same destination host and on the same port in a short period of time. This may indicate that the destination server is under some sort of attack.</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332360" ownerId="500150" lastModified="1300496049903" id="53332360" custId="0" creationTime="1300496049903">
                    <groupBy>destIpAddr, destIpPort</groupBy>
                    <groupConstraint>COUNT (DISTINCT (srcIpAddr)) &gt;= 200</groupConstraint>
                    <index>0</index>
                    <name>DDOS_TCP</name>
                    <singleConstraint>eventType = "IOS-NETFLOW-BI" AND srcDestTCPFlags = 2 AND ipProto = 6</singleConstraint>
                </eventFilters>
                <name>TCP DDOS Attack</name>
                <triggerWindow>180</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332360</eventFilters>
                <incidentAttrs>
        destIpAddr = DDOS_TCP.destIpAddr, destIpPort = DDOS_TCP.destIpPort, incidentCount = DDOS_TCP.COUNT (DISTINCT (srcIpAddr))
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_TCP_DDOS_ATTACK</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,srcDestTCPFlags,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_8" entityVersion="3" xmlId="Rule$PH_Rule_Flow_8" lastModified="1300496050019" id="3136561" custId="0" creationTime="1288817661072">
                <activatedTime>1300496050018</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects excessive denies from the same source to many distinct destinations on the same port in a short period of time. The intent could be malicious or some sort of misconfiguration.</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332361" ownerId="500150" lastModified="1300496050018" id="53332361" custId="0" creationTime="1300496050018">
                    <groupBy>srcIpAddr, destIpPort</groupBy>
                    <groupConstraint>COUNT (DISTINCT (destIpAddr)) &gt;= 100</groupConstraint>
                    <index>0</index>
                    <name>ExcessDenySameSrc</name>
                    <singleConstraint>eventType IN (Group@PH_SYS_EVENT_DenyTraffic)</singleConstraint>
                </eventFilters>
                <name>Excessive Denied Connections From Same Src</name>
                <triggerWindow>180</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332361</eventFilters>
                <incidentAttrs>
        srcIpAddr = ExcessDenySameSrc.srcIpAddr, destIpPort = ExcessDenySameSrc.destIpPort, incidentCount = ExcessDenySameSrc.COUNT (DISTINCT (destIpAddr))
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_EXCESS_DENY_SRC</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_9" entityVersion="3" xmlId="Rule$PH_Rule_Flow_9" lastModified="1300496050151" id="3136562" custId="0" creationTime="1288817661146">
                <activatedTime>1300496050150</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects excessive denies from many distinct sources to the same destination on the same destination port</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332362" ownerId="500150" lastModified="1300496050150" id="53332362" custId="0" creationTime="1300496050150">
                    <groupBy>destIpAddr, destIpPort</groupBy>
                    <groupConstraint>COUNT (DISTINCT (srcIpAddr)) &gt;= 100</groupConstraint>
                    <index>0</index>
                    <name>ExcessDenySameDest</name>
                    <singleConstraint>eventType IN (Group@PH_SYS_EVENT_DenyTraffic)</singleConstraint>
                </eventFilters>
                <name>Excessive Denied Connections To Same Destination</name>
                <triggerWindow>180</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332362</eventFilters>
                <incidentAttrs>
        destIpAddr = ExcessDenySameDest.destIpAddr, destIpPort = ExcessDenySameDest.destIpPort, incidentCount = ExcessDenySameDest.COUNT (DISTINCT (srcIpAddr)) 
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_EXCESS_DENY_DEST</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_10" entityVersion="3" xmlId="Rule$PH_Rule_Flow_10" lastModified="1300496050271" id="3136563" custId="0" creationTime="1288817661229">
                <activatedTime>1300496050271</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects large (&gt; 200 bytes/pkt) ICMP echo request and response packets - this is unusual since ICMP packets carry minimal information and are small in size. THis may indicate that some other traffic is being carried over ICMP protocol.</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332363" ownerId="500150" lastModified="1300496050270" id="53332363" custId="0" creationTime="1300496050270">
                    <groupBy>srcIpAddr, destIpAddr</groupBy>
                    <groupConstraint>PH_FUNC_DIV (SUM(sentBytes),SUM(sentPkts)) &gt;= 200</groupConstraint>
                    <index>0</index>
                    <name>LargeICMPEchoReq</name>
                    <singleConstraint>eventType IN ("IOS-NETFLOW-BI", Group@PH_SYS_EVENT_PermitTraffic) AND icmpType = 8</singleConstraint>
                </eventFilters>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332364" ownerId="500150" lastModified="1300496050270" id="53332364" custId="0" creationTime="1300496050270">
                    <groupBy>srcIpAddr, destIpAddr</groupBy>
                    <groupConstraint>PH_FUNC_DIV (SUM(sentBytes),SUM(sentPkts)) &gt;= 200</groupConstraint>
                    <index>1</index>
                    <name>LargeICMPEchoResp</name>
                    <singleConstraint>eventType IN ("IOS-NETFLOW-BI", Group@PH_SYS_EVENT_PermitTraffic) AND icmpType = 0</singleConstraint>
                </eventFilters>
                <filterOperators>
                    <rank>0</rank>
                    <type>AND</type>
                </filterOperators>
                <globalConstraint>LargeICMPEchoReq.srcIpAddr = LargeICMPEchoResp.destIpAddr, LargeICMPEchoReq.destIpAddr = LargeICMPEchoResp.srcIpAddr </globalConstraint>
                <name>Unusually Large ICMP Echo Packets</name>
                <rawFOString>AND:0</rawFOString>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332363</eventFilters>
                <eventFilters>EventFilter@53332364</eventFilters>
                <incidentAttrs>
        srcIpAddr = LargeICMPEchoReq.srcIpAddr, destIpAddr = LargeICMPEchoReq.destIpAddr
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_LARGE_ICMP_ECHO</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,icmpType,icmpCode,sentPkts,recvPkts,sentBytes,recvBytes,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_11" entityVersion="3" xmlId="Rule$PH_Rule_Flow_11" lastModified="1300496050386" id="3136564" custId="0" creationTime="1288817661303">
                <activatedTime>1300496050385</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects a scenario where a host, that is itself not an authorized mail gateway, is unsuccessfully trying to send excessive emails to unauthorized mail gateways. Authorized mail gateways are represented by the "Mail Gateway" group. Such requests would be typically denied because, either the firewall would block SMTP from end hosts and/or mail gateways only receive mail from other authorized mail gateways. This behavior may indicate malware running on an end host that is trying to send spam or privileged information to its own set of mail servers (which may be compromised).</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332365" ownerId="500150" lastModified="1300496050385" id="53332365" custId="0" creationTime="1300496050385">
                    <groupBy>srcIpAddr</groupBy>
                    <groupConstraint>COUNT (DISTINCT (destIpAddr)) &gt;= 5</groupConstraint>
                    <index>0</index>
                    <name>EndUserMailToUnauthMailGw</name>
                    <singleConstraint>destIpPort = 25 AND destIpAddr NOT IN (Group@PH_SYS_DEVICE_SEC_GW, Group@PH_SYS_APP_MAIL_SERVER) AND srcIpAddr NOT IN (Group@PH_SYS_DEVICE_SEC_GW,Group@PH_SYS_APP_MAIL_SERVER) AND srcIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET)</singleConstraint>
                </eventFilters>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332366" ownerId="500150" lastModified="1300496050385" id="53332366" custId="0" creationTime="1300496050385">
                    <groupBy>srcIpAddr</groupBy>
                    <groupConstraint>COUNT (*) &gt;= 30</groupConstraint>
                    <index>1</index>
                    <name>ExcessDeniedMail</name>
                    <singleConstraint>eventType IN (Group@PH_SYS_EVENT_DenyTraffic) AND destIpPort = 25 AND srcIpAddr NOT IN (Group@PH_SYS_DEVICE_SEC_GW,Group@PH_SYS_APP_MAIL_SERVER) AND srcIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET)</singleConstraint>
                </eventFilters>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332367" ownerId="500150" lastModified="1300496050385" id="53332367" custId="0" creationTime="1300496050385">
                    <groupBy>srcIpAddr</groupBy>
                    <groupConstraint>COUNT (*) &gt;= 30</groupConstraint>
                    <index>2</index>
                    <name>ExcessPermitMail</name>
                    <singleConstraint>eventType = "IOS-NETFLOW-BI" AND srcDestTCPFlags = 2 AND ipProto = 6 AND destIpPort = 25 AND srcIpAddr NOT IN (Group@PH_SYS_DEVICE_SEC_GW,Group@PH_SYS_APP_MAIL_SERVER) AND srcIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET)</singleConstraint>
                </eventFilters>
                <filterOperators>
                    <rank>1</rank>
                    <type>AND</type>
                </filterOperators>
                <filterOperators>
                    <rank>0</rank>
                    <type>OR</type>
                </filterOperators>
                <globalConstraint> EndUserMailToUnauthMailGw.srcIpAddr = ExcessDeniedMail.srcIpAddr AND ExcessDeniedMail.srcIpAddr = ExcessPermitMail.srcIpAddr</globalConstraint>
                <name>Excessive Denied End User Mail To Unauthorized Mail Gateways</name>
                <rawFOString>AND:1,OR:0</rawFOString>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332365</eventFilters>
                <eventFilters>EventFilter@53332366</eventFilters>
                <eventFilters>EventFilter@53332367</eventFilters>
                <incidentAttrs>
        srcIpAddr = EndUserMailToUnauthMailGw.srcIpAddr
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_EXCESS_DENY_MAIL</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,srcDestTCPFlags,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_12" entityVersion="6" xmlId="Rule$PH_Rule_Flow_12" lastModified="1300496050514" id="3136565" custId="0" creationTime="1288817661388">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects a scenario where a host, that is itself not a DNS server, is trying to send DNS requests to unauthorized DNS servers. Authorized DNS servers are represented by the "DNS Server" group. In a typical scenario, end hosts always send DNS requests to authrozed DNS servers which in turn communicate to other DNS servers - so this behavior may indicate malware running on the end host.</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332368" ownerId="500150" lastModified="1300496050513" id="53332368" custId="0" creationTime="1300496050513">
                    <groupBy>srcIpAddr</groupBy>
                    <groupConstraint>COUNT (DISTINCT (destIpAddr)) &gt;= 10</groupConstraint>
                    <index>0</index>
                    <name>UnauthDNS</name>
                    <singleConstraint>destIpPort = 53 AND destIpAddr NOT IN (Group@PH_SYS_APP_DNS_SERVER) AND srcIpAddr NOT IN (Group@PH_SYS_APP_DNS_SERVER,Group@PH_SYS_APP_ACCELOPS) AND srcIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET)</singleConstraint>
                </eventFilters>
                <name>End User DNS Queries to Unauthorized DNS Servers</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332368</eventFilters>
                <incidentAttrs>
        srcIpAddr = UnauthDNS.srcIpAddr, incidentCount = UnauthDNS.COUNT (DISTINCT (destIpAddr))
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_UNAUTH_DNS_QUERY</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_13" entityVersion="3" xmlId="Rule$PH_Rule_Flow_13" lastModified="1300496050638" id="3136566" custId="0" creationTime="1288817661474">
                <activatedTime>1300496050636</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects a scenario where a host, that is itself not an DNS server, is sending excessive DNS requests. Authorized DNS servers are represented by the "DNS Server" group. In a typical scenario, the frequency of end host DNS requests is not high unless, there is a script running - this might indicate the presence of malware on the end host.</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332369" ownerId="500150" lastModified="1300496050636" id="53332369" custId="0" creationTime="1300496050636">
                    <groupBy>srcIpAddr</groupBy>
                    <groupConstraint>COUNT (*) &gt;= 500</groupConstraint>
                    <index>0</index>
                    <name>ExcessiveDNSFromFlow</name>
                    <singleConstraint>destIpPort = 53 AND srcIpAddr NOT IN (Group@PH_SYS_APP_DNS_SERVER) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_FIREWALL,Group@PH_SYS_DEVICE_ROUTER_SWITCH) AND srcIpAddr NOT IN (Group@PH_SYS_APP_ACCELOPS) AND srcIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET)</singleConstraint>
                </eventFilters>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332370" ownerId="500150" lastModified="1300496050636" id="53332370" custId="0" creationTime="1300496050636">
                    <groupBy>srcIpAddr</groupBy>
                    <groupConstraint>COUNT (DISTINCT(destName)) &gt;= 200</groupConstraint>
                    <index>1</index>
                    <name>ExcessiveDNSFromServer</name>
                    <singleConstraint>srcIpAddr NOT IN (Group@PH_SYS_APP_DNS_SERVER) AND reptDevIpAddr IN (Group@PH_SYS_APP_DNS_SERVER) AND (eventType CONTAIN "BIND_DNS" OR eventType CONTAIN "MS_DNS") AND srcIpAddr NOT IN (Group@PH_SYS_APP_ACCELOPS) AND srcIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET)</singleConstraint>
                </eventFilters>
                <filterOperators>
                    <rank>0</rank>
                    <type>OR</type>
                </filterOperators>
                <globalConstraint>ExcessiveDNSFromFlow.srcIpAddr = ExcessiveDNSFromServer.srcIpAddr</globalConstraint>
                <name>Excessive End User DNS Queries</name>
                <rawFOString>OR:0</rawFOString>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332369</eventFilters>
                <eventFilters>EventFilter@53332370</eventFilters>
                <incidentAttrs>
        srcIpAddr = ExcessiveDNSFromFlow.srcIpAddr, srcIpAddr = ExcessiveDNSFromServer.srcIpAddr, incidentCount = ExcessiveDNSFromFlow.COUNT(*), incidentCount = ExcessiveDNSFromServer.COUNT(DISTINCT(destName))
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_EXCESS_DNS_QUERY</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,destName,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="ACTIVATION" naturalId="PH_Rule_Flow_14" entityVersion="5" xmlId="Rule$PH_Rule_Flow_14" ownerId="0" lastModified="1301593188206" id="3136567" custId="0" creationTime="1288817661564">
                <activatedTime>1300496050777</activatedTime>
                <active>false</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects a scenario where a host, has a very high frequency of denied DNS traffic.</description>
                <eventFilters entityVersion="1" xmlId="EventFilter@53332371" ownerId="500150" lastModified="1301593188216" id="53332371" custId="0" creationTime="1300496050775">
                    <groupBy>srcIpAddr</groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 100 </groupConstraint>
                    <index>0</index>
                    <name>DeniedDNS</name>
                    <singleConstraint>  destIpPort = 53  AND  eventType IN (Group@PH_SYS_EVENT_DenyTraffic) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Excessive Denied DNS Queries</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332371</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>
        srcIpAddr = DeniedDNS.srcIpAddr, incidentCount = DeniedDNS.COUNT (*)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_EXCESS_DENY_DNS_QUERY</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_15" entityVersion="3" xmlId="Rule$PH_Rule_Flow_15" lastModified="1300496050904" id="3136568" custId="0" creationTime="1288817661652">
                <activatedTime>1300496050903</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects bad domain name queries which indicate malware infected end hosts.</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332372" ownerId="500150" lastModified="1300496050903" id="53332372" custId="0" creationTime="1300496050903">
                    <groupBy>srcIpAddr</groupBy>
                    <groupConstraint>COUNT (DISTINCT (destName)) &gt;= 5</groupConstraint>
                    <index>0</index>
                    <name>MalwareDNS</name>
                    <singleConstraint>eventType IN ("BIND_DNS_A_Query","MS_DNS_A_Query","MS_DNS_A_Success","MS_DNS_A_Fail") AND destName IN (Group@PH_SYS_ROOT_MalwareSite)</singleConstraint>
                </eventFilters>
                <name>Excessive Malware Domain Name Queries</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332372</eventFilters>
                <incidentAttrs>
        srcIpAddr = MalwareDNS.srcIpAddr, incidentCount =  MalwareDNS.COUNT(DISTINCT (destName))  
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_BAD_DOMAIN_DNS_QUERY</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,srcIpAddr,destName,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_16" entityVersion="3" xmlId="Rule$PH_Rule_Flow_16" lastModified="1300496051012" id="3136569" custId="0" creationTime="1288817661744">
                <activatedTime>1300496051011</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects an end host meeting at least 3 requirements for suspicious use of DNS requests - this indicates that a bot is likely running on the end host</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332373" ownerId="500150" lastModified="1300496051011" id="53332373" custId="0" creationTime="1300496051011">
                    <groupBy>srcIpAddr</groupBy>
                    <groupConstraint>COUNT (DISTINCT (eventType)) &gt;= 3</groupConstraint>
                    <index>0</index>
                    <name>BotnetSymptom</name>
                    <singleConstraint>eventType IN ("PH_RULE_UNAUTH_DNS_QUERY","PH_RULE_EXCESS_DNS_QUERY","PH_RULE_EXCESS_DENY_DNS_QUERY","PH_RULE_BAD_DOMAIN_DNS_QUERY", "PH_RULE_UNCOMMON_DNS_QUERY")</singleConstraint>
                </eventFilters>
                <name>Suspicious Botnet like End host DNS Behavior</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332373</eventFilters>
                <incidentAttrs>
        srcIpAddr = BotnetSymptom.srcIpAddr 
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_BOTNET_LIKELY</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,srcIpAddr,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="ACTIVATION" naturalId="PH_Rule_Flow_17" entityVersion="5" xmlId="Rule$PH_Rule_Flow_17" ownerId="0" lastModified="1300551614253" id="3136570" custId="0" creationTime="1288817661831">
                <activatedTime>1300496051121</activatedTime>
                <active>false</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects the same host that is not a DNS server, doing an excessive amount of uncommon domain name queries - this indicates the host is likely infected with malware. An end host typically needs to perform only A and PTR queries; any other query inidicates the likely presence of malware.</description>
                <eventFilters entityVersion="1" xmlId="EventFilter@53332374" ownerId="500150" lastModified="1300551614258" id="53332374" custId="0" creationTime="1300496051120">
                    <groupBy>srcIpAddr,eventType</groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 50 </groupConstraint>
                    <index>0</index>
                    <name>UncommonDNS</name>
                    <singleConstraint>  srcIpAddr NOT IN (Group@PH_SYS_APP_DNS_SERVER)  AND  eventType NOT IN ("BIND_DNS_A_Query","BIND_DNS_PTR_Query","MS_DNS_A_Query","MS_DNS_PTR_Query","MS_DNS_A_Success","MS_DNS_A_Fail","MS_DNS_PTR_Success","MS_DNS_PTR_Success","MS_DNS_PTR_Fail")  AND(  eventType CONTAIN "BIND_DNS"  OR  eventType CONTAIN "MS_DNS" )</singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Excessive Uncommon DNS Queries</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332374</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>
        srcIpAddr = UncommonDNS.srcIpAddr, incidentCount =UncommonDNS.COUNT (*)   
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_UNCOMMON_DNS_QUERY</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,srcIpAddr,destName,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_18" entityVersion="8" xmlId="Rule$PH_Rule_Flow_18" lastModified="1300496051233" id="3136571" custId="0" creationTime="1288817661918">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects an usually high frequency of DNS name resolution queries from the same host to the same domain name in a short period of time. This is not expected behavior since, in a typical scenario, the domain name resolution is cached at the end point. Repeated queries indicates that a special DNS client is likely running at the end host that is trying to make use of fast flux techniques to get back many infected hosts behind a crafted domain name.</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332375" ownerId="500150" lastModified="1300496051232" id="53332375" custId="0" creationTime="1300496051232">
                    <groupBy>srcIpAddr, destName</groupBy>
                    <groupConstraint>COUNT (*) &gt;= 100</groupConstraint>
                    <index>0</index>
                    <name>ExcessRepeatDNS</name>
                    <singleConstraint>eventType IN ("BIND_DNS_A_Query","MS_DNS_A_Query","MS_DNS_A_Success","MS_DNS_A_Fail")</singleConstraint>
                </eventFilters>
                <name>Excessive Repeated DNS Queries To Same Domain</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332375</eventFilters>
                <incidentAttrs>
        srcIpAddr = ExcessRepeatDNS.srcIpAddr, destName =ExcessRepeatDNS.destName, incidentCount = ExcessRepeatDNS.COUNT (*)   
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_DNS_QUERY_SAME_DOMAIN</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,srcIpAddr,destName,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_19" entityVersion="3" xmlId="Rule$PH_Rule_Flow_19" lastModified="1300496051343" id="3136572" custId="0" creationTime="1288817661994">
                <activatedTime>1300496051342</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects a scenario where a host, that is itself not an authorized mail gateway, is sending excessive emails (more than 20 emails in 2 minutes). This behavior may indicate malware running on an end host that is trying to send spam or privileged information to its own set of mail servers (which may be compromised).</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332376" ownerId="500150" lastModified="1300496051341" id="53332376" custId="0" creationTime="1300496051341">
                    <groupBy>srcIpAddr</groupBy>
                    <groupConstraint>COUNT(*) &gt;= 20</groupConstraint>
                    <index>0</index>
                    <name>EndUserExcessMail</name>
                    <singleConstraint>destIpPort = 25 AND srcIpAddr NOT IN (Group@PH_SYS_DEVICE_SEC_GW,Group@PH_SYS_APP_MAIL_SERVER) AND srcIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET)</singleConstraint>
                </eventFilters>
                <name>Excessive End User Mail</name>
                <triggerWindow>120</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332376</eventFilters>
                <incidentAttrs>
        srcIpAddr = EndUserExcessMail.srcIpAddr,incidentCount = EndUserExcessMail.COUNT(*)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_EXCESS_END_USER_MAIL</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,srcDestTCPFlags,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_200" entityVersion="3" xmlId="Rule$PH_Rule_Flow_200" lastModified="1300496051495" id="3136573" custId="0" creationTime="1288817662161">
                <activatedTime>1300496051494</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects a host performing a port scan - this involves excessive half open TCP connections from the same source to many distinct ports on a host in a short period of time. The thresholds are at least 20 distinct ports in a 2 minute window</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332377" ownerId="500150" lastModified="1300496051494" id="53332377" custId="0" creationTime="1300496051494">
                    <groupBy>srcIpAddr,destIpAddr</groupBy>
                    <groupConstraint>COUNT (DISTINCT (destIpPort)) &gt;= 20</groupConstraint>
                    <index>0</index>
                    <name>Filter1</name>
                    <singleConstraint>eventType = "IOS-NETFLOW-BI" AND srcDestTCPFlags = 2 AND ipProto = 6 AND srcIpPort &gt;= 1024 AND srcIpAddr NOT IN (Group@PH_SYS_APP_ACCELOPS)</singleConstraint>
                </eventFilters>
                <name>Heavy TCP Port Scan: Single Host</name>
                <triggerWindow>120</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332377</eventFilters>
                <incidentAttrs>
        srcIpAddr = Filter1.srcIpAddr, destIpAddr = Filter1.destIpAddr, incidentCount = Filter1.COUNT (DISTINCT (destIpPort))
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_HEAVY_TCP_PORT_SCAN</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,srcDestTCPFlags,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_201" entityVersion="3" xmlId="Rule$PH_Rule_Flow_201" lastModified="1300496051623" id="3136574" custId="0" creationTime="1288817662229">
                <activatedTime>1300496051622</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects that a source is doing port scans on multiple hosts. The thresholds are port scans on at least 5 hosts in 15 minute window</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332378" ownerId="500150" lastModified="1300496051622" id="53332378" custId="0" creationTime="1300496051622">
                    <groupBy>srcIpAddr</groupBy>
                    <groupConstraint>COUNT(DISTINCT (destIpAddr)) &gt; 30</groupConstraint>
                    <index>0</index>
                    <name>Filter1</name>
                    <singleConstraint>eventType IN ("PH_RULE_HEAVY_TCP_PORT_SCAN")</singleConstraint>
                </eventFilters>
                <name>Heavy TCP Port Scan: Multiple Hosts</name>
                <triggerWindow>900</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332378</eventFilters>
                <incidentAttrs>
        srcIpAddr = Filter1.srcIpAddr, incidentCount = Filter1.COUNT (DISTINCT (destIpAddr))
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_REPEAT_HEAVY_TCP_PORT_SCAN</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,srcIpAddr,destIpAddr</triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_202" entityVersion="3" xmlId="Rule$PH_Rule_Flow_202" lastModified="1300496051738" id="3136575" custId="0" creationTime="1288817662299">
                <activatedTime>1300496051737</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects excessive UDP connections from the same source to many distinct ports on the same destination in a short period of time</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332379" ownerId="500150" lastModified="1300496051737" id="53332379" custId="0" creationTime="1300496051737">
                    <groupBy>srcIpAddr,destIpAddr</groupBy>
                    <groupConstraint>COUNT (DISTINCT (destIpPort)) &gt;= 20</groupConstraint>
                    <index>0</index>
                    <name>Filter1</name>
                    <singleConstraint>eventType = "IOS-NETFLOW-BI" AND ipProto = 17 AND srcIpPort &gt;= 1024 AND srcIpAddr NOT IN (Group@PH_SYS_APP_ACCELOPS)</singleConstraint>
                </eventFilters>
                <name>Heavy UDP Port Scan: Single Host</name>
                <triggerWindow>120</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332379</eventFilters>
                <incidentAttrs>
        srcIpAddr = Filter1.srcIpAddr, destIpAddr = Filter1.destIpAddr, incidentCount = Filter1.COUNT (DISTINCT (destIpPort))
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_HEAVY_UDP_PORT_SCAN</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,srcDestTCPFlags,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_203" entityVersion="3" xmlId="Rule$PH_Rule_Flow_203" lastModified="1300496051855" id="3136576" custId="0" creationTime="1288817662368">
                <activatedTime>1300496051854</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects that a source is doing UDP port scans on multiple hosts. The thresholds are port scans on at least 5 hosts in 15 minute window</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332380" ownerId="500150" lastModified="1300496051854" id="53332380" custId="0" creationTime="1300496051854">
                    <groupBy>srcIpAddr</groupBy>
                    <groupConstraint>COUNT(DISTINCT (destIpAddr)) &gt; 30</groupConstraint>
                    <index>0</index>
                    <name>Filter1</name>
                    <singleConstraint>eventType IN ("PH_RULE_HEAVY_UDP_PORT_SCAN")</singleConstraint>
                </eventFilters>
                <name>Heavy UDP Port Scan: Multiple Hosts</name>
                <triggerWindow>900</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332380</eventFilters>
                <incidentAttrs>
        srcIpAddr = Filter1.srcIpAddr, incidentCount = Filter1.COUNT (DISTINCT (destIpAddr))
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_REPEAT_HEAVY_UDP_PORT_SCAN</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,srcIpAddr,destIpAddr</triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_PH_1" entityVersion="3" xmlId="Rule$PH_Rule_Avail_PH_1" lastModified="1300496053282" id="3136577" custId="0" creationTime="1288817662536">
                <activatedTime>1300496053282</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects the free space of the file system containing the folder /data/eventdb used for storing events is lower than 20GB. Once the free space is lower than 10GB, the system will automatically purge old events until the free space is more than 20GB. If you do not want this automatical purge of old events, please backup old events to a remote location using nfs, cifs or sftp, otherwise, you can disable this rule.</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332390" ownerId="500150" lastModified="1300496053281" id="53332390" custId="0" creationTime="1300496053281">
                    <groupBy>reptDevIpAddr</groupBy>
                    <groupConstraint>COUNT (*) &gt;= 1</groupConstraint>
                    <index>0</index>
                    <name>AOStorageLow</name>
                    <singleConstraint>eventType = "PH_SYSTEM_STORAGE_LOW"</singleConstraint>
                </eventFilters>
                <name>System Warning: Low Storage</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332390</eventFilters>
                <incidentAttrs>
        hostIpAddr = AOStorageLow.reptDevIpAddr
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_ACCELOPS_LOW_STORAGE</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="ACTIVATION" naturalId="PH_Rule_Avail_PH_2" entityVersion="5" xmlId="Rule$PH_Rule_Avail_PH_2" ownerId="0" lastModified="1303511138634" id="3136578" custId="0" creationTime="1288817662606">
                <activatedTime>1300496053390</activatedTime>
                <active>false</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that the system is receiving events at a rate that is higher than the license limit. Events beyond the license limit would be dropped unless the license is upgraded.</description>
                <eventFilters entityVersion="1" xmlId="EventFilter@53332391" ownerId="500150" lastModified="1303511138636" id="53332391" custId="0" creationTime="1300496053390">
                    <groupBy>reptDevIpAddr</groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>AOLicenseExpire</name>
                    <singleConstraint>  eventType = "PH_SYSTEM_EVENT_RATE_EXCEED_LICENSE" </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>System License Warning: High Event Rate</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332391</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = AOLicenseExpire.reptDevIpAddr
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_ACCELOPS_HIGH_EPS</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_PH_3" entityVersion="3" xmlId="Rule$PH_Rule_Avail_PH_3" lastModified="1300496053496" id="3136579" custId="0" creationTime="1288817662678">
                <activatedTime>1300496053496</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects that the number of CMDB configuration items is close to the license limit - additonal configuration items would not be stored unless the license is upgraded.</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332392" ownerId="500150" lastModified="1300496053496" id="53332392" custId="0" creationTime="1300496053496">
                    <groupBy>reptDevIpAddr</groupBy>
                    <groupConstraint>COUNT (*) &gt;= 0</groupConstraint>
                    <index>0</index>
                    <name>AOHighCI</name>
                    <singleConstraint>eventType = "PH_AUDIT_CI_QUOTE_EXCEEDED"</singleConstraint>
                </eventFilters>
                <name>System License Warning: High Config Items</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332392</eventFilters>
                <incidentAttrs>
        hostIpAddr = AOHighCI.reptDevIpAddr
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_ACCELOPS_HIGH_CI</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,customer,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="ACTIVATION" naturalId="PH_Rule_Avail_PH_4" entityVersion="16" xmlId="Rule$PH_Rule_Avail_PH_4" ownerId="0" lastModified="1314114345743" id="3136580" custId="0" creationTime="1288817662754">
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that collector is down.</description>
                <eventFilters entityVersion="2" xmlId="EventFilter@53332393" ownerId="500150" lastModified="1314114345759" id="53332393" custId="0" creationTime="1300496053604">
                    <groupBy>customer,phCollectorName</groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>AOCollectorDown</name>
                    <singleConstraint>  eventType = "PH_COLLECTOR_DOWN" </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>System Collector Down</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332393</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>
        customer = AOCollectorDown.customer, phCollectorName = AOCollectorDown.phCollectorName
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_ACCELOPS_COLLECTOR_DOWN</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,customer,phCollectorName,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_PH_5" entityVersion="3" xmlId="Rule$PH_Rule_Avail_PH_5" lastModified="1300496053731" id="3136581" custId="0" creationTime="1288817662851">
                <activatedTime>1300496053730</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects that system collector is down.</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332395" ownerId="500150" lastModified="1300496053730" id="53332395" custId="0" creationTime="1300496053730">
                    <groupBy>customer,phCollectorName</groupBy>
                    <groupConstraint>COUNT (*) &gt;= 1</groupConstraint>
                    <index>0</index>
                    <name>AOCollectorDown</name>
                    <singleConstraint>eventType = "PH_SAAS_OP_COLLECTOR_DOWN"</singleConstraint>
                </eventFilters>
                <name>SP Operation: System Collector Down</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332395</eventFilters>
                <incidentAttrs>
         customer = AOCollectorDown.customer, phCollectorName = AOCollectorDown.phCollectorName
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_SAAS_OP_ACCELOPS_COLLECTOR_DOWN</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,customer,phCollectorName,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_PH_8" entityVersion="3" xmlId="Rule$PH_Rule_Avail_PH_8" lastModified="1300496053863" id="3136582" custId="0" creationTime="1288817662961">
                <activatedTime>1300496053862</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects that the system discovered more devices than what license allows.</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332397" ownerId="500150" lastModified="1300496053862" id="53332397" custId="0" creationTime="1300496053862">
                    <groupConstraint>COUNT (*) &gt;= 1</groupConstraint>
                    <index>0</index>
                    <name>AOLicenseMaxDevice</name>
                    <singleConstraint>eventType = "PH_MAX_DEVICES_EXCEEDED"</singleConstraint>
                </eventFilters>
                <name>System License Warning: Max Number of Devices Exceeded License</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332397</eventFilters>
                <incidentAttrs></incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_ACCELOPS_MAX_DEVICE_EXCEEDED</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Stat_2" entityVersion="3" xmlId="Rule$PH_Rule_Stat_2" lastModified="1300496054133" id="3136583" custId="0" creationTime="1288817663127">
                <activatedTime>1300496054132</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects traffic anomaly from a source to a fixed port. This means that the traffic pattern from the source on the destination port is statistically anomalous in the following sense: (a) the number of flows from the source on the given port is more than twice the hourly average flow count, (b) total bytes exchanged by the source on the given port is more than twice the hourly average (c) more than 500 flows (with different 5 tuples) over a 10 minute window from the source on the port</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332450" ownerId="500150" lastModified="1300496054132" id="53332450" custId="0" creationTime="1300496054132">
                    <groupBy>srcIpAddr,destIpPort, ipProto</groupBy>
                    <groupConstraint>PH_FUNC_DIFF_STAT_AVG_1(SUM(totFlows), 2.0) &gt;= 0 AND PH_FUNC_DIFF_STAT_AVG_1(SUM(totBytes), 2.0) &gt;= 0 AND SUM(totFlows) &gt;= 600</groupConstraint>
                    <index>0</index>
                    <name>StatHighFlowFromSrc</name>
                    <singleConstraint>eventType = "IOS-NETFLOW-BI" AND (ipProto = 17 OR ipProto = 6) AND srcIpAddr NOT IN (Group@PH_SYS_APP_ACCELOPS)</singleConstraint>
                </eventFilters>
                <name>Traffic Anomaly From Host On Fixed Port</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332450</eventFilters>
                <incidentAttrs>
        srcIpAddr = StatHighFlowFromSrc.srcIpAddr,destIpPort = StatHighFlowFromSrc.destIpPort,totFlows = StatHighFlowFromSrc.SUM(totFlows)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_STAT_HIGH_TRAFFIC_FROM_SRC_FIXED_PORT</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,srcDestTCPFlags,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Stat_3" entityVersion="3" xmlId="Rule$PH_Rule_Stat_3" lastModified="1300496054245" id="3136584" custId="0" creationTime="1288817663196">
                <activatedTime>1300496054244</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects traffic anomaly to a destination on a fixed port. This means that the traffic pattern to the destination on the given port is statistically anomalous in the following sense: (a) the number of flows to the destination on the given port is more than twice the hourly average flow count, (b) total bytes exchanged by the destination on the given port is more than twice the hourly average (c) more than 500 flows (with different 5 tuples) over a 10 minute window to the destination on the port</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332451" ownerId="500150" lastModified="1300496054244" id="53332451" custId="0" creationTime="1300496054244">
                    <groupBy>destIpAddr,destIpPort,ipProto</groupBy>
                    <groupConstraint>PH_FUNC_DIFF_STAT_AVG_1(SUM(totFlows), 2.0) &gt;= 0 AND PH_FUNC_DIFF_STAT_AVG_1(SUM(totBytes), 2.0) &gt;= 0 AND SUM(totFlows) &gt;= 2000</groupConstraint>
                    <index>0</index>
                    <name>StatHighFlowToDest</name>
                    <singleConstraint>eventType = "IOS-NETFLOW-BI" AND (ipProto = 17 OR ipProto = 6) AND destIpAddr NOT IN (Group@PH_SYS_APP_ACCELOPS)</singleConstraint>
                </eventFilters>
                <name>Traffic Anomaly To Host On Fixed Port</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332451</eventFilters>
                <incidentAttrs>
        destIpAddr = StatHighFlowToDest.destIpAddr,destIpPort = StatHighFlowToDest.destIpPort,totFlows = StatHighFlowToDest.SUM(totFlows)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_STAT_HIGH_TRAFFIC_TO_DEST_FIXED_PORT</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,srcDestTCPFlags,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Stat_4" entityVersion="3" xmlId="Rule$PH_Rule_Stat_4" lastModified="1300496054365" id="3136585" custId="0" creationTime="1288817663266">
                <activatedTime>1300496054365</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects traffic anomaly between a source and a destination on a fixed port. This means that the traffic pattern between the source and the destination on the given port is statistically anomalous in the following sense: (a) the number of flows between the source and the destination on the given port is more than twice the hourly average flow count, (b) total bytes exchanged between the source and the destination on the given port is more than twice the hourly average (c) more than 500 flows (with different 5 tuples) over a 10 minute window between the source and the destination on the port</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332452" ownerId="500150" lastModified="1300496054364" id="53332452" custId="0" creationTime="1300496054364">
                    <groupBy>srcIpAddr,destIpAddr,destIpPort,ipProto</groupBy>
                    <groupConstraint>PH_FUNC_DIFF_STAT_AVG_1(SUM(totFlows), 2.0) &gt;= 0 AND PH_FUNC_DIFF_STAT_AVG_1(SUM(totBytes), 2.0) &gt;= 0 AND SUM(totFlows) &gt;= 600</groupConstraint>
                    <index>0</index>
                    <name>StatHighFlowSrcDestPair</name>
                    <singleConstraint>eventType = "IOS-NETFLOW-BI" AND (ipProto = 17 OR ipProto = 6) AND srcIpAddr NOT IN (Group@PH_SYS_APP_ACCELOPS) AND destIpAddr NOT IN (Group@PH_SYS_APP_ACCELOPS)</singleConstraint>
                </eventFilters>
                <name>Traffic Anomaly Between Two Hosts On Fixed Port</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332452</eventFilters>
                <incidentAttrs>
        srcIpAddr = StatHighFlowSrcDestPair.srcIpAddr,destIpAddr = StatHighFlowSrcDestPair.destIpAddr,destIpPort = StatHighFlowSrcDestPair.destIpPort, totFlows = StatHighFlowSrcDestPair.SUM(totFlows)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_STAT_HIGH_TRAFFIC_SRC_DEST_FIXED_PORT</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,srcDestTCPFlags,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Change_1" entityVersion="6" xmlId="Rule$PH_Rule_Change_1" lastModified="1300496054536" id="3136586" custId="0" creationTime="1288817663406">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects that the startup and running configurations of a network device (router or firewall) are different. This is achieved via logging in.</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332453" ownerId="500150" lastModified="1300496054536" id="53332453" custId="0" creationTime="1300496054536">
                    <groupBy>hostIpAddr, hostName, addedItem, deletedItem</groupBy>
                    <groupConstraint>COUNT (*) &gt;= 1</groupConstraint>
                    <index>0</index>
                    <name>StartupRunDelta</name>
                    <singleConstraint>hostIpAddr IN (Group@PH_SYS_DEVICE_ROUTER_SWITCH,Group@PH_SYS_DEVICE_FIREWALL) AND eventType = "PH_DEV_MON_DELTA_CONFIG"</singleConstraint>
                </eventFilters>
                <name>Difference in Running and Startup Config</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332453</eventFilters>
                <incidentAttrs>
        hostIpAddr = StartupRunDelta.hostIpAddr, hostName = StartupRunDelta.hostName, addedItem = StartupRunDelta.addedItem, deletedItem = StartupRunDelta.deletedItem
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_DIFF_STARTUP_RUNNING_CONFIG</incidentType>
                <triggerEventAttrList> phRecvTime,hostName,hostIpAddr,eventType,startUpConfVer,runningConfVer,addedItem, deletedItem </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Change_2" entityVersion="4" xmlId="Rule$PH_Rule_Change_2" lastModified="1300496054647" id="3136587" custId="0" creationTime="1288817663476">
                <activatedTime>1300496054646</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects that the configuration of a network device (router or firewall) has changed. This is achieved via logging in and keeping track of the last change and requires the network devices to forward syslog to the AccelOps appliance.</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332454" ownerId="500150" lastModified="1300496054646" id="53332454" custId="0" creationTime="1300496054646">
                    <groupBy>reptDevIpAddr ,srcIpAddr</groupBy>
                    <index>0</index>
                    <name>login</name>
                    <singleConstraint>eventType = "IOS-SYS-CONFIG_I"  OR  eventType = "ASA-605005" OR eventType = "Foundry-Ironware-Startup-Config-Change"</singleConstraint>
                </eventFilters>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332455" ownerId="500150" lastModified="1300496054646" id="53332455" custId="0" creationTime="1300496054646">
                    <groupBy>hostIpAddr ,hostName ,addedItem ,deletedItem</groupBy>
                    <groupConstraint>COUNT ( * )&gt;= 1</groupConstraint>
                    <index>1</index>
                    <name>delta</name>
                    <singleConstraint>eventType = "PH_DEV_MON_CHANGE_STARTUP_CONFIG"</singleConstraint>
                </eventFilters>
                <filterOperators>
                    <rank>0</rank>
                    <type>FOLLOWED_BY</type>
                </filterOperators>
                <globalConstraint>login.reptDevIpAddr = delta.hostIpAddr</globalConstraint>
                <name>Startup Config Change (with login info)</name>
                <rawFOString>FOLLOWED_BY:0</rawFOString>
                <triggerWindow>1800</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332454</eventFilters>
                <eventFilters>EventFilter@53332455</eventFilters>
                <incidentAttrs>srcIpAddr = login.srcIpAddr, hostIpAddr = delta.hostIpAddr, hostName = delta.hostName, addedItem = delta.addedItem, deletedItem = delta.deletedItem</incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_CHANGE_STARTUP_CONFIG</incidentType>
                <triggerEventAttrList> phRecvTime,hostName,hostIpAddr,eventType,srcIpAddr,oldSVNVersion,newSVNVersion,addedItem, deletedItem </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Change_3" entityVersion="8" xmlId="Rule$PH_Rule_Change_3" lastModified="1300496054749" id="3136588" custId="0" creationTime="1288817663547">
                <active>false</active>
                <custInclusive>true</custInclusive>
                <description>Detects user/group configuration in a domain controller. This rule would trigger on all changes made by any person. To prevent false positives, a restriction on the user attribute should be made by excluding the domain administrators.</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332456" ownerId="500150" lastModified="1300496054748" id="53332456" custId="0" creationTime="1300496054748">
                    <groupBy>reptDevIpAddr,user,computer,domain,targetUser,targetDomain</groupBy>
                    <groupConstraint>COUNT(*) &gt;= 1</groupConstraint>
                    <index>0</index>
                    <name>DCUserGrpChange</name>
                    <singleConstraint>reptDevIpAddr IN (Group@PH_SYS_APP_DOMAIN_CONTROLLER)  AND  eventType IN ( Group@PH_SYS_EVENT_AccountChanged)</singleConstraint>
                </eventFilters>
                <name>Domain Controller User/Group Modification</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332456</eventFilters>
                <incidentAttrs>
        user = DCUserGrpChange.user, computer = DCUserGrpChange.computer, domain = DCUserGrpChange.domain, targetUser = DCUserGrpChange.targetUser, targetDomain = DCUserGrpChange.targetDomain
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_CHANGE_DC_USER_GRP</incidentType>
                <triggerEventAttrList> phRecvTime,reptDevIpAddr,eventType,user,computer,domain,targetUser,targetDomain</triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Change_4" entityVersion="4" xmlId="Rule$PH_Rule_Change_4" lastModified="1300496054851" id="3136589" custId="0" creationTime="1288817663618">
                <activatedTime>1300496054851</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects that the configuration of a network device (router or firewall) has changed. This is achieved via logging in and keeping track of the last change and requires the network device to forward syslog messages to the AccelOps appliance.</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332457" ownerId="500150" lastModified="1300496054850" id="53332457" custId="0" creationTime="1300496054850">
                    <groupBy>reptDevIpAddr ,srcIpAddr</groupBy>
                    <index>0</index>
                    <name>login</name>
                    <singleConstraint>eventType = "IOS-SYS-CONFIG_I"  OR  eventType = "ASA-605005" OR eventType = "Foundry-Ironware-Running-Config-Change"</singleConstraint>
                </eventFilters>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332458" ownerId="500150" lastModified="1300496054850" id="53332458" custId="0" creationTime="1300496054850">
                    <groupBy>hostIpAddr ,hostName ,addedItem ,deletedItem</groupBy>
                    <groupConstraint>COUNT ( * )&gt;= 1</groupConstraint>
                    <index>1</index>
                    <name>delta</name>
                    <singleConstraint>eventType = "PH_DEV_MON_CHANGE_RUN_CONFIG"</singleConstraint>
                </eventFilters>
                <filterOperators>
                    <rank>0</rank>
                    <type>FOLLOWED_BY</type>
                </filterOperators>
                <globalConstraint>login.reptDevIpAddr = delta.hostIpAddr</globalConstraint>
                <name>Running Config Change (with login info)</name>
                <rawFOString>FOLLOWED_BY:0</rawFOString>
                <triggerWindow>1800</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332457</eventFilters>
                <eventFilters>EventFilter@53332458</eventFilters>
                <incidentAttrs>srcIpAddr = login.srcIpAddr, hostIpAddr = delta.hostIpAddr, hostName = delta.hostName, addedItem = delta.addedItem, deletedItem = delta.deletedItem</incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_CHANGE_RUN_CONFIG</incidentType>
                <triggerEventAttrList> phRecvTime,hostName,hostIpAddr,eventType,srcIpAddr,oldSVNVersion,newSVNVersion,addedItem, deletedItem </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Change_5" entityVersion="3" xmlId="Rule$PH_Rule_Change_5" lastModified="1300496054939" id="3136590" custId="0" creationTime="1288817663692">
                <activatedTime>1300496054939</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects that the configuration of a network device (router or firewall) has changed. This is achieved via logging in and keeping track of the last change</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332459" ownerId="500150" lastModified="1300496054938" id="53332459" custId="0" creationTime="1300496054938">
                    <groupBy>hostIpAddr ,hostName ,addedItem ,deletedItem</groupBy>
                    <groupConstraint>COUNT ( * )&gt;= 1</groupConstraint>
                    <index>0</index>
                    <name>delta</name>
                    <singleConstraint>eventType = "PH_DEV_MON_CHANGE_STARTUP_CONFIG"</singleConstraint>
                </eventFilters>
                <name>Startup Config Change</name>
                <triggerWindow>1800</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332459</eventFilters>
                <incidentAttrs>hostIpAddr = delta.hostIpAddr, hostName = delta.hostName, addedItem = delta.addedItem, deletedItem = delta.deletedItem</incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_CHANGE_STARTUP_CONFIG</incidentType>
                <triggerEventAttrList> phRecvTime,hostName,hostIpAddr,eventType,oldSVNVersion,newSVNVersion,addedItem, deletedItem </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Change_6" entityVersion="3" xmlId="Rule$PH_Rule_Change_6" lastModified="1300496055028" id="3136591" custId="0" creationTime="1288817663768">
                <activatedTime>1300496055027</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects that the configuration of a network device (router or firewall) has changed.  This is achieved via logging in and keeping track of the last change</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332460" ownerId="500150" lastModified="1300496055027" id="53332460" custId="0" creationTime="1300496055027">
                    <groupBy>hostIpAddr ,hostName ,addedItem ,deletedItem</groupBy>
                    <groupConstraint>COUNT ( * )&gt;= 1</groupConstraint>
                    <index>0</index>
                    <name>delta</name>
                    <singleConstraint>eventType = "PH_DEV_MON_CHANGE_RUN_CONFIG"</singleConstraint>
                </eventFilters>
                <name>Running Config Change</name>
                <triggerWindow>1800</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332460</eventFilters>
                <incidentAttrs>hostIpAddr = delta.hostIpAddr, hostName = delta.hostName, addedItem = delta.addedItem, deletedItem = delta.deletedItem</incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_CHANGE_RUN_CONFIG</incidentType>
                <triggerEventAttrList> phRecvTime,hostName,hostIpAddr,eventType,oldSVNVersion,newSVNVersion,addedItem, deletedItem </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Change_7" entityVersion="4" xmlId="Rule$PH_Rule_Change_7" lastModified="1300496055131" id="3136592" custId="0" creationTime="1288817663839">
                <activatedTime>1300496055130</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects that a new software has been installed on a server or an existing software has been deleted.</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332461" ownerId="500150" lastModified="1300496055130" id="53332461" custId="0" creationTime="1300496055130">
                    <groupBy>hostIpAddr,hostName,addedItem ,deletedItem</groupBy>
                    <groupConstraint>COUNT ( * )&gt;= 1</groupConstraint>
                    <index>0</index>
                    <name>delta</name>
                    <singleConstraint>eventType = "PH_DEV_MON_CHANGE_INST_SW"</singleConstraint>
                </eventFilters>
                <name>Server Installed Software Change</name>
                <triggerWindow>1800</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332461</eventFilters>
                <incidentAttrs>hostIpAddr = delta.hostIpAddr, hostName = delta.hostName, addedItem = delta.addedItem, deletedItem = delta.deletedItem</incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_CHANGE_INST_SW</incidentType>
                <triggerEventAttrList> phRecvTime,hostName,hostIpAddr,eventType,oldSVNVersion,newSVNVersion,addedItem, deletedItem </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_No_Service_Response__DUP_2005_1289582505056" entityVersion="11" xmlId="Rule$PH_Rule_No_Service_Response__DUP_2005_1289582505056" ownerId="4600602" lastModified="1298071165710" id="5183800" custId="2005" creationTime="1289582505056">
                <collectorId>0</collectorId>
                <activatedTime>1289582511062</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that the GameStop SOAP call was unsuccessful.</description>
                <eventFilters entityVersion="5" xmlId="EventFilter@5182751" ownerId="4600602" lastModified="1298069615767" id="5182751" custId="2005" creationTime="1289582505086">
                    <collectorId>0</collectorId>
                    <groupBy>hostName ,hostIpAddr ,appPort ,endUserMonitorName </groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>AppDown</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_EUM_FAIL"  AND  hostIpAddr = 174.47.135.53 </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Service Down - GameStop Balance Check - Synthetic Transaction</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@5182751</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostName = AppDown.hostName, hostIpAddr = AppDown.hostIpAddr, appPort = AppDown.appPort, endUserMonitorName = AppDown.endUserMonitorName</incidentAttrs>
                <incidentFireFreq>900</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$Service_Down_GameStop_Balance_Check_Synthetic_Transaction</incidentType>
                <triggerEventAttrList>phRecvTime, reptDevIpAddr, hostName, hostIpAddr, appGroupName, appPort, endUserMonitorName, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_SYS_Rule_1289679524237" entityVersion="18" xmlId="Rule$PH_SYS_Rule_1289679524237" ownerId="4975256" lastModified="1290022351344" id="5183801" custId="2005" creationTime="1289679524237">
                <collectorId>0</collectorId>
                <activatedTime>0</activatedTime>
                <active>false</active>
                <category>0</category>
                <custInclusive>false</custInclusive>
                <description></description>
                <eventFilters entityVersion="8" xmlId="EventFilter@5182765" ownerId="4975256" lastModified="1289751843700" id="5182765" custId="2005" creationTime="1289679524237">
                    <collectorId>0</collectorId>
                    <groupBy>rawEventMsg ,eventSeverity ,phRecvTime ,eventName ,hostName </groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>Filter_1</name>
                    <singleConstraint>  eventSeverity &gt;= 0  AND  rawEventMsg CONTAIN "Exception" </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Exception Count</name>
                <triggerWindow>15</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@5182765</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostName = Filter_1.hostName, count = Filter_1.COUNT(*), rawEventMsg = Filter_1.rawEventMsg</incidentAttrs>
                <incidentFireFreq>900</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$Exception_Count</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, reptDevIpAddr, rawEventMsg, hostName</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Flow_13__DUP_2002_1289869827040" entityVersion="4" xmlId="Rule$PH_Rule_Flow_13__DUP_2002_1289869827040" ownerId="4600602" lastModified="1289869863393" id="5183802" custId="2002" creationTime="1289869827040">
                <collectorId>0</collectorId>
                <activatedTime>1289869863392</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects a scenario where a host, that is itself not an DNS server, is sending excessive DNS requests. Authorized DNS servers are represented by the "DNS Server" group. In a typical scenario, the frequency of end host DNS requests is not high unless, there is a script running - this might indicate the presence of malware on the end host.</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@5182786" ownerId="4600602" lastModified="1289869827040" id="5182786" custId="2002" creationTime="1289869827040">
                    <collectorId>0</collectorId>
                    <groupBy>srcIpAddr </groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 500 </groupConstraint>
                    <index>0</index>
                    <name>ExcessiveDNSFromFlow</name>
                    <singleConstraint>  destIpPort = 53  AND  srcIpAddr NOT IN (Group@PH_SYS_APP_DNS_SERVER)  AND  reptDevIpAddr IN (Group@PH_SYS_DEVICE_FIREWALL,Group@PH_SYS_DEVICE_ROUTER_SWITCH)  AND  srcIpAddr NOT IN (Group@PH_SYS_APP_ACCELOPS)  AND  srcIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) </singleConstraint>
                </eventFilters>
                <eventFilters entityVersion="0" xmlId="EventFilter@5182787" ownerId="4600602" lastModified="1289869827040" id="5182787" custId="2002" creationTime="1289869827040">
                    <collectorId>0</collectorId>
                    <groupBy>srcIpAddr </groupBy>
                    <groupConstraint> COUNT (DISTINCT destName )&gt;= 500 </groupConstraint>
                    <index>1</index>
                    <name>ExcessiveDNSFromServer</name>
                    <singleConstraint>  srcIpAddr NOT IN (Group@PH_SYS_APP_DNS_SERVER)  AND  reptDevIpAddr IN (Group@PH_SYS_APP_DNS_SERVER)  AND(  eventType CONTAIN "BIND_DNS"  OR  eventType CONTAIN "MS_DNS" ) AND  srcIpAddr NOT IN (Group@PH_SYS_APP_ACCELOPS)  AND  srcIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) </singleConstraint>
                </eventFilters>
                <filterOperators>
                    <rank>0</rank>
                    <type>OR</type>
                </filterOperators>
                <globalConstraint>ExcessiveDNSFromFlow.srcIpAddr = ExcessiveDNSFromServer.srcIpAddr</globalConstraint>
                <name>Excessive End User DNS Queries (&gt;500)</name>
                <rawFOString>OR:0</rawFOString>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@5182786</eventFilters>
                <eventFilters>EventFilter@5182787</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>
        srcIpAddr = ExcessiveDNSFromFlow.srcIpAddr, srcIpAddr = ExcessiveDNSFromServer.srcIpAddr, incidentCount = ExcessiveDNSFromFlow.COUNT(*), incidentCount = ExcessiveDNSFromServer.COUNT(DISTINCT(destName))
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$Excessive_End_User_DNS_Queries_500_</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,destName,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Avail_15__DUP_2005_1290626455006" entityVersion="16" xmlId="Rule$PH_Rule_Avail_15__DUP_2005_1290626455006" ownerId="4975256" lastModified="1295386281553" id="5183807" custId="2005" creationTime="1290626455006">
                <collectorId>0</collectorId>
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that an important server process staying down - that is didn't come up within 30 seconds of going down.</description>
                <eventFilters entityVersion="6" xmlId="EventFilter@6414575" ownerId="4975256" lastModified="1290626817317" id="6414575" custId="2005" creationTime="1290626455007">
                    <collectorId>0</collectorId>
                    <groupBy>hostIpAddr ,appName ,swProcName </groupBy>
                    <groupConstraint></groupConstraint>
                    <index>0</index>
                    <name>AppDownSrv</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_PROC_STOP"  AND((  hostIpAddr = 10.2.6.28 ) OR(  hostIpAddr = 10.2.6.29 ) OR(  hostIpAddr = 10.2.6.30 ) OR(  hostIpAddr = 10.2.6.31 )) AND  appName CONTAIN "Microsoft IIS" </singleConstraint>
                </eventFilters>
                <eventFilters entityVersion="5" xmlId="EventFilter@6414576" ownerId="4975256" lastModified="1290626817323" id="6414576" custId="2005" creationTime="1290626455007">
                    <collectorId>0</collectorId>
                    <groupBy>hostIpAddr ,appName ,swProcName </groupBy>
                    <groupConstraint></groupConstraint>
                    <index>1</index>
                    <name>AppUpSrv</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_PROC_START"  AND((  hostIpAddr = 10.2.6.28 ) OR(  hostIpAddr = 10.2.6.29 ) OR(  hostIpAddr = 10.2.6.30 ) OR(  hostIpAddr = 10.2.6.31 )) AND  appName CONTAIN "Microsoft IIS" </singleConstraint>
                </eventFilters>
                <filterOperators>
                    <rank>0</rank>
                    <type>NOT_FOLLOWED_BY</type>
                </filterOperators>
                <globalConstraint>AppDownSrv.hostIpAddr = AppUpSrv.hostIpAddr, AppDownSrv.appName = AppUpSrv.appName</globalConstraint>
                <name>GameStop: IIS Web Service Down</name>
                <rawFOString>NOT_FOLLOWED_BY:0</rawFOString>
                <triggerWindow>30</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@6414575</eventFilters>
                <eventFilters>EventFilter@6414576</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostIpAddr = AppDownSrv.hostIpAddr, appName = AppDownSrv.appName, swProcName = AppDownSrv.swProcName</incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$GameStop_IIS_Web_Service_Down</incidentType>
                <triggerEventAttrList>phRecvTime, reptDevIpAddr, hostIpAddr, hostName, appName, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Avail_15__DUP_2005_1293730407664" entityVersion="21" xmlId="Rule$PH_Rule_Avail_15__DUP_2005_1293730407664" ownerId="4975256" lastModified="1294181733450" id="15359351" custId="2005" creationTime="1293730407664">
                <collectorId>0</collectorId>
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that an important server process staying down - that is didn't come up within 60 seconds of going down.</description>
                <eventFilters entityVersion="9" xmlId="EventFilter@13004995" ownerId="4975256" lastModified="1294177607492" id="13004995" custId="2005" creationTime="1293730407666">
                    <collectorId>0</collectorId>
                    <groupBy>hostIpAddr ,appName ,swProcName </groupBy>
                    <groupConstraint></groupConstraint>
                    <index>0</index>
                    <name>AppDownSrv</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_PROC_STOP"  AND  hostIpAddr IN (Group@PH_SYS_Group_Device_1294177300150) </singleConstraint>
                </eventFilters>
                <eventFilters entityVersion="9" xmlId="EventFilter@13004996" ownerId="4975256" lastModified="1294177607499" id="13004996" custId="2005" creationTime="1293730407667">
                    <collectorId>0</collectorId>
                    <groupBy>hostIpAddr ,appName ,swProcName </groupBy>
                    <groupConstraint></groupConstraint>
                    <index>1</index>
                    <name>AppUpSrv</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_PROC_START"  AND  hostIpAddr IN (Group@PH_SYS_Group_Device_1294177300150) </singleConstraint>
                </eventFilters>
                <filterOperators>
                    <rank>0</rank>
                    <type>NOT_FOLLOWED_BY</type>
                </filterOperators>
                <globalConstraint>AppDownSrv.hostIpAddr = AppUpSrv.hostIpAddr</globalConstraint>
                <name>GameStop: Oracle Service Down</name>
                <rawFOString>NOT_FOLLOWED_BY:0</rawFOString>
                <triggerWindow>60</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@13004995</eventFilters>
                <eventFilters>EventFilter@13004996</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostIpAddr = AppDownSrv.hostIpAddr, appName = AppDownSrv.appName, swProcName = AppDownSrv.swProcName</incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$GameStop_Oracle_Service_Down</incidentType>
                <triggerEventAttrList>phRecvTime, reptDevIpAddr, hostIpAddr, hostName, appName, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Avail_15__DUP_2005_1294178938044" entityVersion="7" xmlId="Rule$PH_Rule_Avail_15__DUP_2005_1294178938044" ownerId="4600602" lastModified="1301013703630" id="15359353" custId="2005" creationTime="1294178938045">
                <collectorId>0</collectorId>
                <activatedTime>1294178983402</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that an important server process staying down - that is didn't come up within 5 minutes of going down</description>
                <eventFilters entityVersion="4" xmlId="EventFilter@15367403" ownerId="4600602" lastModified="1301013703636" id="15367403" custId="2005" creationTime="1294178938045">
                    <collectorId>0</collectorId>
                    <groupBy>hostIpAddr ,appName ,swProcName </groupBy>
                    <groupConstraint></groupConstraint>
                    <index>0</index>
                    <name>AppDownSrv</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_PROC_STOP"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server)  AND  appName CONTAIN "Oracle" </singleConstraint>
                </eventFilters>
                <eventFilters entityVersion="4" xmlId="EventFilter@15367404" ownerId="4600602" lastModified="1301013703644" id="15367404" custId="2005" creationTime="1294178938045">
                    <collectorId>0</collectorId>
                    <groupBy>hostIpAddr ,appName ,swProcName </groupBy>
                    <groupConstraint></groupConstraint>
                    <index>1</index>
                    <name>AppUpSrv</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_PROC_START"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server)  AND  appName CONTAIN "Oracle" </singleConstraint>
                </eventFilters>
                <filterOperators>
                    <rank>0</rank>
                    <type>NOT_FOLLOWED_BY</type>
                </filterOperators>
                <globalConstraint>AppDownSrv.hostIpAddr = AppUpSrv.hostIpAddr, AppDownSrv.appName = AppUpSrv.appName</globalConstraint>
                <name>Important Application Stopped - Oracle Services</name>
                <rawFOString>NOT_FOLLOWED_BY:0</rawFOString>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@15367403</eventFilters>
                <eventFilters>EventFilter@15367404</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = AppDownSrv.hostIpAddr, appName = AppDownSrv.appName, swProcName = AppDownSrv.swProcName
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$Important_Application_Stopped_Oracle_Services</incidentType>
                <triggerEventAttrList> phRecvTime,reptDevIpAddr,hostIpAddr,hostName,appName,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Perf_210__DUP_2028_1295910878970" entityVersion="16" xmlId="Rule$PH_Rule_Perf_210__DUP_2028_1295910878970" ownerId="4600602" lastModified="1300502614817" id="21687950" custId="2028" creationTime="1295910878971">
                <collectorId>0</collectorId>
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that server disk space usage has reached a critical level (greater than 98% and less than 1GB free) based on 2 successive readings in a 10 minute interval</description>
                <eventFilters entityVersion="10" xmlId="EventFilter@21686006" ownerId="4600602" lastModified="1295911046952" id="21686006" custId="2028" creationTime="1295910878972">
                    <collectorId>0</collectorId>
                    <groupBy>hostIpAddr ,hostName ,diskName ,freeDiskMB ,diskUtil </groupBy>
                    <groupConstraint> AVG ( diskUtil )&gt; 98  AND AVG ( freeDiskMB )&lt; 600  AND COUNT ( * )&gt;= 2 </groupConstraint>
                    <index>0</index>
                    <name>ServDiskCrit</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_SYS_DISK_UTIL"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server)  AND  diskName NOT IN ("/boot") </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Server Disk Space Critical (c)</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@21686006</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = ServDiskCrit.hostIpAddr, hostName = ServDiskCrit.hostName, diskName = ServDiskCrit.diskName, diskUtil = ServDiskCrit.AVG(diskUtil)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$Server_Disk_Space_Critical_Greater_than_98_</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,diskName,diskUtil,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Perf_209__DUP_2028_1295911017146" entityVersion="7" xmlId="Rule$PH_Rule_Perf_209__DUP_2028_1295911017146" ownerId="4600602" lastModified="1300502591983" id="21687951" custId="2028" creationTime="1295911017147">
                <collectorId>0</collectorId>
                <activatedTime>1295911063497</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that server disk space usage has reached a warning level (utilization between 90% and 98% and less than 1GB Free) based on 2 successive readings in a 10 minute interval.</description>
                <eventFilters entityVersion="2" xmlId="EventFilter@21686007" ownerId="4600602" lastModified="1295911017149" id="21686007" custId="2028" creationTime="1295911017149">
                    <collectorId>0</collectorId>
                    <groupBy>hostIpAddr ,hostName ,diskName </groupBy>
                    <groupConstraint>( AVG ( diskUtil )&gt;= 90  AND AVG ( diskUtil )&lt;= 98 ) AND AVG ( freeDiskMB )&lt; 1000  AND COUNT ( * )&gt;= 2 </groupConstraint>
                    <index>0</index>
                    <name>ServDiskWarn</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_SYS_DISK_UTIL"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server)  AND  diskName NOT IN ("/boot") </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Server Disk Space Warning (c)</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@21686007</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = ServDiskWarn.hostIpAddr, hostName = ServDiskWarn.hostName, diskName = ServDiskWarn.diskName, diskUtil = ServDiskWarn.AVG(diskUtil)
      </incidentAttrs>
                <incidentFireFreq>21600</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$Server_Disk_Space_Warning_Between_90_and_98_</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,diskName,diskUtil,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Perf_212__DUP_2001_1296182001199" entityVersion="7" xmlId="Rule$PH_Rule_Perf_212__DUP_2001_1296182001199" ownerId="4600602" lastModified="1296182311159" id="21687955" custId="2001" creationTime="1296182001199">
                <collectorId>0</collectorId>
                <activatedTime>1296182026319</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that interface utilization of a network device has reached a critical level (utilization greater than 95%) based on 2 successive readings in a 10 minute interval during business hours.</description>
                <eventFilters entityVersion="2" xmlId="EventFilter@21686043" ownerId="4600602" lastModified="1296182001199" id="21686043" custId="2001" creationTime="1296182001199">
                    <collectorId>0</collectorId>
                    <groupBy>hostIpAddr ,hostName ,intfName </groupBy>
                    <groupConstraint>( AVG ( inIntfUtil )&gt; 95  OR AVG ( outIntfUtil )&gt; 95 ) AND COUNT ( * )&gt;= 2 </groupConstraint>
                    <index>0</index>
                    <name>IntfUtilCrit</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_NET_INTF_UTIL"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Network)  AND  hostIpAddr NOT IN (Group@PH_SYS_DEVICE_NETWORK_IPS)  AND  intfName NOT IN ("lo","Null0") </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Network Intf Util Critical - Business Hours</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@21686043</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = IntfUtilCrit.hostIpAddr, hostName = IntfUtilCrit.hostName, intfName = IntfUtilCrit.intfName, inIntfUtil = IntfUtilCrit.AVG(inIntfUtil),outIntfUtil = IntfUtilCrit.AVG(outIntfUtil) 
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$Network_Intf_Util_Critical_Business_Hours</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,intfName,inIntfUtil,outIntfUtil,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Change_3__DUP_2001_1297299522503" entityVersion="12" xmlId="Rule$PH_Rule_Change_3__DUP_2001_1297299522503" ownerId="4600602" lastModified="1297820443405" id="21687956" custId="2001" creationTime="1297299522503">
                <collectorId>0</collectorId>
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects Users Added or Deleted from Domain Admins</description>
                <eventFilters entityVersion="7" xmlId="EventFilter@23519186" ownerId="4600602" lastModified="1297820443410" id="23519186" custId="2001" creationTime="1297299522503">
                    <collectorId>0</collectorId>
                    <groupBy>reptDevIpAddr ,user ,computer ,domain ,targetUser ,targetDomain ,targetUser ,targetUserGrp ,rawEventMsg </groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>DCUserGrpChange</name>
                    <singleConstraint>  reptDevIpAddr IN (Group@PH_SYS_APP_DOMAIN_CONTROLLER)  AND(  eventType = "Win-Security-632"  OR  eventType = "Win-Security-633" )</singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Users Added or Deleted from Domain Admins</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@23519186</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>user = DCUserGrpChange.user, computer = DCUserGrpChange.computer, domain = DCUserGrpChange.domain, targetUser = DCUserGrpChange.targetUser, targetDomain = DCUserGrpChange.targetDomain, rawEventMsg = DCUserGrpChange.rawEventMsg</incidentAttrs>
                <incidentFireFreq>900</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$Users_Added_or_Deleted_from_Domain_Admins</incidentType>
                <triggerEventAttrList>phRecvTime, reptDevIpAddr, eventType, user, computer, domain, targetUser, targetDomain, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_No_Response_To_Ping_Net__DUP_2005_1298913868000" entityVersion="18" xmlId="Rule$PH_Rule_No_Response_To_Ping_Net__DUP_2005_1298913868000" ownerId="19590364" lastModified="1300502744853" id="34518451" custId="2005" creationTime="1298913868000">
                <collectorId>0</collectorId>
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects if a Network Device experiences packet loss greater than 20%.</description>
                <eventFilters entityVersion="11" xmlId="EventFilter@33650249" ownerId="19590364" lastModified="1299264889474" id="33650249" custId="2005" creationTime="1298913868001">
                    <collectorId>0</collectorId>
                    <groupBy>hostIpAddr </groupBy>
                    <groupConstraint> AVG ( pktLossPct )&gt;= 20  AND COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>Device_Failed_Ping</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_PING_STAT"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Network) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Network Device Down - No Ping Response (c)</name>
                <triggerWindow>90</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@33650249</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostIpAddr = AllPingLossNet.hostIpAddr</incidentAttrs>
                <incidentFireFreq>3600</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$Network_Device_Down_No_Ping_Response_Brierley</incidentType>
                <triggerEventAttrList>phRecvTime, reptDevIpAddr, hostIpAddr, hostName, pktLossPct, reptDevIpAddr, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_No_Response_To_Ping_Server__DUP_2005_1298915328014" entityVersion="13" xmlId="Rule$PH_Rule_No_Response_To_Ping_Server__DUP_2005_1298915328014" ownerId="19590364" lastModified="1300502771312" id="34518452" custId="2005" creationTime="1298915328014">
                <collectorId>0</collectorId>
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects if a Server experiences packet loss greater than 20%.</description>
                <eventFilters entityVersion="8" xmlId="EventFilter@39743551" ownerId="19590364" lastModified="1299264920256" id="39743551" custId="2005" creationTime="1298915328015">
                    <collectorId>0</collectorId>
                    <groupBy>hostIpAddr </groupBy>
                    <groupConstraint> AVG ( pktLossPct )= 20  AND COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>Device_Packet_Loss</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_PING_STAT"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Server Down - No Ping Response (c)</name>
                <triggerWindow>90</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@39743551</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostIpAddr = AllPingLossSrv.hostIpAddr</incidentAttrs>
                <incidentFireFreq>3600</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$Server_Down_No_Ping_Response_Brierley</incidentType>
                <triggerEventAttrList>phRecvTime, reptDevIpAddr, hostIpAddr, hostName, pktLossPct, reptDevIpAddr, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Access_56__DUP_1_1299271171454" entityVersion="18" xmlId="Rule$PH_Rule_Access_56__DUP_1_1299271171454" ownerId="500151" lastModified="1300490220678" id="42365800" custId="0" creationTime="1299271171454">
                <activatedTime>0</activatedTime>
                <active>false</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that no events have been received from a collector in a 10 minute time period.</description>
                <eventFilters entityVersion="13" xmlId="EventFilter@41064616" ownerId="500151" lastModified="1300490220686" id="41064616" custId="1" creationTime="1299271171455">
                    <groupBy>reptDevIpAddr </groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>eventRateEvent</name>
                    <singleConstraint>  eventType = "PH_SYSTEM_EVENTS_PER_SEC"  AND  phEventCategory = 3 </singleConstraint>
                </eventFilters>
                <eventFilters entityVersion="6" xmlId="EventFilter@41064618" ownerId="500151" lastModified="1300490220691" id="41064618" custId="1" creationTime="1299272780859">
                    <groupBy>reptDevIpAddr </groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>1</index>
                    <name>eventRateEvent2</name>
                    <singleConstraint>  phEventCategory = 3  AND  eventType = "PH_SYSTEM_EVENTS_PER_SEC" </singleConstraint>
                </eventFilters>
                <filterOperators>
                    <rank>0</rank>
                    <type>NOT_FOLLOWED_BY</type>
                </filterOperators>
                <globalConstraint>eventRateEvent.reptDevIpAddr = eventRateEvent2.reptDevIpAddr</globalConstraint>
                <name>No Events Received From Collector in Last 10 Minutes.</name>
                <rawFOString>NOT_FOLLOWED_BY:0</rawFOString>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@41064616</eventFilters>
                <eventFilters>EventFilter@41064618</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>reptDevIpAddr = eventRateEvent.reptDevIpAddr</incidentAttrs>
                <incidentFireFreq>3600</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$No_events_from_the_collector_in_10_mins</incidentType>
                <triggerEventAttrList>reptDevIpAddr</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Access_53__DUP_1_1299801146240" entityVersion="12" xmlId="Rule$PH_Rule_Access_53__DUP_1_1299801146240" ownerId="4600602" lastModified="1299870508412" id="42365802" custId="0" creationTime="1299801146240">
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects a problem with NTP Time Syncronization</description>
                <eventFilters entityVersion="7" xmlId="EventFilter@46102878" ownerId="4600602" lastModified="1299870508419" id="46102878" custId="1" creationTime="1299801146240">
                    <groupBy>reptDevIpAddr ,reptDevName </groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>WinNTPError</name>
                    <singleConstraint>  eventType = "Win-System-34"  OR  eventType = "Win-System-38" </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>NTP Synchronization Problem (g)</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@46102878</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>destIpAddr = WinNTPError.reptDevIpAddr, reptDevName = WinNTPError.reptDevName, incidentCount = WinNTPError.COUNT(*)</incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$NTP_Synchronization_Problem</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, reptDevIpAddr, srcIpAddr, user, computer, winLogonType, reptDevIpAddr, rawEventMsg, reptDevName</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Perf_212_B__DUP_1_1299874763372" entityVersion="8" xmlId="Rule$PH_Rule_Perf_212_B__DUP_1_1299874763372" ownerId="4600602" lastModified="1300490000588" id="42365803" custId="0" creationTime="1299874763372">
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that interface utilization of a network IPS device has reached a critical level (utilization greater than 90%) based on 2 successive readings in a 10 minute interval.</description>
                <eventFilters entityVersion="4" xmlId="EventFilter@46102880" ownerId="4600602" lastModified="1300490000595" id="46102880" custId="1" creationTime="1299874763373">
                    <groupBy>hostIpAddr ,hostName ,intfName </groupBy>
                    <groupConstraint>( AVG ( inIntfUtil )&gt; 90  OR AVG ( outIntfUtil )&gt; 90 ) AND COUNT ( * )&gt;= 2 </groupConstraint>
                    <index>0</index>
                    <name>IntfUtilCrit</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_NET_INTF_UTIL"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Network)  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_NETWORK_IPS)  AND  intfName NOT CONTAIN "Loopback"  AND  intfName NOT IN ("lo","Null0") </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Network IPS Intf Util Critical (g)</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@46102880</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = IntfUtilCrit.hostIpAddr, hostName = IntfUtilCrit.hostName, intfName = IntfUtilCrit.intfName, inIntfUtil = IntfUtilCrit.AVG(inIntfUtil),outIntfUtil = IntfUtilCrit.AVG(outIntfUtil) 
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$Network_IPS_Intf_Util_Critical_g_</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,intfName,inIntfUtil,outIntfUtil,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Perf_211_B__DUP_1_1299874825000" entityVersion="8" xmlId="Rule$PH_Rule_Perf_211_B__DUP_1_1299874825000" ownerId="4600602" lastModified="1301588343016" id="42365804" custId="0" creationTime="1299874825000">
                <activatedTime>0</activatedTime>
                <active>false</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that interface utilization of a network IPS device has reached a warning level (utilization between 80% and 90%) based on 2 successive readings in a 10 minute interval.</description>
                <eventFilters entityVersion="3" xmlId="EventFilter@46102881" ownerId="4600602" lastModified="1301588343025" id="46102881" custId="1" creationTime="1299874825007">
                    <groupBy>hostIpAddr ,hostName ,intfName </groupBy>
                    <groupConstraint>(( AVG ( inIntfUtil )&gt;= 80  AND AVG ( inIntfUtil )&lt;= 90 ) OR( AVG ( outIntfUtil )&gt;= 80  AND AVG ( outIntfUtil )&lt;= 90 )) AND COUNT ( * )&gt;= 2 </groupConstraint>
                    <index>0</index>
                    <name>IntfUtilWarn</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_NET_INTF_UTIL"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Network)  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_NETWORK_IPS)  AND  intfName NOT IN ("lo","Null0") </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Network IPS Intf Util Warning (g)</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@46102881</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = IntfUtilWarn.hostIpAddr, hostName = IntfUtilWarn.hostName, intfName = IntfUtilWarn.intfName, inIntfUtil = IntfUtilWarn.AVG(inIntfUtil),outIntfUtil = IntfUtilWarn.AVG(outIntfUtil) 
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$Network_IPS_Intf_Util_Warning_g_</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,intfName,inIntfUtil,outIntfUtil,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_No_Response_To_Ping_Net__DUP_1_1300127254217" entityVersion="18" xmlId="Rule$PH_Rule_No_Response_To_Ping_Net__DUP_1_1300127254217" ownerId="19590364" lastModified="1300489597842" id="49574700" custId="0" creationTime="1300127254217">
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that a device did not respond to ping - 10 out of 10 ping packets were lost - the host could be down or not responding, or there is a network issue.</description>
                <eventFilters entityVersion="12" xmlId="EventFilter@49574750" ownerId="19590364" lastModified="1300489597854" id="49574750" custId="1" creationTime="1300127254220">
                    <groupBy>hostIpAddr </groupBy>
                    <groupConstraint> AVG ( pktLossPct )= 100  AND COUNT ( * )&gt;= 2 </groupConstraint>
                    <index>0</index>
                    <name>AllPingLossNet</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_PING_STAT"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Network) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Network Device Down - No Ping Response (g)</name>
                <triggerWindow>150</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@49574750</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostIpAddr = AllPingLossNet.hostIpAddr</incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$Network_Device_Down_No_Ping_Response_g_</incidentType>
                <triggerEventAttrList>phRecvTime, reptDevIpAddr, hostIpAddr, hostName, pktLossPct, reptDevIpAddr, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_No_Response_To_Ping_Server__DUP_1_1300127265388" entityVersion="11" xmlId="Rule$PH_Rule_No_Response_To_Ping_Server__DUP_1_1300127265388" ownerId="19590364" lastModified="1303506877564" id="49574701" custId="0" creationTime="1300127265388">
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that a device did not respond to ping - 10 out of 10 ping packets were lost - the host could be down or not responding, or there is a network issue.</description>
                <eventFilters entityVersion="7" xmlId="EventFilter@49574752" ownerId="19590364" lastModified="1303506877565" id="49574752" custId="1" creationTime="1300127265400">
                    <groupBy>hostIpAddr </groupBy>
                    <groupConstraint> AVG ( pktLossPct )= 100  AND COUNT ( * )&gt;= 2 </groupConstraint>
                    <index>0</index>
                    <name>AllPingLossSrv</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_PING_STAT"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Server Down - No Ping Response (g)</name>
                <triggerWindow>150</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@49574752</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostIpAddr = AllPingLossSrv.hostIpAddr</incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$Server_Down_No_Ping_Response_g_</incidentType>
                <triggerEventAttrList>phRecvTime, reptDevIpAddr, hostIpAddr, hostName, pktLossPct, reptDevIpAddr, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Flow_12__DUP_1_1300127331705" entityVersion="8" xmlId="Rule$PH_Rule_Flow_12__DUP_1_1300127331705" ownerId="19590364" lastModified="1301593287328" id="49574702" custId="0" creationTime="1300127331706">
                <activatedTime>0</activatedTime>
                <active>false</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects a scenario where a host, that is itself not a DNS server, is trying to send DNS requests to unauthorized DNS servers. Authorized DNS servers are represented by the "DNS Server" group. In a typical scenario, end hosts always send DNS requests to authrozed DNS servers which in turn communicate to other DNS servers - so this behavior may indicate malware running on the end host.</description>
                <eventFilters entityVersion="3" xmlId="EventFilter@49574754" ownerId="19590364" lastModified="1301593287380" id="49574754" custId="1" creationTime="1300127331706">
                    <groupBy>srcIpAddr </groupBy>
                    <groupConstraint> COUNT (DISTINCT destIpAddr )&gt;= 20 </groupConstraint>
                    <index>0</index>
                    <name>UnauthDNS</name>
                    <singleConstraint>  destIpPort = 53  AND  destIpAddr NOT IN (Group@PH_SYS_APP_DNS_SERVER)  AND  srcIpAddr NOT IN (Group@PH_SYS_APP_DNS_SERVER,Group@PH_SYS_APP_ACCELOPS)  AND  srcIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>End User DNS Queries to Unauthorized DNS Servers (g)</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@49574754</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>
        srcIpAddr = UnauthDNS.srcIpAddr, incidentCount = UnauthDNS.COUNT (DISTINCT (destIpAddr))
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$End_User_DNS_Queries_to_Unauthorized_DNS_Servers_g_</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Flow_18__DUP_1_1300127357960" entityVersion="9" xmlId="Rule$PH_Rule_Flow_18__DUP_1_1300127357960" ownerId="19590364" lastModified="1300488260053" id="49574703" custId="0" creationTime="1300127357960">
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects an usually high frequency of DNS name resolution queries from the same host to the same domain name in a short period of time. This is not expected behavior since, in a typical scenario, the domain name resolution is cached at the end point. Repeated queries indicates that a special DNS client is likely running at the end host that is trying to make use of fast flux techniques to get back many infected hosts behind a crafted domain name.</description>
                <eventFilters entityVersion="5" xmlId="EventFilter@49574755" ownerId="19590364" lastModified="1300488260060" id="49574755" custId="1" creationTime="1300127357960">
                    <groupBy>srcIpAddr ,destName </groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 500 </groupConstraint>
                    <index>0</index>
                    <name>ExcessRepeatDNS</name>
                    <singleConstraint>  eventType IN ("BIND_DNS_A_Query","MS_DNS_A_Query") </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Excessive Repeated DNS Queries To Same Domain (g)</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@49574755</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>
        srcIpAddr = ExcessRepeatDNS.srcIpAddr, destName =ExcessRepeatDNS.destName, incidentCount = ExcessRepeatDNS.COUNT (*)   
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$Excessive_Repeated_DNS_Queries_To_Same_Domain_g_</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,srcIpAddr,destName,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Perf_212__DUP_1_1300127411737" entityVersion="8" xmlId="Rule$PH_Rule_Perf_212__DUP_1_1300127411737" ownerId="19590364" lastModified="1300912409487" id="49574704" custId="0" creationTime="1300127411737">
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that interface utilization of a network device has reached a critical level (utilization greater than 90%) based on 12 successive readings in a 60 minute interval. IPS devices are excluded since being a sniffing interface, they have high utilization under normal circumstances.</description>
                <eventFilters entityVersion="4" xmlId="EventFilter@49574756" ownerId="19590364" lastModified="1300912409500" id="49574756" custId="1" creationTime="1300127411737">
                    <groupBy>hostIpAddr ,hostName ,intfName </groupBy>
                    <groupConstraint>( AVG ( inIntfUtil )&gt; 90  OR AVG ( outIntfUtil )&gt; 90 ) AND COUNT ( * )&gt;= 12 </groupConstraint>
                    <index>0</index>
                    <name>IntfUtilCrit</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_NET_INTF_UTIL"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Network)  AND  hostIpAddr NOT IN (Group@PH_SYS_DEVICE_NETWORK_IPS)  AND  intfName NOT IN ("lo","Null0") </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Network Intf Util Critical (g)</name>
                <triggerWindow>3600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@49574756</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = IntfUtilCrit.hostIpAddr, hostName = IntfUtilCrit.hostName, intfName = IntfUtilCrit.intfName, inIntfUtil = IntfUtilCrit.AVG(inIntfUtil),outIntfUtil = IntfUtilCrit.AVG(outIntfUtil) 
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$Network_Intf_Util_Critical_g_</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,intfName,inIntfUtil,outIntfUtil,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Access_5__DUP_1_1300127446714" entityVersion="7" xmlId="Rule$PH_Rule_Access_5__DUP_1_1300127446714" ownerId="19590364" lastModified="1300489025522" id="49574705" custId="0" creationTime="1300127446714">
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects excessive logon failures at a server - 20 consecutive failures in a 5 minute period.</description>
                <eventFilters entityVersion="3" xmlId="EventFilter@49574757" ownerId="19590364" lastModified="1300489025527" id="49574757" custId="1" creationTime="1300127446715">
                    <groupBy>srcIpAddr ,reptDevIpAddr ,user </groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 20 </groupConstraint>
                    <index>0</index>
                    <name>ExcessServerLoginFailure</name>
                    <singleConstraint>  eventType IN (Group@PH_SYS_EVENT_HostLogonFailure)  AND  reptDevIpAddr IN (Group@PH_SYS_DEVICE_Server) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Multiple Logon Failures: Server (g)</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@49574757</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>
        srcIpAddr = ExcessServerLoginFailure.srcIpAddr, destIpAddr = ExcessServerLoginFailure.reptDevIpAddr, user = ExcessServerLoginFailure.user, incidentCount = ExcessServerLoginFailure.COUNT(*)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$Multiple_Logon_Failures_Server_g_</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,user,destIpPort,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Perf_9__DUP_1_1300127483446" entityVersion="6" xmlId="Rule$PH_Rule_Perf_9__DUP_1_1300127483446" ownerId="19590364" lastModified="1300488963433" id="49574706" custId="0" creationTime="1300127483446">
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects high memory usage (greater than 90%) by a server application on the basis of 3 consecutive measurements in a 15 minute period</description>
                <eventFilters entityVersion="2" xmlId="EventFilter@49574758" ownerId="19590364" lastModified="1300488963446" id="49574758" custId="1" creationTime="1300127483449">
                    <groupBy>hostIpAddr ,appName </groupBy>
                    <groupConstraint> AVG ( memUtil )&gt;= 90  AND COUNT ( * )&gt;= 3 </groupConstraint>
                    <index>0</index>
                    <name>HighProcessMemory</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_PROC_RESOURCE_UTIL"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>High Process Memory: Server (g)</name>
                <triggerWindow>900</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@49574758</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = HighProcessMemory.hostIpAddr, appName = HighProcessMemory.appName, memUtil = HighProcessMemory.AVG(memUtil)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$High_Process_Memory_Server_g_</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,hostIpAddr,appName,cpuUtil,memUtil,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Perf_32__DUP_1_1300127505245" entityVersion="6" xmlId="Rule$PH_Rule_Perf_32__DUP_1_1300127505245" ownerId="19590364" lastModified="1300488949191" id="49574707" custId="0" creationTime="1300127505245">
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects high memory usage (greater than 90%) by an application on the basis of 3 consecutive measurements in a 15 minute period</description>
                <eventFilters entityVersion="2" xmlId="EventFilter@49574759" ownerId="19590364" lastModified="1300488949195" id="49574759" custId="1" creationTime="1300127505245">
                    <groupBy>hostIpAddr ,appName </groupBy>
                    <groupConstraint> AVG ( memUtil )&gt;= 90  AND COUNT ( * )&gt;= 3 </groupConstraint>
                    <index>0</index>
                    <name>NetProcMemHigh</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_PROC_RESOURCE_UTIL"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Network) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>High Process Memory: Network Device (g)</name>
                <triggerWindow>900</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@49574759</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = NetProcMemHigh.hostIpAddr, appName = NetProcMemHigh.appName, memUtil = NetProcMemHigh.AVG(memUtil)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$High_Process_Memory_Network_Device_g_</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,hostIpAddr,appName,cpuUtil,memUtil,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Avail_PH_5__DUP_1_1300127530757" entityVersion="3" xmlId="Rule$PH_Rule_Avail_PH_5__DUP_1_1300127530757" ownerId="19590364" lastModified="1300127531322" id="49574708" custId="0" creationTime="1300127530757">
                <active>false</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that system collector is down.</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@49574760" ownerId="19590364" lastModified="1300127530758" id="49574760" custId="1" creationTime="1300127530758">
                    <groupBy>customer</groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>AOCollectorDown</name>
                    <singleConstraint>  eventType = "PH_SAAS_OP_COLLECTOR_DOWN" </singleConstraint>
                </eventFilters>
                <name>SaaS Operation: System Collector Down (g)</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@49574760</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>
         customer = AOCollectorDown.customer
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$SaaS_Operation_System_Collector_Down_g_</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,customer,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Perf_232__DUP_1_1300127584651" entityVersion="7" xmlId="Rule$PH_Rule_Perf_232__DUP_1_1300127584651" ownerId="19590364" lastModified="1300563935309" id="49574710" custId="0" creationTime="1300127584652">
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that ESX network I/O utilization has reached a critical level - average network interface utilization greater than 90% based on 2 successive readings in a 10 minute interval</description>
                <eventFilters entityVersion="3" xmlId="EventFilter@49574764" ownerId="19590364" lastModified="1300563935322" id="49574764" custId="1" creationTime="1300127584653">
                    <groupBy>hostName ,hostIpAddr ,vSwitch </groupBy>
                    <groupConstraint>( AVG ( inIntfUtil )&gt; 90  OR AVG ( outIntfUtil )&gt; 90 ) AND COUNT ( * )&gt;= 2 </groupConstraint>
                    <index>0</index>
                    <name>ESXIntfCrit</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_NET_INTF_UTIL"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_VM_SERVER) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>ESX Network I/O Critical (g)</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@49574764</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = ESXIntfCrit.hostIpAddr, hostName = ESXIntfCrit.hostName, vSwitch = ESXIntfCrit.vSwitch,
        inIntfUtil = ESXIntfCrit.AVG(inIntfUtil), outIntfUtil = ESXIntfCrit.AVG(outIntfUtil)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$ESX_Network_I_O_Critical_g_</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,hostName,hostIpAddr,vSwitch, inIntfUtil, outIntfUtil, rawEventMsg </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Perf_232__DUP_1_1300127594903" entityVersion="9" xmlId="Rule$PH_Rule_Perf_232__DUP_1_1300127594903" ownerId="19590364" lastModified="1301588406343" id="49574711" custId="0" creationTime="1300127594904">
                <activatedTime>0</activatedTime>
                <active>false</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that ESX network I/O utilization has reached a critical level - average network interface utilization greater than 90% based on 2 successive readings in a 10 minute interval</description>
                <eventFilters entityVersion="3" xmlId="EventFilter@49574765" ownerId="19590364" lastModified="1301588406365" id="49574765" custId="1" creationTime="1300127594904">
                    <groupBy>hostName ,hostIpAddr ,vSwitch </groupBy>
                    <groupConstraint>( AVG ( inIntfUtil )&gt; 90  OR AVG ( outIntfUtil )&gt; 90 ) AND COUNT ( * )&gt;= 2 </groupConstraint>
                    <index>0</index>
                    <name>ESXIntfCrit</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_NET_INTF_UTIL"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_VM_SERVER) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>ESX Network I/O Warning (g)</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@49574765</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = ESXIntfCrit.hostIpAddr, hostName = ESXIntfCrit.hostName, vSwitch = ESXIntfCrit.vSwitch,
        inIntfUtil = ESXIntfCrit.AVG(inIntfUtil), outIntfUtil = ESXIntfCrit.AVG(outIntfUtil)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$ESX_Network_I_O_Warning_g_</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,hostName,hostIpAddr,vSwitch, inIntfUtil, outIntfUtil, rawEventMsg </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Change_1__DUP_1_1300127654240" entityVersion="6" xmlId="Rule$PH_Rule_Change_1__DUP_1_1300127654240" ownerId="19590364" lastModified="1300487003464" id="49574712" custId="0" creationTime="1300127654240">
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that the startup and running configurations of a network device (router or firewall) are different. This is achieved via logging in.</description>
                <eventFilters entityVersion="2" xmlId="EventFilter@49574766" ownerId="19590364" lastModified="1300487003470" id="49574766" custId="1" creationTime="1300127654241">
                    <groupBy>hostIpAddr, hostName, addedItem, deletedItem</groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>StartupRunDelta</name>
                    <singleConstraint>  hostIpAddr IN (Group@PH_SYS_DEVICE_ROUTER_SWITCH,Group@PH_SYS_DEVICE_FIREWALL)  AND  eventType = "PH_DEV_MON_DELTA_CONFIG" </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Difference in Running and Startup Config (g)</name>
                <triggerWindow>1800</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@49574766</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = StartupRunDelta.hostIpAddr, hostName = StartupRunDelta.hostName, addedItem = StartupRunDelta.addedItem, deletedItem = StartupRunDelta.deletedItem
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$Difference_in_Running_and_Startup_Config_g_</incidentType>
                <triggerEventAttrList> phRecvTime,hostName,hostIpAddr,eventType,startUpConfVer,runningConfVer,addedItem, deletedItem </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Change_3__DUP_1_1300127716337" entityVersion="9" xmlId="Rule$PH_Rule_Change_3__DUP_1_1300127716337" ownerId="19590364" lastModified="1314394380862" id="49574713" custId="0" creationTime="1300127716337">
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects user/group configuration in a domain controller.</description>
                <eventFilters entityVersion="5" xmlId="EventFilter@49574767" ownerId="19590364" lastModified="1314394380866" id="49574767" custId="1" creationTime="1300127716337">
                    <groupBy>reptDevIpAddr ,user ,computer ,domain ,targetUser ,targetDomain </groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>DCUserGrpChange</name>
                    <singleConstraint>  reptDevIpAddr IN (Group@PH_SYS_APP_DOMAIN_CONTROLLER)  AND  eventType IN (Group@PH_SYS_EVENT_AccountChanged)  AND  targetUser NOT CONTAIN "$"  AND  user NOT CONTAIN "$"  AND  user NOT CONTAIN "SystemUser" </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Domain Controller User/Group Modification (g)</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@49574767</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>user = DCUserGrpChange.user, computer = DCUserGrpChange.computer, domain = DCUserGrpChange.domain, targetUser = DCUserGrpChange.targetUser, targetDomain = DCUserGrpChange.targetDomain</incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$Domain_Controller_User_Group_Modification_g_</incidentType>
                <triggerEventAttrList>phRecvTime, reptDevIpAddr, eventType, user, computer, domain, targetUser, targetDomain</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Perf_228__DUP_1_1300127733079" entityVersion="7" xmlId="Rule$PH_Rule_Perf_228__DUP_1_1300127733079" ownerId="19590364" lastModified="1300563919660" id="49574714" custId="0" creationTime="1300127733079">
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that ESX CPU utilization has reached a critical level (greater than 95% based on 2 successive readings in a 10 minute interval</description>
                <eventFilters entityVersion="3" xmlId="EventFilter@49574768" ownerId="19590364" lastModified="1300563919674" id="49574768" custId="1" creationTime="1300127733080">
                    <groupBy>hostName ,hostIpAddr </groupBy>
                    <groupConstraint> AVG ( memUtil )&gt; 95  AND AVG ( swapReadKBytesPerSec )&gt; 1500  AND COUNT ( * )&gt;= 2 </groupConstraint>
                    <index>0</index>
                    <name>ESXMemCrit</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_SYS_MEM_UTIL"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_VM_SERVER) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>ESX Memory Critical (g)</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@49574768</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = ESXMemCrit.hostIpAddr,hostName = ESXMemCrit.hostName, memUtil = ESXMemCrit.AVG(memUtil), swapReadKBytesPerSec = ESXMemCrit.AVG(swapReadKBytesPerSec)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$ESX_Memory_Critical_g_</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,hostName,hostIpAddr,memUtil,swapReadKBytesPerSec,swapWriteKBytesPerSec,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Perf_228__DUP_1_1300127741714" entityVersion="9" xmlId="Rule$PH_Rule_Perf_228__DUP_1_1300127741714" ownerId="19590364" lastModified="1301588289659" id="49574715" custId="0" creationTime="1300127741714">
                <activatedTime>0</activatedTime>
                <active>false</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that ESX CPU utilization has reached a critical level (greater than 95% based on 2 successive readings in a 10 minute interval</description>
                <eventFilters entityVersion="3" xmlId="EventFilter@49574769" ownerId="19590364" lastModified="1301588289670" id="49574769" custId="1" creationTime="1300127741715">
                    <groupBy>hostName ,hostIpAddr </groupBy>
                    <groupConstraint> AVG ( memUtil )&gt; 95  AND AVG ( swapReadKBytesPerSec )&gt; 1500  AND COUNT ( * )&gt;= 2 </groupConstraint>
                    <index>0</index>
                    <name>ESXMemCrit</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_SYS_MEM_UTIL"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_VM_SERVER) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>ESX Memory Warning (g)</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@49574769</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = ESXMemCrit.hostIpAddr,hostName = ESXMemCrit.hostName, memUtil = ESXMemCrit.AVG(memUtil), swapReadKBytesPerSec = ESXMemCrit.AVG(swapReadKBytesPerSec)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$ESX_Memory_Warning_g_</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,hostName,hostIpAddr,memUtil,swapReadKBytesPerSec,swapWriteKBytesPerSec,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Perf_218__DUP_1_1300127775104" entityVersion="6" xmlId="Rule$PH_Rule_Perf_218__DUP_1_1300127775104" ownerId="19590364" lastModified="1300564051367" id="49574716" custId="0" creationTime="1300127775105">
                <activatedTime>0</activatedTime>
                <active>false</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that a server interface errors has reached a critical level (greater than 10%) based on 2 successive readings in a 10 minute interval</description>
                <eventFilters entityVersion="3" xmlId="EventFilter@49574770" ownerId="19590364" lastModified="1300564051450" id="49574770" custId="1" creationTime="1300127775111">
                    <groupBy>hostIpAddr ,hostName ,intfName </groupBy>
                    <groupConstraint>( AVG ( inIntfPktErrPct )&gt; 10  OR AVG ( outIntfPktErrPct )&gt; 10 ) AND COUNT ( * )&gt;= 2 </groupConstraint>
                    <index>0</index>
                    <name>IntfErrorCrit</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_NET_INTF_UTIL"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Server Intf Error Critical (g)</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@49574770</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = IntfErrorCrit.hostIpAddr, hostName = IntfErrorCrit.hostName, intfName = IntfErrorCrit.intfName, inIntfPktErrPct = IntfErrorCrit.AVG(inIntfPktErrPct), outIntfPktErrPct = IntfErrorCrit.AVG(outIntfPktErrPct)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$Server_Intf_Error_Critical_g_</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,intfName,inIntfPktErrPct,outIntfPktErrPct,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Perf_217__DUP_1_1300127788679" entityVersion="4" xmlId="Rule$PH_Rule_Perf_217__DUP_1_1300127788679" ownerId="19590364" lastModified="1300127788906" id="49574717" custId="0" creationTime="1300127788679">
                <active>false</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that a server interface error has reached a warning level (utilization between 1% and 10% based on 2 successive readings in a 10 minute interval</description>
                <eventFilters entityVersion="1" xmlId="EventFilter@49574771" ownerId="19590364" lastModified="1300127788679" id="49574771" custId="1" creationTime="1300127788679">
                    <groupBy>hostIpAddr ,hostName ,intfName </groupBy>
                    <groupConstraint> AVG ( inIntfPktErrPct )&gt;= 1  AND AVG ( inIntfPktErrPct )&lt;= 10  OR AVG ( outIntfPktErrPct )&gt;= 1  AND AVG ( outIntfPktErrPct )&lt;= 10  AND COUNT ( * )&gt;= 2 </groupConstraint>
                    <index>0</index>
                    <name>IntfErrorWarn</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_NET_INTF_UTIL"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Server Intf Error Warning (g)</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@49574771</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = IntfErrorWarn.hostIpAddr, hostName = IntfErrorWarn.hostName, intfName = IntfErrorWarn.intfName,inIntfPktErrPct = IntfErrorWarn.AVG(inIntfPktErrPct), outIntfPktErrPct = IntfErrorWarn.AVG(outIntfPktErrPct)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$Server_Intf_Error_Warning_g_</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,intfName,inIntfPktErrPct,outIntfPktErrPct,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Perf_214__DUP_1_1300127822252" entityVersion="8" xmlId="Rule$PH_Rule_Perf_214__DUP_1_1300127822252" ownerId="19590364" lastModified="1300911920720" id="49574718" custId="0" creationTime="1300127822252">
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that interface utilization of a network device has reached a critical level (utilization greater than 90%) based on 2 successive readings in a 10 minute interval.</description>
                <eventFilters entityVersion="4" xmlId="EventFilter@49574772" ownerId="19590364" lastModified="1300911920739" id="49574772" custId="1" creationTime="1300127822253">
                    <groupBy>hostIpAddr ,hostName ,intfName </groupBy>
                    <groupConstraint>( AVG ( inIntfUtil )&gt; 90  OR AVG ( outIntfUtil )&gt; 90 ) AND COUNT ( * )&gt;= 12 </groupConstraint>
                    <index>0</index>
                    <name>IntfUtilCrit</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_NET_INTF_UTIL"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server)  AND  hostIpAddr NOT IN (Group@PH_SYS_APP_NETWORK_IPS)  AND  intfName NOT CONTAIN "Loopback"  AND  intfName NOT IN ("lo","Null0") </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Server Intf Util Critical (g)</name>
                <triggerWindow>3600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@49574772</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = IntfUtilCrit.hostIpAddr, hostName = IntfUtilCrit.hostName, intfName = IntfUtilCrit.intfName, inIntfUtil = IntfUtilCrit.AVG(inIntfUtil),outIntfUtil = IntfUtilCrit.AVG(outIntfUtil) 
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$Server_Intf_Util_Critical_g_</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,intfName,inIntfUtil,outIntfUtil,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Perf_213__DUP_1_1300127833988" entityVersion="10" xmlId="Rule$PH_Rule_Perf_213__DUP_1_1300127833988" ownerId="19590364" lastModified="1301588443033" id="49574719" custId="0" creationTime="1300127833988">
                <activatedTime>0</activatedTime>
                <active>false</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that interface utilization of a server has reached a warning level (utilization between 70% and 90% based on 12 successive readings in a 60 minute interval)</description>
                <eventFilters entityVersion="5" xmlId="EventFilter@49574773" ownerId="19590364" lastModified="1301588443048" id="49574773" custId="1" creationTime="1300127833988">
                    <groupBy>hostIpAddr ,hostName ,intfName </groupBy>
                    <groupConstraint>(( AVG ( inIntfUtil )&gt;= 70  AND AVG ( inIntfUtil )&lt;= 90 ) OR( AVG ( outIntfUtil )&gt;= 70  AND AVG ( outIntfUtil )&lt;= 90 )) AND COUNT ( * )&gt;= 12 </groupConstraint>
                    <index>0</index>
                    <name>IntfUtilWarn</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_NET_INTF_UTIL"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server)  AND  hostIpAddr NOT IN (Group@PH_SYS_APP_NETWORK_IPS)  AND  intfName NOT CONTAIN "Loopback"  AND  intfName NOT IN ("lo","Null0") </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Server Intf Util Warning (g)</name>
                <triggerWindow>3600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@49574773</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = IntfUtilWarn.hostIpAddr, hostName = IntfUtilWarn.hostName, intfName = IntfUtilWarn.intfName, inIntfUtil = IntfUtilWarn.AVG(inIntfUtil),outIntfUtil = IntfUtilWarn.AVG(outIntfUtil) 
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$Server_Intf_Util_Warning_g_</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,intfName,inIntfUtil,outIntfUtil,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Change_7__DUP_1_1300127888894" entityVersion="4" xmlId="Rule$PH_Rule_Change_7__DUP_1_1300127888894" ownerId="19590364" lastModified="1300127889044" id="49574720" custId="0" creationTime="1300127888894">
                <active>false</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that a new software has been installed on a server or an existing software has been deleted.</description>
                <eventFilters entityVersion="1" xmlId="EventFilter@49574774" ownerId="19590364" lastModified="1300127888894" id="49574774" custId="1" creationTime="1300127888894">
                    <groupBy>hostIpAddr,hostName,addedItem ,deletedItem</groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>delta</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_CHANGE_INST_SW" </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Server Installed Software Change (g)</name>
                <triggerWindow>1800</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@49574774</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostIpAddr = delta.hostIpAddr, hostName = delta.hostName, addedItem = delta.addedItem, deletedItem = delta.deletedItem</incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$Server_Installed_Software_Change_g_</incidentType>
                <triggerEventAttrList> phRecvTime,hostName,hostIpAddr,eventType,oldSVNVersion,newSVNVersion,addedItem, deletedItem </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Perf_230__DUP_1_1300128030958" entityVersion="10" xmlId="Rule$PH_Rule_Perf_230__DUP_1_1300128030958" ownerId="19590364" lastModified="1300563902099" id="49574721" custId="0" creationTime="1300128030958">
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that ESX disk I/O utilization has reached a critical level - average Disk IO Latency greater than 200ms based on 2 successive readings in a 10 minute interval</description>
                <eventFilters entityVersion="6" xmlId="EventFilter@49574775" ownerId="19590364" lastModified="1300563902107" id="49574775" custId="1" creationTime="1300128030959">
                    <groupBy>hostName ,hostIpAddr ,diskAdapter </groupBy>
                    <groupConstraint> AVG ( guestDiskRdLatency )&gt;= 200  OR AVG ( guestDiskWrLatency )&gt;= 200  AND COUNT ( * )&gt;= 2 </groupConstraint>
                    <index>0</index>
                    <name>ESXDiskCrit</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_ESX_DISK_IO" </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>ESX Disk I/O Critical (g)</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@49574775</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = ESXDiskCrit.hostIpAddr, hostName = ESXDiskCrit.hostName, diskAdapter = ESXDiskCrit.diskAdapter,
        guestDiskRdLatency = ESXDiskCrit.AVG(guestDiskRdLatency), guestDiskWrLatency = ESXDiskCrit.AVG(guestDiskWrLatency)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$ESX_Disk_I_O_Critical_g_</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,hostName,hostIpAddr,diskAdapter,guestDiskRdLatency,guestDiskWrLatency,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Perf_229__DUP_1_1300128039018" entityVersion="10" xmlId="Rule$PH_Rule_Perf_229__DUP_1_1300128039018" ownerId="19590364" lastModified="1301588394511" id="49574722" custId="0" creationTime="1300128039018">
                <activatedTime>0</activatedTime>
                <active>false</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that ESX disk I/O utilization has reached a warning level - average Disk IO Latency between 100ms and 200ms based on 2 successive readings in a 10 minute interval</description>
                <eventFilters entityVersion="5" xmlId="EventFilter@49574776" ownerId="19590364" lastModified="1301588394521" id="49574776" custId="1" creationTime="1300128039018">
                    <groupBy>hostName ,hostIpAddr ,diskAdapter </groupBy>
                    <groupConstraint> AVG ( guestDiskRdLatency )&gt;= 100  AND AVG ( guestDiskRdLatency )&lt;= 200  AND AVG ( guestDiskWrLatency )&gt;= 100  AND AVG ( guestDiskWrLatency )&lt; 200  AND COUNT ( * )&gt;= 2 </groupConstraint>
                    <index>0</index>
                    <name>ESXDiskWarn</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_ESX_DISK_IO" </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>ESX Disk I/O Warning (g)</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@49574776</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = ESXDiskWarn.hostIpAddr, hostName = ESXDiskWarn.hostName, diskAdapter = ESXDiskWarn.diskAdapter,
        guestDiskRdLatency = ESXDiskWarn.AVG(guestDiskRdLatency), guestDiskWrLatency = ESXDiskWarn.AVG(guestDiskWrLatency)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$ESX_Disk_I_O_Warning_g_</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,hostName,hostIpAddr,diskAdapter,guestDiskRdLatency,guestDiskWrLatency,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Perf_216__DUP_1_1300128235760" entityVersion="10" xmlId="Rule$PH_Rule_Perf_216__DUP_1_1300128235760" ownerId="19590364" lastModified="1300563994846" id="49574723" custId="0" creationTime="1300128235760">
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that a network device interface errors has reached a critical level (greater than 20%) based on 2 successive readings in a 10 minute interval.</description>
                <eventFilters entityVersion="6" xmlId="EventFilter@49574777" ownerId="19590364" lastModified="1300563994858" id="49574777" custId="1" creationTime="1300128235760">
                    <groupBy>hostIpAddr ,hostName ,intfName </groupBy>
                    <groupConstraint>( AVG ( inIntfPktErrPct )&gt; 20  OR AVG ( outIntfPktErrPct )&gt; 20 ) AND COUNT ( * )&gt;= 2 </groupConstraint>
                    <index>0</index>
                    <name>IntfErrorCrit</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_NET_INTF_UTIL"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Network) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Network Intf Error Critical (g)</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@49574777</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = IntfErrorCrit.hostIpAddr, hostName = IntfErrorCrit.hostName, intfName = IntfErrorCrit.intfName, inIntfPktErrPct = IntfErrorCrit.AVG(inIntfPktErrPct), outIntfPktErrPct = IntfErrorCrit.AVG(outIntfPktErrPct)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$Network_Intf_Error_Critical_g_</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,intfName,inIntfPktErrPct,outIntfPktErrPct,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Perf_215__DUP_1_1300128243633" entityVersion="7" xmlId="Rule$PH_Rule_Perf_215__DUP_1_1300128243633" ownerId="19590364" lastModified="1300489868482" id="49574724" custId="0" creationTime="1300128243633">
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that a network device interface error has reached a warning level (utilization between 5% and 20% based on 2 successive readings in a 10 minute interval</description>
                <eventFilters entityVersion="3" xmlId="EventFilter@49574778" ownerId="19590364" lastModified="1300489868485" id="49574778" custId="1" creationTime="1300128243633">
                    <groupBy>hostIpAddr ,hostName ,intfName </groupBy>
                    <groupConstraint> AVG ( inIntfPktErrPct )&gt;= 5  AND AVG ( inIntfPktErrPct )&lt;= 20  OR AVG ( outIntfPktErrPct )&gt;= 5  AND AVG ( outIntfPktErrPct )&lt;= 20  AND COUNT ( * )&gt;= 2 </groupConstraint>
                    <index>0</index>
                    <name>IntfErrorWarn</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_NET_INTF_UTIL"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Network) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Network Intf Error Warning (g)</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@49574778</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = IntfErrorWarn.hostIpAddr, hostName = IntfErrorWarn.hostName, intfName = IntfErrorWarn.intfName,inIntfPktErrPct = IntfErrorWarn.AVG(inIntfPktErrPct), outIntfPktErrPct = IntfErrorWarn.AVG(outIntfPktErrPct)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$Network_Intf_Error_Warning_g_</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,intfName,inIntfPktErrPct,outIntfPktErrPct,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Perf_211__DUP_1_1300128273308" entityVersion="10" xmlId="Rule$PH_Rule_Perf_211__DUP_1_1300128273308" ownerId="19590364" lastModified="1301588326257" id="49574725" custId="0" creationTime="1300128273308">
                <activatedTime>0</activatedTime>
                <active>false</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that interface utilization of a network device has reached a warning level (utilization between 70% and 90%) based on 12 successive readings in a 60 minute interval. IPS devices are excluded since being a sniffing interface, they have high utilization under normal circumstances.</description>
                <eventFilters entityVersion="5" xmlId="EventFilter@49574779" ownerId="19590364" lastModified="1301588326263" id="49574779" custId="1" creationTime="1300128273308">
                    <groupBy>hostIpAddr ,hostName ,intfName </groupBy>
                    <groupConstraint>(( AVG ( inIntfUtil )&gt;= 70  AND AVG ( inIntfUtil )&lt;= 90 ) OR( AVG ( outIntfUtil )&gt;= 70  AND AVG ( outIntfUtil )&lt;= 90 )) AND COUNT ( * )&gt;= 12 </groupConstraint>
                    <index>0</index>
                    <name>IntfUtilWarn</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_NET_INTF_UTIL"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Network)  AND  hostIpAddr NOT IN (Group@PH_SYS_DEVICE_NETWORK_IPS) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Network Intf Util Warning (g)</name>
                <triggerWindow>3600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@49574779</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = IntfUtilWarn.hostIpAddr, hostName = IntfUtilWarn.hostName, intfName = IntfUtilWarn.intfName, inIntfUtil = IntfUtilWarn.AVG(inIntfUtil),outIntfUtil = IntfUtilWarn.AVG(outIntfUtil) 
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$Network_Intf_Util_Warning_g_</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,intfName,inIntfUtil,outIntfUtil,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Perf_210__DUP_1_1300128295221" entityVersion="24" xmlId="Rule$PH_Rule_Perf_210__DUP_1_1300128295221" ownerId="19590364" lastModified="1311294391664" id="49574726" custId="0" creationTime="1300128295221">
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that server disk space usage has reached a critical level (greater than 95% and less than 5GB free) based on 2 successive readings in a 20 minute interval.</description>
                <eventFilters entityVersion="20" xmlId="EventFilter@49574780" ownerId="19590364" lastModified="1311294391666" id="49574780" custId="1" creationTime="1300128295221">
                    <groupBy>hostIpAddr ,hostName ,diskName ,freeDiskMB ,diskUtil </groupBy>
                    <groupConstraint> AVG ( diskUtil )&gt; 95  AND AVG ( freeDiskMB )&lt; 5000  AND COUNT ( * )&gt;= 2 </groupConstraint>
                    <index>0</index>
                    <name>ServDiskCrit</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_SYS_DISK_UTIL"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server)  AND  diskName NOT IN ("/boot") </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Server Disk Space Critical (g)</name>
                <triggerWindow>1200</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@49574780</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>hostIpAddr = ServDiskCrit.hostIpAddr, hostName = ServDiskCrit.hostName, diskName = ServDiskCrit.diskName, diskUtil = ServDiskCrit.AVG(diskUtil), freeDiskMB = ServDiskCrit.freeDiskMB</incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$Server_Disk_Space_Critical_g_</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, reptDevIpAddr, hostIpAddr, hostName, diskName, diskUtil, freeDiskMB, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Perf_209__DUP_1_1300128304444" entityVersion="11" xmlId="Rule$PH_Rule_Perf_209__DUP_1_1300128304444" ownerId="19590364" lastModified="1300913460928" id="49574727" custId="0" creationTime="1300128304444">
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that server disk space usage has reached a warning level (utilization between 90% and 95%) based on 2 successive readings in a 20 minute interval.</description>
                <eventFilters entityVersion="7" xmlId="EventFilter@49574781" ownerId="19590364" lastModified="1300913460943" id="49574781" custId="1" creationTime="1300128304445">
                    <groupBy>hostIpAddr ,hostName ,diskName </groupBy>
                    <groupConstraint>( AVG ( diskUtil )&gt;= 90  AND AVG ( diskUtil )&lt;= 95 ) AND AVG ( freeDiskMB )&lt; 10000  AND COUNT ( * )&gt;= 2 </groupConstraint>
                    <index>0</index>
                    <name>ServDiskWarn</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_SYS_DISK_UTIL"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server)  AND  diskName NOT IN ("/boot") </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Server Disk Space Warning (g)</name>
                <triggerWindow>1200</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@49574781</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>hostIpAddr = ServDiskWarn.hostIpAddr, hostName = ServDiskWarn.hostName, diskName = ServDiskWarn.diskName, diskUtil = ServDiskWarn.AVG(diskUtil)</incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$Server_Disk_Space_Warning_g_</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, reptDevIpAddr, hostIpAddr, hostName, diskName, diskUtil, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Avail_12__DUP_1_1300128365542" entityVersion="6" xmlId="Rule$PH_Rule_Avail_12__DUP_1_1300128365542" ownerId="19590364" lastModified="1300489686724" id="49574728" custId="0" creationTime="1300128365542">
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that a network interface of a network device is flapping - that is, coming up and down more than 5 times in 15 minutes. This may indicate hardware issues.</description>
                <eventFilters entityVersion="2" xmlId="EventFilter@49574782" ownerId="19590364" lastModified="1300489686728" id="49574782" custId="1" creationTime="1300128365542">
                    <groupBy>hostIpAddr ,intfName </groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 5 </groupConstraint>
                    <index>0</index>
                    <name>IntfDownNetDev</name>
                    <singleConstraint>  eventType IN (Group@PH_SYS_EVENT_NetIntfShutdown)  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Network) </singleConstraint>
                </eventFilters>
                <eventFilters entityVersion="2" xmlId="EventFilter@49574783" ownerId="19590364" lastModified="1300489686735" id="49574783" custId="1" creationTime="1300128365542">
                    <groupBy>hostIpAddr ,intfName </groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 5 </groupConstraint>
                    <index>1</index>
                    <name>IntfUpNetDev</name>
                    <singleConstraint>  eventType IN (Group@PH_SYS_EVENT_NetIntfRestart)  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Network) </singleConstraint>
                </eventFilters>
                <filterOperators>
                    <rank>0</rank>
                    <type>AND</type>
                </filterOperators>
                <globalConstraint>IntfDownNetDev.hostIpAddr = IntfUpNetDev.hostIpAddr, IntfDownNetDev.intfName = IntfUpNetDev.intfName</globalConstraint>
                <name>Network Device Interface Flapping (g)</name>
                <rawFOString>AND:0</rawFOString>
                <triggerWindow>900</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@49574782</eventFilters>
                <eventFilters>EventFilter@49574783</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = IntfDownNetDev.hostIpAddr, intfName = IntfDownNetDev.intfName
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$Network_Device_Interface_Flapping_g_</incidentType>
                <triggerEventAttrList> phRecvTime,reptDevIpAddr,hostIpAddr,intfName,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Perf_226__DUP_1_1300128389502" entityVersion="11" xmlId="Rule$PH_Rule_Perf_226__DUP_1_1300128389502" ownerId="19590364" lastModified="1300563890675" id="49574729" custId="0" creationTime="1300128389502">
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that ESX CPU utilization has reached a critical level (greater than 95% based on 2 successive readings in a 10 minute interval</description>
                <eventFilters entityVersion="5" xmlId="EventFilter@49574784" ownerId="19590364" lastModified="1300563890682" id="49574784" custId="1" creationTime="1300128389503">
                    <groupBy>hostName ,hostIpAddr </groupBy>
                    <groupConstraint> AVG ( cpuUtil )&gt; 95  AND COUNT ( * )&gt;= 2 </groupConstraint>
                    <index>0</index>
                    <name>ESXCPUCrit</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_SYS_CPU_UTIL"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_VM_SERVER) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>ESX CPU Critical (g)</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@49574784</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = ESXCPUCrit.hostIpAddr,hostName = ESXCPUCrit.hostName,cpuUtil = ESXCPUCrit.AVG(cpuUtil)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$ESX_CPU_Critical_g_</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,hostName,hostIpAddr,cpuUtil,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Perf_225__DUP_1_1300128398311" entityVersion="8" xmlId="Rule$PH_Rule_Perf_225__DUP_1_1300128398311" ownerId="19590364" lastModified="1301588274968" id="49574730" custId="0" creationTime="1300128398311">
                <activatedTime>0</activatedTime>
                <active>false</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that ESX CPU utilization has reached a warning level (between 75% and 95% based on 2 successive readings in a 10 minute interval</description>
                <eventFilters entityVersion="3" xmlId="EventFilter@49574785" ownerId="19590364" lastModified="1301588274976" id="49574785" custId="1" creationTime="1300128398311">
                    <groupBy>hostName ,hostIpAddr </groupBy>
                    <groupConstraint> AVG ( cpuUtil )&gt;= 75  AND AVG ( cpuUtil )&lt;= 95  AND COUNT ( * )&gt;= 2 </groupConstraint>
                    <index>0</index>
                    <name>ESXCPUWarn</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_SYS_CPU_UTIL"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_VM_SERVER) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>ESX CPU Warning (g)</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@49574785</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = ESXCPUWarn.hostIpAddr,hostName = ESXCPUWarn.hostName,cpuUtil = ESXCPUWarn.AVG(cpuUtil)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$ESX_CPU_Warning_g_</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,hostName,hostIpAddr,cpuUtil,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Degraded_Ping_Net__DUP_1_1300128436913" entityVersion="6" xmlId="Rule$PH_Rule_Degraded_Ping_Net__DUP_1_1300128436913" ownerId="19590364" lastModified="1300128437066" id="49574731" custId="0" creationTime="1300128436914">
                <active>false</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects a host with degraded ping response - more than 50% packet loss and more than 100 ms avg response time</description>
                <eventFilters entityVersion="2" xmlId="EventFilter@49574786" ownerId="19590364" lastModified="1300128436914" id="49574786" custId="1" creationTime="1300128436914">
                    <groupBy>hostIpAddr </groupBy>
                    <groupConstraint>( AVG ( pktLossPct )&gt;= 50  AND AVG ( pktLossPct )&lt; 100 ) AND COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>PartPingLossNet</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_PING_STAT"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Network) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Network Device Degraded - Lossy Ping Response (g)</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@49574786</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = PartPingLossNet.hostIpAddr,pktLossPct=PartPingLossNet.AVG(pktLossPct))
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$Network_Device_Degraded_Lossy_Ping_Response_g_</incidentType>
                <triggerEventAttrList> phRecvTime,reptDevIpAddr,hostIpAddr,avgDurationMSec,minDurationMSec,pktLossPct,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Access_51C__DUP_1_1300128458748" entityVersion="7" xmlId="Rule$PH_Rule_Access_51C__DUP_1_1300128458748" ownerId="19590364" lastModified="1300490299344" id="49574732" custId="0" creationTime="1300128458749">
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects account lockout caused by excessive logon failures</description>
                <eventFilters entityVersion="3" xmlId="EventFilter@49574788" ownerId="19590364" lastModified="1300490299353" id="49574788" custId="1" creationTime="1300128458750">
                    <groupBy>reptDevIpAddr, user</groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>ServerAcctLockout</name>
                    <singleConstraint>  eventType IN (Group@PH_SYS_EVENT_HostAccountLocked)  AND  reptDevIpAddr IN (Group@PH_SYS_DEVICE_Server)  AND  reptDevIpAddr NOT IN (Group@PH_SYS_APP_DOMAIN_CONTROLLER) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Server Account Lockout  (g)</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@49574788</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>
        destIpAddr = ServerAcctLockout.reptDevIpAddr, user = ServerAcctLockout.user, incidentCount = ServerAcctLockout.COUNT(*)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$Server_Account_Lockout_g_</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,user,computer,winLogonType,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Avail_23__DUP_1_1300128475945" entityVersion="11" xmlId="Rule$PH_Rule_Avail_23__DUP_1_1300128475945" ownerId="19590364" lastModified="1300512844636" id="49574733" custId="0" creationTime="1300128475945">
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects a server hardware issue that is of warning criticality.</description>
                <eventFilters entityVersion="5" xmlId="EventFilter@49574789" ownerId="19590364" lastModified="1300512844662" id="49574789" custId="1" creationTime="1300128475945">
                    <groupBy>hostName ,hostIpAddr ,hwComponentName ,hwComponentStatus </groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>HwIssueWarn</name>
                    <singleConstraint>  eventType IN (Group@PH_SYS_EVENT_HwProblem)  AND  eventSeverityCat = "MEDIUM"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server)  AND  hwComponentName NOT CONTAIN "Battery0" </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Server Hardware Warning (g)</name>
                <triggerWindow>900</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@49574789</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>
        hostName=HwIssueWarn.hostName,hostIpAddr=HwIssueWarn.hostIpAddr,hwComponentName=HwIssueWarn.hwComponentName,hwComponentStatus = HwIssueWarn.hwComponentStatus
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$Server_Hardware_Warning_g_</incidentType>
                <triggerEventAttrList> phRecvTime,hostName,hostIpAddr,hwStatusCode,hwComponentName,hwComponentStatus,hwFailReason,rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Access_56__DUP_1_1300128507043" entityVersion="8" xmlId="Rule$PH_Rule_Access_56__DUP_1_1300128507043" ownerId="19590364" lastModified="1300491233150" id="49574734" custId="0" creationTime="1300128507043">
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects an unusual condition where a source has authentication failures at a host but that is not followed by a successful authentication at the same host within the same day</description>
                <eventFilters entityVersion="4" xmlId="EventFilter@49574790" ownerId="19590364" lastModified="1300491233160" id="49574790" custId="1" creationTime="1300128507044">
                    <groupBy>srcIpAddr ,reptDevIpAddr ,user ,destIpAddr </groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 5 </groupConstraint>
                    <index>0</index>
                    <name>FailedLogin</name>
                    <singleConstraint>  eventType IN ("PH_RULE_EXCESS_FAILED_LOGON_NET_DEVICE","PH_RULE_EXCESS_FAILED_LOGON_SERVER","PH_RULE_EXCESS_FAILED_PRIV_LOGON_SERVER","PH_RULE_EXCESS_FAILED_LOGON_DB","PH_RULE_REPEAT_EXCESS_FAILED_LOGON_WEB","PH_RULE_EXCESS_FAILED_LOGON_APPL","PH_RULE_EXCESS_FAILED_LOGON_DOMAIN","PH_RULE_EXCESS_FAILED_LOGON_VPN","PH_RULE_EXCESS_FAILED_LOGON_WIRELESS") </singleConstraint>
                </eventFilters>
                <eventFilters entityVersion="4" xmlId="EventFilter@49574791" ownerId="19590364" lastModified="1300491233174" id="49574791" custId="1" creationTime="1300128507044">
                    <groupBy>srcIpAddr,reptDevIpAddr,user</groupBy>
                    <groupConstraint></groupConstraint>
                    <index>1</index>
                    <name>SuccessLogin</name>
                    <singleConstraint>  eventType IN (Group@PH_SYS_EVENT_HostLogonSuccess,Group@PH_SYS_EVENT_HostPrivLogonSuccess,Group@PH_SYS_EVENT_DomainLogonSuccess,Group@PH_SYS_EVENT_VPNLogonSuccess,Group@PH_SYS_EVENT_WirelessLogonSuccess,Group@PH_SYS_EVENT_AppLogonSuccess) </singleConstraint>
                </eventFilters>
                <filterOperators>
                    <rank>0</rank>
                    <type>NOT_FOLLOWED_BY</type>
                </filterOperators>
                <globalConstraint>FailedLogin.reptDevIpAddr = SuccessLogin.reptDevIpAddr, FailedLogin.srcIpAddr = SuccessLogin.srcIpAddr, FailedLogin.user = SuccessLogin.user</globalConstraint>
                <name>Suspicious Logon Failure: No following successful login (g)</name>
                <rawFOString>NOT_FOLLOWED_BY:0</rawFOString>
                <triggerWindow>86400</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@49574790</eventFilters>
                <eventFilters>EventFilter@49574791</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>srcIpAddr = FailedLogin.srcIpAddr, destIpAddr = FailedLogin.destIpAddr, user = FailedLogin.user</incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$Suspicious_Logon_Failure_no_following_successful_login_g_</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, reptDevIpAddr, srcIpAddr, destIpAddr, user, reptDevIpAddr, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Access_20__DUP_1_1300128539948" entityVersion="6" xmlId="Rule$PH_Rule_Access_20__DUP_1_1300128539948" ownerId="19590364" lastModified="1300488996119" id="49574735" custId="0" creationTime="1300128539948">
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects multiple domain logon failures - 50 consecutive failures in a 5 minute period.  Windows creates multiple events for a single logon failure.  Count is set at 50 to catch abnormal behavior.</description>
                <eventFilters entityVersion="2" xmlId="EventFilter@49574792" ownerId="19590364" lastModified="1300488996127" id="49574792" custId="1" creationTime="1300128539948">
                    <groupBy>srcIpAddr ,reptDevIpAddr ,user ,domain </groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 50 </groupConstraint>
                    <index>0</index>
                    <name>ExcessDomainLoginFailure</name>
                    <singleConstraint>  eventType IN (Group@PH_SYS_EVENT_DomainLogonFailure) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Multiple Logon Failures: Domain  (g)</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@49574792</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>
        srcIpAddr = ExcessDomainLoginFailure.srcIpAddr, destIpAddr = ExcessDomainLoginFailure.reptDevIpAddr, domain = ExcessDomainLoginFailure.domain, user = ExcessDomainLoginFailure.user, incidentCount = ExcessDomainLoginFailure.COUNT(*)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$Multiple_Logon_Failures_Domain_g_</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,user,computer,winLogonType,winLogonFailCode,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Perf_208__DUP_1_1300128599386" entityVersion="7" xmlId="Rule$PH_Rule_Perf_208__DUP_1_1300128599386" ownerId="19590364" lastModified="1300564018916" id="49574736" custId="0" creationTime="1300128599386">
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that a network device memory has reached a critical level (greater than 95% based on 2 successive readings in a 10 minute interval</description>
                <eventFilters entityVersion="3" xmlId="EventFilter@49574793" ownerId="19590364" lastModified="1300564018924" id="49574793" custId="1" creationTime="1300128599386">
                    <groupBy>hostIpAddr ,hostName </groupBy>
                    <groupConstraint> AVG ( memUtil )&gt; 95  AND COUNT ( * )&gt;= 2 </groupConstraint>
                    <index>0</index>
                    <name>NetMemCrit</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_SYS_MEM_UTIL"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Network)  AND  memName = "Physical Memory" </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Network Memory Critical (g)</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@49574793</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = NetMemCrit.hostIpAddr, hostName = NetMemCrit.hostName, memUtil = NetMemCrit.AVG(memUtil)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$Network_Memory_Critical_g_</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,memUtil,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Perf_207__DUP_1_1300128616404" entityVersion="8" xmlId="Rule$PH_Rule_Perf_207__DUP_1_1300128616404" ownerId="19590364" lastModified="1301588358708" id="49574737" custId="0" creationTime="1300128616404">
                <activatedTime>0</activatedTime>
                <active>false</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that a network device memory usage has reached a warning level (between 80% and 95% based on 2 successive readings in a 10 minute interval</description>
                <eventFilters entityVersion="3" xmlId="EventFilter@49574794" ownerId="19590364" lastModified="1301588358750" id="49574794" custId="1" creationTime="1300128616405">
                    <groupBy>hostIpAddr ,hostName </groupBy>
                    <groupConstraint> AVG ( memUtil )&gt;= 80  AND AVG ( memUtil )&lt;= 95  AND COUNT ( * )&gt;= 2 </groupConstraint>
                    <index>0</index>
                    <name>NetMemWarn</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_SYS_MEM_UTIL"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Network)  AND  memName = "Physical Memory" </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Network Memory Warning  (g)</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@49574794</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = NetMemWarn.hostIpAddr, hostName = NetMemWarn.hostName, memUtil = NetMemWarn.AVG(memUtil)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$Network_Memory_Warning_g_</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,memUtil,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Perf_206__DUP_1_1300128640420" entityVersion="7" xmlId="Rule$PH_Rule_Perf_206__DUP_1_1300128640420" ownerId="19590364" lastModified="1300564094809" id="49574738" custId="0" creationTime="1300128640421">
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that server Memory has reached a critical level (greater than 95%) based on 12 successive readings in a 60 minute interval.)</description>
                <eventFilters entityVersion="3" xmlId="EventFilter@49574795" ownerId="19590364" lastModified="1300564094821" id="49574795" custId="1" creationTime="1300128640421">
                    <groupBy>hostIpAddr ,hostName </groupBy>
                    <groupConstraint> AVG ( memUtil )&gt; 95  AND COUNT ( * )&gt;= 12 </groupConstraint>
                    <index>0</index>
                    <name>ServMemCrit</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_SYS_MEM_UTIL"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server)  AND  memName = "Physical Memory" </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Server Memory Critical (g)</name>
                <triggerWindow>3600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@49574795</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = ServMemCrit.hostIpAddr, hostName = ServMemCrit.hostName, memUtil = ServMemCrit.AVG(memUtil)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$Server_Memory_Critical_g_</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,memUtil,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Perf_205__DUP_1_1300128649414" entityVersion="12" xmlId="Rule$PH_Rule_Perf_205__DUP_1_1300128649414" ownerId="19590364" lastModified="1301588457399" id="49574739" custId="0" creationTime="1300128649414">
                <activatedTime>0</activatedTime>
                <active>false</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that server Memory has reached a warning level (between 90% and 95% based on 12 successive readings in a 60 minute interval.)</description>
                <eventFilters entityVersion="5" xmlId="EventFilter@49574796" ownerId="19590364" lastModified="1301588457406" id="49574796" custId="1" creationTime="1300128649415">
                    <groupBy>hostIpAddr ,hostName </groupBy>
                    <groupConstraint> AVG ( memUtil )&gt;= 90  AND AVG ( memUtil )&lt;= 95  AND COUNT ( * )&gt;= 12 </groupConstraint>
                    <index>0</index>
                    <name>ServMemWarn</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_SYS_MEM_UTIL"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server)  AND  memName = "Physical Memory" </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Server Memory Warning (g)</name>
                <triggerWindow>3600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@49574796</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = ServMemWarn.hostIpAddr, hostName = ServMemWarn.hostName, memUtil = ServMemWarn.AVG(memUtil)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$Server_Memory_Warning_g_</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,memUtil,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Perf_202__DUP_1_1300128675324" entityVersion="9" xmlId="Rule$PH_Rule_Perf_202__DUP_1_1300128675324" ownerId="19590364" lastModified="1300911352223" id="49574740" custId="0" creationTime="1300128675324">
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that server CPU has reached a critical level (greater than 95%) based on 12 successive readings in a 60 minute interval.</description>
                <eventFilters entityVersion="5" xmlId="EventFilter@49574797" ownerId="19590364" lastModified="1300911352227" id="49574797" custId="1" creationTime="1300128675324">
                    <groupBy>hostIpAddr ,hostName </groupBy>
                    <groupConstraint> AVG ( cpuUtil )&gt; 95  AND COUNT ( * )&gt;= 12 </groupConstraint>
                    <index>0</index>
                    <name>ServCPUCrit</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_SYS_CPU_UTIL"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Server CPU Critical (g)</name>
                <triggerWindow>3600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@49574797</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = ServCPUCrit.hostIpAddr, hostName = ServCPUCrit.hostName, cpuUtil = ServCPUCrit.AVG(cpuUtil)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$Server_CPU_Critical_g_</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,cpuUtil,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Perf_201__DUP_1_1300128697117" entityVersion="11" xmlId="Rule$PH_Rule_Perf_201__DUP_1_1300128697117" ownerId="19590364" lastModified="1301588373927" id="49574741" custId="0" creationTime="1300128697117">
                <activatedTime>0</activatedTime>
                <active>false</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that server CPU has reached a warning level (between 90% and 95%) based on 12 successive readings in a 60 minute interval.</description>
                <eventFilters entityVersion="6" xmlId="EventFilter@49574798" ownerId="19590364" lastModified="1301588373932" id="49574798" custId="1" creationTime="1300128697118">
                    <groupBy>hostIpAddr ,hostName </groupBy>
                    <groupConstraint> AVG ( cpuUtil )&gt;= 90  AND AVG ( cpuUtil )&lt;= 95  AND COUNT ( * )&gt;= 12 </groupConstraint>
                    <index>0</index>
                    <name>ServCPUWarn</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_SYS_CPU_UTIL"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Server CPU Warning (g)</name>
                <triggerWindow>3600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@49574798</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = ServCPUWarn.hostIpAddr, hostName = ServCPUWarn.hostName, cpuUtil = ServCPUWarn.AVG(cpuUtil)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$Server_CPU_Warning_g_</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,cpuUtil,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Access_51B__DUP_1_1300128746716" entityVersion="6" xmlId="Rule$PH_Rule_Access_51B__DUP_1_1300128746716" ownerId="19590364" lastModified="1300489527164" id="49574742" custId="0" creationTime="1300128746716">
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects account lockout caused by excessive logon failures</description>
                <eventFilters entityVersion="2" xmlId="EventFilter@49574799" ownerId="19590364" lastModified="1300489527173" id="49574799" custId="1" creationTime="1300128746717">
                    <groupBy>srcIpAddr,reptDevIpAddr, user</groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>NetDevAcctLockout</name>
                    <singleConstraint>  eventType IN (Group@PH_SYS_EVENT_HostAccountLocked)  AND  reptDevIpAddr IN (Group@PH_SYS_DEVICE_Network) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Network Device Account Lockout (g)</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@49574799</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>
        srcIpAddr = NetDevAcctLockout.srcIpAddr, destIpAddr = NetDevAcctLockout.reptDevIpAddr, user = NetDevAcctLockout.user, incidentCount = NetDevAcctLockout.COUNT(*)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$Network_Device_Account_Lockout_g_</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,user,computer,winLogonType,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Access_51A__DUP_1_1300128767923" entityVersion="9" xmlId="Rule$PH_Rule_Access_51A__DUP_1_1300128767923" ownerId="19590364" lastModified="1300487127172" id="49574743" custId="0" creationTime="1300128767923">
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects account lockout caused by excessive logon failures.</description>
                <eventFilters entityVersion="5" xmlId="EventFilter@49588150" ownerId="19590364" lastModified="1300487127180" id="49588150" custId="1" creationTime="1300128767923">
                    <groupBy>reptDevIpAddr ,user </groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>DomainAcctLockout</name>
                    <singleConstraint>  eventType IN (Group@PH_SYS_EVENT_DomainAccountLocked)  AND  reptDevIpAddr IN (Group@PH_SYS_APP_DOMAIN_CONTROLLER)  AND  user NOT CONTAIN "$" </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Domain Account Lockout (g)</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@49588150</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>
        destIpAddr = DomainAcctLockout.reptDevIpAddr, user = DomainAcctLockout.user, incidentCount = DomainAcctLockout.COUNT(*)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$Domain_Account_Lockout_g_</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,user,computer,winLogonType,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_SYS_Rule_1300487763541" entityVersion="0" xmlId="Rule$PH_SYS_Rule_1300487763541" ownerId="42373251" lastModified="1300487763541" id="49574744" custId="0" creationTime="1300487763541">
                <activatedTime>0</activatedTime>
                <active>false</active>
                <category>0</category>
                <custInclusive>false</custInclusive>
                <description>The process restarted</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@49588186" ownerId="42373251" lastModified="1300487763541" id="49588186" custId="1" creationTime="1300487763541">
                    <groupBy>reptDevIpAddr ,procName </groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>Process_Restarted_Events</name>
                    <singleConstraint>  phEventCategory = 3  AND  rawEventMsg CONTAIN "PHL_ERROR"  AND  rawEventMsg CONTAIN "Restart" </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Mercury System Process Restarted</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@49588186</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>reptDevIpAddr = Process_Restarted_Events.reptDevIpAddr, procName = Process_Restarted_Events.procName</incidentAttrs>
                <incidentFireFreq>3600</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$Mercury_System_Process_Restarted</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, reptDevIpAddr, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Access_56__DUP_1_1300490184875" entityVersion="19" xmlId="Rule$PH_Rule_Access_56__DUP_1_1300490184875" ownerId="4600602" lastModified="1300490200051" id="49574745" custId="0" creationTime="1300490184875">
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that no events have been received from a collector in a 10 minute time period.</description>
                <eventFilters entityVersion="13" xmlId="EventFilter@49588187" ownerId="4600602" lastModified="1300490200156" id="49588187" custId="1" creationTime="1300490184875">
                    <groupBy>reptDevIpAddr </groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>eventRateEvent</name>
                    <singleConstraint>  eventType = "PH_SYSTEM_EVENTS_PER_SEC"  AND  phEventCategory = 3 </singleConstraint>
                </eventFilters>
                <eventFilters entityVersion="6" xmlId="EventFilter@49588188" ownerId="4600602" lastModified="1300490200162" id="49588188" custId="1" creationTime="1300490184875">
                    <groupBy>reptDevIpAddr </groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>1</index>
                    <name>eventRateEvent2</name>
                    <singleConstraint>  phEventCategory = 3  AND  eventType = "PH_SYSTEM_EVENTS_PER_SEC" </singleConstraint>
                </eventFilters>
                <filterOperators>
                    <rank>0</rank>
                    <type>NOT_FOLLOWED_BY</type>
                </filterOperators>
                <globalConstraint>eventRateEvent.reptDevIpAddr = eventRateEvent2.reptDevIpAddr</globalConstraint>
                <name>No Events Received From Collector in Last 10 Minutes (g)</name>
                <rawFOString>NOT_FOLLOWED_BY:0</rawFOString>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@49588187</eventFilters>
                <eventFilters>EventFilter@49588188</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>reptDevIpAddr = eventRateEvent.reptDevIpAddr</incidentAttrs>
                <incidentFireFreq>3600</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$No_Events_Received_From_Collector_in_Last_10_Minutes_g_</incidentType>
                <triggerEventAttrList>reptDevIpAddr</triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_206B" entityVersion="1" xmlId="Rule$PH_Rule_Perf_206B" ownerId="500150" lastModified="1300496033755" id="53332000" custId="0" creationTime="1300496033753">
                <activatedTime>1300496033754</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects that server swap memory has reached a critical level (free swap less than minimum swap)</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53331979" ownerId="500150" lastModified="1300496033754" id="53331979" custId="0" creationTime="1300496033754">
                    <groupBy>hostIpAddr, hostName</groupBy>
                    <groupConstraint>COUNT (*) &gt; 2 AND AVG(swapMemUtil) &gt; 90</groupConstraint>
                    <index>0</index>
                    <name>ServSwapMemCrit</name>
                    <singleConstraint>eventType = "PH_DEV_MON_SYS_MEM_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server)</singleConstraint>
                </eventFilters>
                <name>Server Swap Memory Critical</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53331979</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>hostIpAddr = ServSwapMemCrit.hostIpAddr, hostName = ServSwapMemCrit.hostName, swapMemUtil = ServSwapMemCrit.AVG(swapMemUtil)</incidentAttrs>
                <incidentFireFreq>3600</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_SWAP_MEM_CRIT</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,memName,hostName,hostIpAddr,swapMemUtil,freeSwapMemKB,memMinimumSwap,swapMemErrorString,rawEventMsg</triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="ACTIVATION" naturalId="PH_Rule_Perf_209B" entityVersion="3" xmlId="Rule$PH_Rule_Perf_209B" ownerId="500150" lastModified="1300525751118" id="53332001" custId="0" creationTime="1300496034514">
                <activatedTime>1300496034514</activatedTime>
                <active>false</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that server disk I/O latency has reached a warning level (between 20 and 50 msec) based on 2 successive readings in a 10 minute interval</description>
                <eventFilters entityVersion="1" xmlId="EventFilter@53331984" ownerId="500150" lastModified="1300525751123" id="53331984" custId="0" creationTime="1300496034514">
                    <groupBy>hostIpAddr,hostName,diskName</groupBy>
                    <groupConstraint>(( AVG ( devDiskRdLatency )&gt;= 20  AND AVG ( devDiskRdLatency )&lt; 50 ) OR( AVG ( devDiskWrLatency )&gt;= 20  AND AVG ( devDiskWrLatency )&lt; 50 )) AND COUNT ( * )&gt;= 2 </groupConstraint>
                    <index>0</index>
                    <name>ServDiskLatencyWarn</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_DISK_IO_UTIL"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server)  AND  diskName NOT IN ("/boot") </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Server Disk Latency Warning</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53331984</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = ServDiskLatencyWarn.hostIpAddr, hostName = ServDiskLatencyWarn.hostName, diskName = ServDiskLatencyWarn.diskName, devDiskRdLatency = ServDiskLatencyWarn.AVG(devDiskRdLatency), devDiskWrLatency = ServDiskLatencyWarn.AVG(devDiskWrLatency)
      </incidentAttrs>
                <incidentFireFreq>21600</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_SERVER_DISK_LATENCY_WARN</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,diskName,devDiskRdLatency,devDiskWrLatency,diskQLen,diskIOUtil,diskReadReqPerSec,diskWriteReqPerSec,diskReadKBytesPerSec,diskWriteKBytesPerSec</triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="ACTIVATION" naturalId="PH_Rule_Perf_209C" entityVersion="3" xmlId="Rule$PH_Rule_Perf_209C" ownerId="500150" lastModified="1300525738808" id="53332002" custId="0" creationTime="1300496034665">
                <activatedTime>1300496034665</activatedTime>
                <active>false</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that server disk I/O latency has reached a critical level (greater  than 50 msec) based on 2 successive readings in a 10 minute interval</description>
                <eventFilters entityVersion="1" xmlId="EventFilter@53331985" ownerId="500150" lastModified="1300525738812" id="53331985" custId="0" creationTime="1300496034665">
                    <groupBy>hostIpAddr,hostName,diskName</groupBy>
                    <groupConstraint>( AVG ( devDiskRdLatency )&gt;= 50  OR AVG ( devDiskWrLatency )&gt;= 50 ) AND COUNT ( * )&gt;= 2 </groupConstraint>
                    <index>0</index>
                    <name>ServDiskLatencyCrit</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_DISK_IO_UTIL"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server)  AND  diskName NOT IN ("/boot") </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Server Disk Latency Critical</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53331985</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = ServDiskLatencyCrit.hostIpAddr, hostName = ServDiskLatencyCrit.hostName, diskName = ServDiskLatencyCrit.diskName,devDiskRdLatency = ServDiskLatencyCrit.AVG(devDiskRdLatency), devDiskWrLatency = ServDiskLatencyCrit.AVG(devDiskWrLatency)
      </incidentAttrs>
                <incidentFireFreq>21600</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_SERVER_DISK_LATENCY_CRIT</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,diskName,devDiskRdLatency,devDiskWrLatency,diskQLen,diskIOUtil,diskReadReqPerSec,diskWriteReqPerSec,diskReadKBytesPerSec,diskWriteKBytesPerSec</triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_31" entityVersion="1" xmlId="Rule$PH_Rule_Avail_31" ownerId="500150" lastModified="1300496045770" id="53332003" custId="0" creationTime="1300496045760">
                <activatedTime>1300496045768</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects that a BGP neighbor is down</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332277" ownerId="500150" lastModified="1300496045768" id="53332277" custId="0" creationTime="1300496045768">
                    <groupBy>reptDevIpAddr,destIpAddr</groupBy>
                    <groupConstraint>COUNT(*) &gt;= 1</groupConstraint>
                    <index>0</index>
                    <name>BGPDown</name>
                    <singleConstraint>eventType = "IOS-BGP-ADJCHANGE-TO-DOWN"</singleConstraint>
                </eventFilters>
                <name>BGP Neighbor Down</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332277</eventFilters>
                <incidentAttrs>
        srcIpAddr = BGPDown.reptDevIpAddr,destIpAddr = BGPDown.destIpAddr 
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_BGP_NBR_DOWN</incidentType>
                <triggerEventAttrList> phRecvTime,reptDevIpAddr,srcIpAddr,destIpAddr,srcASNum,destASNum,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_32" entityVersion="1" xmlId="Rule$PH_Rule_Avail_32" ownerId="500150" lastModified="1300496045908" id="53332004" custId="0" creationTime="1300496045906">
                <activatedTime>1300496045906</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects that a OSPF neighbor is down</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332279" ownerId="500150" lastModified="1300496045906" id="53332279" custId="0" creationTime="1300496045906">
                    <groupBy>reptDevIpAddr,destIpAddr,srcIntfName</groupBy>
                    <groupConstraint>COUNT(*) &gt;= 1</groupConstraint>
                    <index>0</index>
                    <name>OSPFDown</name>
                    <singleConstraint>eventType = "IOS-OSPF-ADJCHG-TO-DOWN"</singleConstraint>
                </eventFilters>
                <name>OSPF Neighbor Down</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332279</eventFilters>
                <incidentAttrs>
        srcIpAddr = OSPFDown.reptDevIpAddr,srcIntfName = OSPFDown.srcIntfName,destIpAddr = OSPFDown.destIpAddr 
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_OSPF_NBR_DOWN</incidentType>
                <triggerEventAttrList> phRecvTime,reptDevIpAddr,srcIpAddr,destIpAddr,ospfAreaId,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_33" entityVersion="1" xmlId="Rule$PH_Rule_Avail_33" ownerId="500150" lastModified="1300496046043" id="53332005" custId="0" creationTime="1300496046040">
                <activatedTime>1300496046041</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects a storage hardware issue that is of warning criticality.</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332281" ownerId="500150" lastModified="1300496046041" id="53332281" custId="0" creationTime="1300496046041">
                    <groupBy>hostName,hostIpAddr,hwComponentName,hwComponentStatus</groupBy>
                    <groupConstraint>COUNT(*) &gt;= 1</groupConstraint>
                    <index>0</index>
                    <name>HwIssueWarn</name>
                    <singleConstraint>eventType IN (Group@PH_SYS_EVENT_HwProblem) AND eventSeverityCat = "MEDIUM" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Storage)</singleConstraint>
                </eventFilters>
                <name>Storage Hardware Warning</name>
                <triggerWindow>900</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332281</eventFilters>
                <incidentAttrs>
        hostName=HwIssueWarn.hostName,hostIpAddr=HwIssueWarn.hostIpAddr,hwComponentName=HwIssueWarn.hwComponentName,hwComponentStatus = HwIssueWarn.hwComponentStatus
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_STORAGE_HW_WARN</incidentType>
                <triggerEventAttrList> phRecvTime,hostName,hostIpAddr,hwStatusCode,hwComponentName,hwComponentStatus,hwFailReason,rawEventMsg</triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_34" entityVersion="1" xmlId="Rule$PH_Rule_Avail_34" ownerId="500150" lastModified="1300496046169" id="53332006" custId="0" creationTime="1300496046166">
                <activatedTime>1300496046166</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects a critical storage hardware alert.</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332282" ownerId="500150" lastModified="1300496046166" id="53332282" custId="0" creationTime="1300496046166">
                    <groupBy>hostName,hostIpAddr,hwComponentName,hwComponentStatus</groupBy>
                    <groupConstraint>COUNT(*) &gt;= 1</groupConstraint>
                    <index>0</index>
                    <name>HwIssueCrit</name>
                    <singleConstraint>eventType IN (Group@PH_SYS_EVENT_HwProblem) AND eventSeverityCat = "HIGH" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Storage)</singleConstraint>
                </eventFilters>
                <name>Storage Hardware Critical</name>
                <triggerWindow>900</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332282</eventFilters>
                <incidentAttrs>
        hostName=HwIssueCrit.hostName,hostIpAddr=HwIssueCrit.hostIpAddr,hwComponentName=HwIssueCrit.hwComponentName,hwComponentStatus = HwIssueCrit.hwComponentStatus
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_STORAGE_HW_CRITICAL</incidentType>
                <triggerEventAttrList> phRecvTime,hostName,hostIpAddr,hwStatusCode,hwComponentName,hwComponentStatus,hwFailReason,rawEventMsg</triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_35" entityVersion="1" xmlId="Rule$PH_Rule_Avail_35" ownerId="500150" lastModified="1300496046283" id="53332007" custId="0" creationTime="1300496046281">
                <activatedTime>1300496046281</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects that a host has logged in but not registered</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332283" ownerId="500150" lastModified="1300496046281" id="53332283" custId="0" creationTime="1300496046281">
                    <groupBy>srcName,srcIpAddr,srcWWN,destName,spPortName</groupBy>
                    <groupConstraint>COUNT(*) &gt;= 1</groupConstraint>
                    <index>0</index>
                    <name>UnregHost</name>
                    <singleConstraint>eventType = "PH_RULE_CLARION_UNREG_HOST"</singleConstraint>
                </eventFilters>
                <name>Unregistered EMC Clariion Host</name>
                <triggerWindow>900</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332283</eventFilters>
                <incidentAttrs>
        srcName=UnregHost.srcName,srcIpAddr=UnregHost.srcIpAddr,srcWWN=UnregHost.srcWWN,destName=UnregHost.destName,spPortName=UnregHost.spPortName
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_STORAGE_CLARION_UNREG_HOST</incidentType>
                <triggerEventAttrList> phRecvTime,srcName,srcIpAddr,srcWWN,destName,spPortName,destIpAddr,rawEventMsg</triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Mail_1" entityVersion="1" xmlId="Rule$PH_Rule_Mail_1" ownerId="500150" lastModified="1300496046447" id="53332008" custId="0" creationTime="1300496046446">
                <activatedTime>1300496046446</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects that one or more of SMTP Server queues have crossed critical threshold</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332284" ownerId="500150" lastModified="1300496046446" id="53332284" custId="0" creationTime="1300496046446">
                    <groupBy>hostName</groupBy>
                    <groupConstraint>COUNT (*) &gt;= 2 AND (AVG(exchCatQueue) &gt;= 10 OR AVG(exchSMTPLocalQueue) &gt;= 1000 OR AVG(exchSMTPRemoteQueue) &gt; 1000)</groupConstraint>
                    <index>0</index>
                    <name>QueueHigh</name>
                    <singleConstraint>eventType = "PH_DEV_MON_APP_MSEXCH_SMTP_MET"</singleConstraint>
                </eventFilters>
                <name>Exchange Server SMTP Queue high</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332284</eventFilters>
                <incidentAttrs>
        hostName = QueueHigh.hostName, 
	exchCatQueue = QueueHigh.AVG(exchCatQueue),
	exchSMTPLocalQueue = QueueHigh.AVG(exchSMTPLocalQueue),
	exchSMTPRemoteQueue = QueueHigh.AVG(exchSMTPRemoteQueue)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_EXCH_SMTP_QUEUE_CRIT</incidentType>
                <triggerEventAttrList> phRecvTime,eventType, hostName, exchCatQueue,exchSMTPLocalQueue,exchSMTPRemoteQueue,exchSMTPInConn,exchSMTPOutConn,exchSMTPRetries,exchSMTPLocalRetryQueue,exchSMTPRemoteRetryQueue</triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Mail_2" entityVersion="1" xmlId="Rule$PH_Rule_Mail_2" ownerId="500150" lastModified="1300496046583" id="53332009" custId="0" creationTime="1300496046582">
                <activatedTime>1300496046583</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects that one or more of Exchange mailbox store queues have crossed critical threshold</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332285" ownerId="500150" lastModified="1300496046583" id="53332285" custId="0" creationTime="1300496046583">
                    <groupBy>hostName,exchMboxName</groupBy>
                    <groupConstraint>COUNT (*) &gt;= 2 AND (AVG(exchMboxSendQueue) &gt;= 500 OR AVG(exchMboxRecvQueue) &gt;= 500)</groupConstraint>
                    <index>0</index>
                    <name>QueueHigh</name>
                    <singleConstraint>eventType = "PH_DEV_MON_APP_MSEXCH_MBOX_MET"</singleConstraint>
                </eventFilters>
                <name>Exchange Server Mailbox Queue high</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332285</eventFilters>
                <incidentAttrs>
        hostName = QueueHigh.hostName, 
	exchMboxName = QueueHigh.exchMboxName,
	exchMboxSendQueue = QueueHigh.AVG(exchMboxSendQueue),
	exchMboxRecvQueue = QueueHigh.AVG(exchMboxRecvQueue)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_EXCH_MBOX_QUEUE_CRIT</incidentType>
                <triggerEventAttrList> phRecvTime,eventType, hostName, exchMboxName,exchMboxSendQueue,exchMboxRecvQueue,exchMboxSentMsg,exchMboxSubmitMsg,exchMboxDelivMsg,exchMboxActiveUserCount,exchMboxPeakUserCount</triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Mail_3" entityVersion="1" xmlId="Rule$PH_Rule_Mail_3" ownerId="500150" lastModified="1300496046691" id="53332010" custId="0" creationTime="1300496046690">
                <activatedTime>1300496046690</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects a spike in exchange server RPC requests</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332286" ownerId="500150" lastModified="1300496046690" id="53332286" custId="0" creationTime="1300496046690">
                    <groupBy>hostName</groupBy>
                    <groupConstraint>COUNT (*) &gt;= 2 AND AVG(exchRPCReq) &gt;= 30</groupConstraint>
                    <index>0</index>
                    <name>RPCHigh</name>
                    <singleConstraint>eventType = "PH_DEV_MON_APP_MSEXCH_MET"</singleConstraint>
                </eventFilters>
                <name>Exchange Server RPC request high</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332286</eventFilters>
                <incidentAttrs>
        hostName = RPCHigh.hostName, 
	exchRPCReq = RPCHigh.AVG(exchRPCReq)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_EXCH_RPC_REQ_CRIT</incidentType>
                <triggerEventAttrList> phRecvTime,eventType, hostName, exchRPCReq,exchRPCAvgLatency,exchRPCOpsPerSec,exchRPCReqPeak,exchUserCount,exchActiveUserCount,exchPeakUserCount,exchActiveConnCount,exchMaxConn</triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="ACTIVATION" naturalId="PH_Rule_Mail_4" entityVersion="3" xmlId="Rule$PH_Rule_Mail_4" ownerId="500150" lastModified="1300909379116" id="53332011" custId="0" creationTime="1300496046803">
                <activatedTime>1300496046803</activatedTime>
                <active>false</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects excessive exchange server RPC request latency</description>
                <eventFilters entityVersion="1" xmlId="EventFilter@53332287" ownerId="500150" lastModified="1300909379121" id="53332287" custId="0" creationTime="1300496046803">
                    <groupBy>hostName</groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 2  AND AVG ( exchRPCAvgLatency )&gt;= 50 </groupConstraint>
                    <index>0</index>
                    <name>RPCLatencyHigh</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_APP_MSEXCH_MET" </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Exchange Server RPC latency high</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332287</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>
        hostName = RPCLatencyHigh.hostName, 
	exchRPCAvgLatency = RPCLatencyHigh.AVG(exchRPCAvgLatency)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_EXCH_RPC_LATENCY_CRIT</incidentType>
                <triggerEventAttrList> phRecvTime,eventType, hostName, exchRPCReq,exchRPCAvgLatency,exchRPCOpsPerSec,exchRPCReqPeak,exchUserCount,exchActiveUserCount,exchPeakUserCount,exchActiveConnCount,exchMaxConn</triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="ACTIVATION" naturalId="PH_Rule_Environ_1" entityVersion="4" xmlId="Rule$PH_Rule_Environ_1" ownerId="500150" lastModified="1300729853772" id="53332012" custId="0" creationTime="1300496052038">
                <activatedTime>1300496052039</activatedTime>
                <active>false</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that key UPS operational etrics are outside of normal operational range</description>
                <eventFilters entityVersion="2" xmlId="EventFilter@53332381" ownerId="500150" lastModified="1300729853776" id="53332381" custId="0" creationTime="1300496052039">
                    <groupBy>hostIpAddr, hostName</groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 2  AND( AVG ( upsAdvOutputFreq )&lt;= 55  OR AVG ( upsAdvOutputFreq )&gt;= 65  OR AVG ( upsAdvOutputVoltage )&lt; 110  OR AVG ( upsAdvOutputVoltage )&gt; 125  OR AVG ( upsAdvOutputLoad )&gt;= 50 )</groupConstraint>
                    <index>0</index>
                    <name>LowBattery1</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_UPS_METRIC" </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>UPS Battery Metrics Critical</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332381</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>
	hostIpAddr = LowBattery1.hostIpAddr,
        hostName = LowBattery1.hostName, 
	upsAdvOutputFreq = LowBattery1.AVG(upsAdvOutputFreq),
	upsAdvOutputVoltage = LowBattery1.AVG(upsAdvOutputVoltage),
	upsAdvOutputLoad = LowBattery1.AVG(upsAdvOutputLoad)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_UPS_BATTERY_METRIC_CRIT</incidentType>
                <triggerEventAttrList> phRecvTime,eventType, hostName, upsRemainBatteryChargePct,upsBatteryStatus,upsReplaceBatteryIndicator,upsTimeOnBattery,upsBasicOutputStatus,upsAdvOutputLoad,upsAdvOutputVoltage,upsAdvOutputFreq </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="ACTIVATION" naturalId="PH_Rule_Environ_2" entityVersion="3" xmlId="Rule$PH_Rule_Environ_2" ownerId="500150" lastModified="1300730014476" id="53332013" custId="0" creationTime="1300496052195">
                <activatedTime>1300496052196</activatedTime>
                <active>false</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that key UPS battery status are reflecting critical state</description>
                <eventFilters entityVersion="1" xmlId="EventFilter@53332382" ownerId="500150" lastModified="1300730014481" id="53332382" custId="0" creationTime="1300496052196">
                    <groupBy>hostIpAddr, hostName</groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 1  AND( AVG ( upsBatteryStatus )&gt; 2  OR AVG ( upsRemainBatteryChargePct )&lt; 50  OR AVG ( upsTimeOnBattery )&gt;= 120  OR AVG ( upsBasicOutputStatus )&gt; 2  OR AVG ( upsReplaceBatteryIndicator )&gt; 1 )</groupConstraint>
                    <index>0</index>
                    <name>LowBattery2</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_UPS_METRIC"  AND(  upsBatteryStatus = 3  OR  upsBatteryStatus = 4  OR  upsRemainBatteryChargePct &lt; 50  OR  upsTimeOnBattery &gt;= 120  OR  upsBasicOutputStatus != 2  OR  upsReplaceBatteryIndicator = 2 )</singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>UPS Battery Status Critical</name>
                <triggerWindow>120</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332382</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>
	hostIpAddr = LowBattery2.hostIpAddr,
        hostName = LowBattery2.hostName,
	upsTimeOnBattery = LowBattery2.AVG(upsTimeOnBattery),
	upsBatteryStatus =  LowBattery2.AVG(upsBatteryStatus), 
	upsRemainBatteryChargePct = LowBattery2.AVG(upsRemainBatteryChargePct), 
	upsReplaceBatteryIndicator = LowBattery2.AVG(upsReplaceBatteryIndicator),
	upsBasicOutputStatus = LowBattery2.AVG(upsBasicOutputStatus)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_UPS_BATTERY_STAT_CRIT</incidentType>
                <triggerEventAttrList> phRecvTime,eventType, hostName, upsRemainBatteryChargePct,upsBatteryStatus,upsReplaceBatteryIndicator,upsTimeOnBattery,upsBasicOutputStatus,upsAdvOutputLoad,upsAdvOutputVoltage,upsAdvOutputFreq </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Environ_3" entityVersion="1" xmlId="Rule$PH_Rule_Environ_3" ownerId="500150" lastModified="1300496052328" id="53332014" custId="0" creationTime="1300496052327">
                <activatedTime>1300496052327</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects that HVAC temperature is less than 5 degree Fahrenheit from upper threshold</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332383" ownerId="500150" lastModified="1300496052327" id="53332383" custId="0" creationTime="1300496052327">
                    <groupBy>hostName,hostIpAddr</groupBy>
                    <groupConstraint>COUNT (*) &gt;= 2 AND AVG(envTempOffHighDegF) &lt; 5</groupConstraint>
                    <index>0</index>
                    <name>HVAC_Hot</name>
                    <singleConstraint>eventType = "PH_DEV_MON_HVAC_LIEBERT_METRIC"</singleConstraint>
                </eventFilters>
                <name>HVAC temp high</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332383</eventFilters>
                <incidentAttrs>
	hostIpAddr = HVAC_Hot.hostIpAddr,
        hostName = HVAC_Hot.hostName,
	envTempOffHighDegF = HVAC_Hot.AVG(envTempOffHighDegF)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_HVAC_TOO_HOT</incidentType>
                <triggerEventAttrList> phRecvTime,eventType, hostName, envTempDegF,envTempHighThreshDegF,envTempLowThreshDegF,envTempOffHighDegF,envTempOffLowDegF </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Environ_4" entityVersion="1" xmlId="Rule$PH_Rule_Environ_4" ownerId="500150" lastModified="1300496052453" id="53332015" custId="0" creationTime="1300496052452">
                <activatedTime>1300496052452</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects that HVAC temperature is less than 5 degree Fahrenheit from the lower threshold</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332384" ownerId="500150" lastModified="1300496052452" id="53332384" custId="0" creationTime="1300496052452">
                    <groupBy>hostName,hostIpAddr</groupBy>
                    <groupConstraint>COUNT (*) &gt;= 2 AND AVG(envTempOffLowDegF) &lt; 5</groupConstraint>
                    <index>0</index>
                    <name>HVAC_Cold</name>
                    <singleConstraint>eventType = "PH_DEV_MON_HVAC_LIEBERT_METRIC"</singleConstraint>
                </eventFilters>
                <name>HVAC temp low</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332384</eventFilters>
                <incidentAttrs>
	hostIpAddr = HVAC_Cold.hostIpAddr,
        hostName = HVAC_Cold.hostName,
	envTempOffLowDegF = HVAC_Cold.AVG(envTempOffLowDegF)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_HVAC_TOO_COLD</incidentType>
                <triggerEventAttrList> phRecvTime,eventType, hostName, envTempDegF,envTempHighThreshDegF,envTempLowThreshDegF,envHumidityRel,envHumidityRelHighThresh,envHumidityRelLowThresh </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Environ_5" entityVersion="1" xmlId="Rule$PH_Rule_Environ_5" ownerId="500150" lastModified="1300496052589" id="53332016" custId="0" creationTime="1300496052588">
                <activatedTime>1300496052588</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects that HVAC relative humidity is less than 5 units from upper threshold</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332385" ownerId="500150" lastModified="1300496052588" id="53332385" custId="0" creationTime="1300496052588">
                    <groupBy>hostName,hostIpAddr</groupBy>
                    <groupConstraint>COUNT (*) &gt;= 2 AND AVG(envHumidityOffHigh) &lt; 5</groupConstraint>
                    <index>0</index>
                    <name>HVAC_Humid</name>
                    <singleConstraint>eventType = "PH_DEV_MON_HVAC_LIEBERT_METRIC"</singleConstraint>
                </eventFilters>
                <name>HVAC humidity high</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332385</eventFilters>
                <incidentAttrs>
	hostIpAddr = HVAC_Humid.hostIpAddr,
        hostName = HVAC_Humid.hostName,
	envHumidityOffHigh = HVAC_Humid.AVG(envHumidityOffHigh)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_HVAC_TOO_HUMID</incidentType>
                <triggerEventAttrList> phRecvTime,eventType, hostName, envTempDegF,envTempHighThreshDegF,envTempLowThreshDegF,envHumidityRel,envHumidityRelHighThresh,envHumidityRelLowThresh </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Environ_6" entityVersion="1" xmlId="Rule$PH_Rule_Environ_6" ownerId="500150" lastModified="1300496052710" id="53332017" custId="0" creationTime="1300496052709">
                <activatedTime>1300496052709</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects that HVAC relative humidity is less than 5 units from lower threshold</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332386" ownerId="500150" lastModified="1300496052709" id="53332386" custId="0" creationTime="1300496052709">
                    <groupBy>hostName,hostIpAddr</groupBy>
                    <groupConstraint>COUNT (*) &gt;= 2 AND AVG(envHumidityOffLow) &lt; 5</groupConstraint>
                    <index>0</index>
                    <name>HVAC_Humid</name>
                    <singleConstraint>eventType = "PH_DEV_MON_HVAC_LIEBERT_METRIC"</singleConstraint>
                </eventFilters>
                <name>HVAC humidity low</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332386</eventFilters>
                <incidentAttrs>
	hostIpAddr = HVAC_Humid.hostIpAddr,
        hostName = HVAC_Humid.hostName,
	envHumidityOffLow = HVAC_Humid.AVG(envHumidityOffLow)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_HVAC_TOO_DRY</incidentType>
                <triggerEventAttrList> phRecvTime,eventType, hostName, envTempDegF,envTempHighThreshDegF,envTempLowThreshDegF,envHumidityRel,envHumidityRelHighThresh,envHumidityRelLowThresh </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Environ_7" entityVersion="1" xmlId="Rule$PH_Rule_Environ_7" ownerId="500150" lastModified="1300496052825" id="53332018" custId="0" creationTime="1300496052824">
                <activatedTime>1300496052825</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects that Voltage total harmonic distortion is more than 0.15 pct</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332387" ownerId="500150" lastModified="1300496052824" id="53332387" custId="0" creationTime="1300496052824">
                    <groupBy>hostName,hostIpAddr</groupBy>
                    <groupConstraint>COUNT (*) &gt;= 2 AND (AVG(outputVxTHD) &gt;= 15 OR AVG(outputVyTHD) &gt; 15 OR AVG(outputVzTHD) &gt;= 15)</groupConstraint>
                    <index>0</index>
                    <name>FPC_VHD_high</name>
                    <singleConstraint>eventType = "PH_DEV_MON_FPC_LIEBERT_METRIC"</singleConstraint>
                </eventFilters>
                <name>FPC Voltage THD high</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332387</eventFilters>
                <incidentAttrs>
	hostIpAddr = FPC_VHD_high.hostIpAddr,
        hostName = FPC_VHD_high.hostName,
	outputVxTHD = FPC_VHD_high.AVG(outputVxTHD),
	outputVyTHD = FPC_VHD_high.AVG(outputVyTHD),
	outputVzTHD = FPC_VHD_high.AVG(outputVzTHD)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_FPC_VHD_HIGH</incidentType>
                <triggerEventAttrList> phRecvTime,eventType, hostName,outputVoltageXNVolts,outputVoltageYNVolts,outputVoltageZNVolts,outputVxTHD,outputVyTHD,outputVzTHD </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Environ_8" entityVersion="1" xmlId="Rule$PH_Rule_Environ_8" ownerId="500150" lastModified="1300496053034" id="53332019" custId="0" creationTime="1300496053033">
                <activatedTime>1300496053033</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects that current total harmonic distortion is more than 0.15 pct</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332388" ownerId="500150" lastModified="1300496053033" id="53332388" custId="0" creationTime="1300496053033">
                    <groupBy>hostName,hostIpAddr</groupBy>
                    <groupConstraint>COUNT (*) &gt;= 2 AND (AVG(outputLxTHD) &gt;= 5 OR AVG(outputLyTHD) &gt; 5 OR AVG(outputLzTHD) &gt;= 5)</groupConstraint>
                    <index>0</index>
                    <name>FPC_CHD_high</name>
                    <singleConstraint>eventType = "PH_DEV_MON_FPC_LIEBERT_METRIC"</singleConstraint>
                </eventFilters>
                <name>FPC Current THD high</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332388</eventFilters>
                <incidentAttrs>
	hostIpAddr = FPC_CHD_high.hostIpAddr,
        hostName = FPC_CHD_high.hostName,
	outputLxTHD = FPC_CHD_high.AVG(outputLxTHD),
	outputLyTHD = FPC_CHD_high.AVG(outputLyTHD),
	outputLzTHD = FPC_CHD_high.AVG(outputLzTHD)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_FPC_CHD_HIGH</incidentType>
                <triggerEventAttrList> phRecvTime,eventType, hostName, outputCurrentXAmps,outputCurrentYAmps,outputCurrentZAmps,outputLxTHD,outputLyTHD,outputLzTHD </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Environ_9" entityVersion="1" xmlId="Rule$PH_Rule_Environ_9" ownerId="500150" lastModified="1300496053135" id="53332020" custId="0" creationTime="1300496053134">
                <activatedTime>1300496053134</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects that ground current is more than 0.12 amps</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332389" ownerId="500150" lastModified="1300496053134" id="53332389" custId="0" creationTime="1300496053134">
                    <groupBy>hostName,hostIpAddr</groupBy>
                    <groupConstraint>COUNT (*) &gt;= 2 AND AVG(groundCurrentAmps) &gt;= .12</groupConstraint>
                    <index>0</index>
                    <name>FPC_GC_high</name>
                    <singleConstraint>eventType = "PH_DEV_MON_FPC_LIEBERT_METRIC"</singleConstraint>
                </eventFilters>
                <name>FPC ground current high</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332389</eventFilters>
                <incidentAttrs>
	hostIpAddr = FPC_GC_high.hostIpAddr,
        hostName = FPC_GC_high.hostName,
	groundCurrentAmps = FPC_GC_high.AVG(groundCurrentAmps)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_FPC_GROUND_CURR_HIGH</incidentType>
                <triggerEventAttrList> phRecvTime,eventType, hostName, neutralCurrentAmps,groundCurrentAmps </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_PH_9" entityVersion="1" xmlId="Rule$PH_Rule_Avail_PH_9" ownerId="500150" lastModified="1300496053974" id="53332021" custId="0" creationTime="1300496053973">
                <activatedTime>1300496053973</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects that system worker is down.</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332398" ownerId="500150" lastModified="1300496053973" id="53332398" custId="0" creationTime="1300496053973">
                    <groupBy>hostIpAddr</groupBy>
                    <groupConstraint>COUNT (*) &gt;= 1</groupConstraint>
                    <index>0</index>
                    <name>AOWorkerDown</name>
                    <singleConstraint>eventType = "PH_WORKER_DOWN"</singleConstraint>
                </eventFilters>
                <name>System Worker Down</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332398</eventFilters>
                <incidentAttrs>
        hostIpAddr = AOWorkerDown.hostIpAddr
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$PH_RULE_ACCELOPS_WORKER_DOWN</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,hostIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataCreationType="SYSTEM" dataChangeType="SYSTEM" naturalId="PH_Rule_Change_8" entityVersion="1" xmlId="Rule$PH_Rule_Change_8" ownerId="500150" lastModified="1300496055227" id="53332022" custId="0" creationTime="1300496055226">
                <activatedTime>1300496055227</activatedTime>
                <active>true</active>
                <custInclusive>true</custInclusive>
                <description>Detects that a user modified either the content or the attributes of a file or directory</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53332462" ownerId="500150" lastModified="1300496055227" id="53332462" custId="0" creationTime="1300496055227">
                    <groupBy>reptDevIpAddr,user,osObjType,osObjAction,osObjName,targetOsObjType,targetOsObjName</groupBy>
                    <groupConstraint>COUNT (*) &gt;= 1</groupConstraint>
                    <index>0</index>
                    <name>FileChange</name>
                    <singleConstraint>eventType = "LINUX_FILE_CHANGE"</singleConstraint>
                </eventFilters>
                <name>Linux file change</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53332462</eventFilters>
                <incidentAttrs>
        hostIpAddr = FileChange.reptDevIpAddr, user = FileChange.user, osObjType = FileChange.osObjType, osObjAction = FileChange.osObjAction, osObjName = FileChange.osObjName, targetOsObjType =FileChange.targetOsObjType, targetOsObjName = FileChange.targetOsObjName 
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$PH_RULE_LINUX_FILE_CHANGE</incidentType>
                <triggerEventAttrList> phRecvTime,reptDevIpAddr,user,osObjType,osObjAction,osObjName,targetOsObjType,targetOsObjName</triggerEventAttrList>
            </rule>
            <rule dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_24__DUP_1_1300512737821" entityVersion="9" xmlId="Rule$PH_Rule_Avail_24__DUP_1_1300512737821" ownerId="4600602" lastModified="1300512913654" id="53516450" custId="0" creationTime="1300512737821">
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects a critical server hardware alert.</description>
                <eventFilters entityVersion="4" xmlId="EventFilter@53516500" ownerId="4600602" lastModified="1300512913666" id="53516500" custId="1" creationTime="1300512737822">
                    <groupBy>hostName,hostIpAddr,hwComponentName,hwComponentStatus</groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>HwIssueCrit</name>
                    <singleConstraint>  eventType IN (Group@PH_SYS_EVENT_HwProblem)  AND  eventSeverityCat = "HIGH"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Server Hardware Critical (g)</name>
                <triggerWindow>900</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53516500</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>
        hostName=HwIssueCrit.hostName,hostIpAddr=HwIssueCrit.hostIpAddr,hwComponentName=HwIssueCrit.hwComponentName,hwComponentStatus = HwIssueCrit.hwComponentStatus
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$Server_Hardware_Critical_g_</incidentType>
                <triggerEventAttrList> phRecvTime,hostName,hostIpAddr,hwStatusCode,hwComponentName,hwComponentStatus,hwFailReason,rawEventMsg</triggerEventAttrList>
            </rule>
            <rule dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_22__DUP_1_1300512939542" entityVersion="9" xmlId="Rule$PH_Rule_Avail_22__DUP_1_1300512939542" ownerId="4600602" lastModified="1300512973792" id="53516451" custId="0" creationTime="1300512939542">
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects a critical network device hardware alert.</description>
                <eventFilters entityVersion="1" xmlId="EventFilter@53516501" ownerId="4600602" lastModified="1300512973796" id="53516501" custId="1" creationTime="1300512939550">
                    <groupBy>hostName,hostIpAddr,hwComponentName,hwComponentStatus</groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>HwIssueCrit</name>
                    <singleConstraint>  eventType IN (Group@PH_SYS_EVENT_HwProblem)  AND  eventSeverityCat = "HIGH"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Network) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Network Device Hardware Critical (g)</name>
                <triggerWindow>900</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53516501</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>
        hostName=HwIssueCrit.hostName,hostIpAddr=HwIssueCrit.hostIpAddr,hwComponentName=HwIssueCrit.hwComponentName,hwComponentStatus = HwIssueCrit.hwComponentStatus
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$Network_Device_Hardware_Critical_g_</incidentType>
                <triggerEventAttrList> phRecvTime,hostName,hostIpAddr,hwStatusCode,hwComponentName,hwComponentStatus,hwFailReason,rawEventMsg</triggerEventAttrList>
            </rule>
            <rule dataChangeType="SYSTEM" naturalId="PH_Rule_Environ_2__DUP_1_1300749611599" entityVersion="13" xmlId="Rule$PH_Rule_Environ_2__DUP_1_1300749611599" ownerId="4600602" lastModified="1300835834852" id="53516454" custId="0" creationTime="1300749611599">
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that UPS batteries need replacing.</description>
                <eventFilters entityVersion="8" xmlId="EventFilter@53516504" ownerId="4600602" lastModified="1300835834857" id="53516504" custId="1" creationTime="1300749611599">
                    <groupBy>hostIpAddr ,hostName </groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 1  AND AVG ( upsReplaceBatteryIndicator )&gt; 1 </groupConstraint>
                    <index>0</index>
                    <name>LowBattery2</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_UPS_METRIC" </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>UPS Status Critical : Replace Battery (g)</name>
                <triggerWindow>120</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53516504</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostIpAddr = LowBattery2.hostIpAddr, hostName = LowBattery2.hostName, upsReplaceBatteryIndicator = LowBattery2.AVG(upsReplaceBatteryIndicator)</incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$UPS_Battery_Status_Critical_Replace_Battery_g_</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, hostName, upsRemainBatteryChargePct, upsBatteryStatus, upsReplaceBatteryIndicator, upsTimeOnBattery, upsBasicOutputStatus, upsAdvOutputLoad, upsAdvOutputVoltage, upsAdvOutputFreq</triggerEventAttrList>
            </rule>
            <rule dataChangeType="SYSTEM" naturalId="PH_Rule_Environ_1__DUP_1_1300749743725" entityVersion="20" xmlId="Rule$PH_Rule_Environ_1__DUP_1_1300749743725" ownerId="4600602" lastModified="1301613454643" id="53516457" custId="0" creationTime="1300749743726">
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that key UPS operational metrics are outside of normal operational range.  Normal Ranges are Volts: 110-129 or 199-230, Freq. 55 to 65Hz.</description>
                <eventFilters entityVersion="15" xmlId="EventFilter@53516507" ownerId="4600602" lastModified="1301613454671" id="53516507" custId="1" creationTime="1300749743726">
                    <groupBy>hostIpAddr ,hostName ,upsAdvOutputVoltage ,upsAdvOutputFreq </groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 2  AND(( AVG ( upsAdvOutputFreq )&lt;= 55  OR AVG ( upsAdvOutputFreq )&gt;= 65  OR AVG ( upsAdvOutputVoltage )&lt;= 109  OR( AVG ( upsAdvOutputVoltage )&gt;= 130  AND AVG ( upsAdvOutputVoltage )&lt; 200 ) OR AVG ( upsAdvOutputVoltage )&gt;= 230 ))</groupConstraint>
                    <index>0</index>
                    <name>LowBattery1</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_UPS_METRIC" </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>UPS Status Warning : Abnormal Power Fluctuation (g)</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53516507</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostIpAddr = LowBattery1.hostIpAddr, hostName = LowBattery1.hostName, upsAdvOutputFreq = LowBattery1.AVG(upsAdvOutputFreq), upsAdvOutputVoltage = LowBattery1.AVG(upsAdvOutputVoltage)</incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$UPS_Status_Warning_Abnormal_Power_Fluctuation_g_</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, hostName, upsAdvOutputVoltage, upsAdvOutputFreq, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule dataChangeType="SYSTEM" naturalId="PH_Rule_Environ_2__DUP_1_1300749887600" entityVersion="18" xmlId="Rule$PH_Rule_Environ_2__DUP_1_1300749887600" ownerId="4600602" lastModified="1300938041868" id="53516458" custId="0" creationTime="1300749887600">
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that UPS is currently on battery power.</description>
                <eventFilters entityVersion="11" xmlId="EventFilter@53516508" ownerId="4600602" lastModified="1300938041874" id="53516508" custId="1" creationTime="1300749887600">
                    <groupBy>hostIpAddr ,hostName </groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 1  AND( AVG ( upsTimeOnBattery )&gt;= 120  AND COUNT ( upsBasicOutputStatus )= 3 )</groupConstraint>
                    <index>0</index>
                    <name>LowBattery2</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_UPS_METRIC"  AND  upsBasicOutputStatus = 3 </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>UPS Status Critical : UPS Running on Battery Power (g)</name>
                <triggerWindow>180</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53516508</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostIpAddr = LowBattery2.hostIpAddr, hostName = LowBattery2.hostName, upsTimeOnBattery = LowBattery2.AVG(upsTimeOnBattery), upsBasicOutputStatus = LowBattery2.AVG(upsBasicOutputStatus)</incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$UPS_Status_Critical_UPS_Running_on_Battery_Power_g_</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, hostName, upsRemainBatteryChargePct, upsBatteryStatus, upsReplaceBatteryIndicator, upsTimeOnBattery, upsBasicOutputStatus, upsAdvOutputLoad, upsAdvOutputVoltage, upsAdvOutputFreq</triggerEventAttrList>
            </rule>
            <rule dataChangeType="SYSTEM" naturalId="PH_Rule_Environ_2__DUP_1_1300750120537" entityVersion="12" xmlId="Rule$PH_Rule_Environ_2__DUP_1_1300750120537" ownerId="4600602" lastModified="1300834982310" id="53516459" custId="0" creationTime="1300750120537">
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that UPS battery remaining is less than 80%.</description>
                <eventFilters entityVersion="7" xmlId="EventFilter@53516509" ownerId="4600602" lastModified="1300834982329" id="53516509" custId="1" creationTime="1300750120537">
                    <groupBy>hostIpAddr ,hostName </groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 1  AND AVG ( upsRemainBatteryChargePct )&lt; 80 </groupConstraint>
                    <index>0</index>
                    <name>LowBattery2</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_UPS_METRIC" </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>UPS Status Critical : Battery Low (g)</name>
                <triggerWindow>120</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53516509</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostIpAddr = LowBattery2.hostIpAddr, hostName = LowBattery2.hostName, upsRemainBatteryChargePct = LowBattery2.AVG(upsRemainBatteryChargePct)</incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$UPS_Status_Critical_Battery_Low_g_</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, hostName, upsRemainBatteryChargePct, upsBatteryStatus, upsReplaceBatteryIndicator, upsTimeOnBattery, upsBasicOutputStatus, upsAdvOutputLoad, upsAdvOutputVoltage, upsAdvOutputFreq</triggerEventAttrList>
            </rule>
            <rule dataChangeType="SYSTEM" naturalId="PH_Rule_Environ_1__DUP_1_1300750268024" entityVersion="16" xmlId="Rule$PH_Rule_Environ_1__DUP_1_1300750268024" ownerId="4600602" lastModified="1300899453709" id="53516460" custId="0" creationTime="1300750268024">
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that key UPS operational metrics are outside of normal operational range.  Load &gt;= 90%.</description>
                <eventFilters entityVersion="11" xmlId="EventFilter@53516510" ownerId="4600602" lastModified="1300899453724" id="53516510" custId="1" creationTime="1300750268024">
                    <groupBy>hostIpAddr ,hostName </groupBy>
                    <groupConstraint>( COUNT ( * )&gt;= 1  AND AVG ( upsAdvOutputLoad )&gt; 90 )</groupConstraint>
                    <index>0</index>
                    <name>LowBattery1</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_UPS_METRIC" </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>UPS Status Warning : UPS greater than 90% load (g)</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53516510</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostIpAddr = LowBattery1.hostIpAddr, hostName = LowBattery1.hostName, upsAdvOutputLoad = LowBattery1.AVG(upsAdvOutputLoad)</incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$UPS_Status_Warning_UPS_greater_than_90_load_g</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, hostName, upsRemainBatteryChargePct, upsBatteryStatus, upsReplaceBatteryIndicator, upsTimeOnBattery, upsBasicOutputStatus, upsAdvOutputLoad, upsAdvOutputVoltage, upsAdvOutputFreq</triggerEventAttrList>
            </rule>
            <rule dataChangeType="SYSTEM" naturalId="PH_Rule_Environ_1__DUP_1_1300750444542" entityVersion="15" xmlId="Rule$PH_Rule_Environ_1__DUP_1_1300750444542" ownerId="4600602" lastModified="1300835811704" id="53516462" custId="0" creationTime="1300750444542">
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that key UPS operational metrics are outside of normal operational range.  Load &gt;= 100%</description>
                <eventFilters entityVersion="8" xmlId="EventFilter@53516512" ownerId="4600602" lastModified="1300835811707" id="53516512" custId="1" creationTime="1300750444542">
                    <groupBy>hostIpAddr ,hostName </groupBy>
                    <groupConstraint>( COUNT ( * )&gt;= 2  AND AVG ( upsAdvOutputLoad )&gt;= 100 )</groupConstraint>
                    <index>0</index>
                    <name>LowBattery1</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_UPS_METRIC" </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>UPS Status Critical : UPS at 100% Load (g)</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53516512</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostIpAddr = LowBattery1.hostIpAddr, hostName = LowBattery1.hostName, upsAdvOutputLoad = LowBattery1.AVG(upsAdvOutputLoad)</incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$UPS_Status_Critical_UPS_at_100_Load_g_</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, hostName, upsRemainBatteryChargePct, upsBatteryStatus, upsReplaceBatteryIndicator, upsTimeOnBattery, upsBasicOutputStatus, upsAdvOutputLoad, upsAdvOutputVoltage, upsAdvOutputFreq</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_SYS_Rule_1300838190692" entityVersion="18" xmlId="Rule$PH_SYS_Rule_1300838190692" ownerId="4600602" lastModified="1314067723746" id="53516464" custId="0" creationTime="1300838190692">
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>false</custInclusive>
                <description>Detects when 4 backup failures happen consecutively.  This rule will auto-clear the generated events after 1 hour and 5 minutes if the original rule does not fire.</description>
                <eventFilters entityVersion="15" xmlId="EventFilter@53516538" ownerId="4600602" lastModified="1314067723757" id="53516538" custId="1" creationTime="1300838190692">
                    <groupBy>hostName ,imageFile ,msg ,backupStatus </groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 4 </groupConstraint>
                    <index>0</index>
                    <name>BackupFailure</name>
                    <singleConstraint>  eventType = "Win-App-ShadowProtectSvc-1121" </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Monarch Backup Failure (g)</name>
                <triggerWindow>3900</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53516538</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>backupStatus = BackupFailure.backupStatus, hostName = BackupFailure.hostName, msg = BackupFailure.msg, imageFile = BackupFailure.imageFile</incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$Backup_Failure_g_</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, deviceTime, hostName, backupStatus, msg, imageFile, rawEventMsg, *</triggerEventAttrList>
            </rule>
            <rule dataChangeType="SYSTEM" naturalId="PH_Rule_Flow_14__DUP_1_1300854013891" entityVersion="4" xmlId="Rule$PH_Rule_Flow_14__DUP_1_1300854013891" ownerId="4600602" lastModified="1300854014161" id="53516465" custId="0" creationTime="1300854013892">
                <active>false</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects a scenario where a host, has a very high frequency of denied DNS traffic.</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@53516539" ownerId="4600602" lastModified="1300854013892" id="53516539" custId="1" creationTime="1300854013892">
                    <groupBy>srcIpAddr</groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 100 </groupConstraint>
                    <index>0</index>
                    <name>DeniedDNS</name>
                    <singleConstraint>  destIpPort = 53  AND  eventType IN (Group@PH_SYS_EVENT_DenyTraffic) </singleConstraint>
                </eventFilters>
                <name>Excessive Denied DNS Queries (g)</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53516539</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>
        srcIpAddr = DeniedDNS.srcIpAddr, incidentCount = DeniedDNS.COUNT (*)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$Excessive_Denied_DNS_Queries_g_</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataChangeType="SYSTEM" naturalId="PH_Rule_Environ_1__DUP_1_1300900209049" entityVersion="22" xmlId="Rule$PH_Rule_Environ_1__DUP_1_1300900209049" ownerId="4600602" lastModified="1301613246789" id="53516466" custId="0" creationTime="1300900209050">
                <activatedTime>0</activatedTime>
                <active>false</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that key UPS operational metrics are outside of normal operational range.  Normal Ranges are Volts: 111-129, Freq. 55 to 65Hz.</description>
                <eventFilters entityVersion="14" xmlId="EventFilter@53516548" ownerId="4600602" lastModified="1301613246793" id="53516548" custId="1" creationTime="1300900209050">
                    <groupBy>hostIpAddr ,hostName </groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 2  AND( AVG ( upsAdvOutputFreq )&lt;= 55  OR AVG ( upsAdvOutputFreq )&gt;= 65  OR( AVG ( upsAdvOutputVoltage )NOT BETWEEN (110,130)  OR AVG ( upsAdvOutputVoltage )NOT BETWEEN (210,230) ))</groupConstraint>
                    <index>0</index>
                    <name>LowBattery1</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_UPS_METRIC" </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>UPS Status Warning : Abnormal Power Fluctuation (g) Test</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@53516548</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostIpAddr = LowBattery1.hostIpAddr, hostName = LowBattery1.hostName, upsAdvOutputFreq = LowBattery1.AVG(upsAdvOutputFreq), upsAdvOutputVoltage = LowBattery1.AVG(upsAdvOutputVoltage)</incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$UPS_Status_Warning_Abnormal_Power_Fluctuation_g_Test</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, hostName, upsRemainBatteryChargePct, upsBatteryStatus, upsReplaceBatteryIndicator, upsTimeOnBattery, upsBasicOutputStatus, upsAdvOutputLoad, upsAdvOutputVoltage, upsAdvOutputFreq</triggerEventAttrList>
            </rule>
            <rule dataChangeType="SYSTEM" naturalId="PH_Rule_Mail_4__DUP_1_1300909350490" entityVersion="5" xmlId="Rule$PH_Rule_Mail_4__DUP_1_1300909350490" ownerId="4600602" lastModified="1300909600527" id="53516467" custId="0" creationTime="1300909350490">
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects excessive exchange server RPC request latency.  Best practies specifies this should be below 200 at all times.</description>
                <eventFilters entityVersion="2" xmlId="EventFilter@58542400" ownerId="4600602" lastModified="1300909600536" id="58542400" custId="1" creationTime="1300909350490">
                    <groupBy>hostName </groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 2  AND AVG ( exchRPCAvgLatency )&gt;= 200 </groupConstraint>
                    <index>0</index>
                    <name>RPCLatencyHigh</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_APP_MSEXCH_MET" </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Exchange Server RPC latency high (g)</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@58542400</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>
        hostName = RPCLatencyHigh.hostName, 
	exchRPCAvgLatency = RPCLatencyHigh.AVG(exchRPCAvgLatency)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$Exchange_Server_RPC_latency_high_g_</incidentType>
                <triggerEventAttrList> phRecvTime,eventType, hostName, exchRPCReq,exchRPCAvgLatency,exchRPCOpsPerSec,exchRPCReqPeak,exchUserCount,exchActiveUserCount,exchPeakUserCount,exchActiveConnCount,exchMaxConn</triggerEventAttrList>
            </rule>
            <rule dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_15__DUP_1_1301009829584" entityVersion="7" xmlId="Rule$PH_Rule_Avail_15__DUP_1_1301009829584" ownerId="4600602" lastModified="1301014481506" id="53516468" custId="0" creationTime="1301009829584">
                <activatedTime>0</activatedTime>
                <active>false</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that an important server process staying down - that is didn't come up within 5 minutes of going down</description>
                <eventFilters entityVersion="3" xmlId="EventFilter@58542409" ownerId="4600602" lastModified="1301014481512" id="58542409" custId="1" creationTime="1301009829584">
                    <groupBy>hostIpAddr ,appName ,swProcName </groupBy>
                    <groupConstraint></groupConstraint>
                    <index>0</index>
                    <name>AppDownSrv</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_PROC_STOP"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server) </singleConstraint>
                </eventFilters>
                <eventFilters entityVersion="3" xmlId="EventFilter@58542410" ownerId="4600602" lastModified="1301014481533" id="58542410" custId="1" creationTime="1301009829584">
                    <groupBy>hostIpAddr ,appName ,swProcName </groupBy>
                    <groupConstraint></groupConstraint>
                    <index>1</index>
                    <name>AppUpSrv</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_PROC_START"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server) </singleConstraint>
                </eventFilters>
                <filterOperators>
                    <rank>0</rank>
                    <type>NOT_FOLLOWED_BY</type>
                </filterOperators>
                <globalConstraint>AppDownSrv.hostIpAddr = AppUpSrv.hostIpAddr, AppDownSrv.appName = AppUpSrv.appName</globalConstraint>
                <name>Important Process Stopped</name>
                <rawFOString>NOT_FOLLOWED_BY:0</rawFOString>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@58542409</eventFilters>
                <eventFilters>EventFilter@58542410</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = AppDownSrv.hostIpAddr, appName = AppDownSrv.appName, swProcName = AppDownSrv.swProcName
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$Important_Process_Stopped</incidentType>
                <triggerEventAttrList> phRecvTime,reptDevIpAddr,hostIpAddr,hostName,appName,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_204__DUP_1_1301604439865" entityVersion="11" xmlId="Rule$PH_Rule_Perf_204__DUP_1_1301604439865" ownerId="4600602" lastModified="1301612902523" id="53516470" custId="0" creationTime="1301604439866">
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that ASP.NET Performance is Critical (Queued Requests &gt; 20 in 5 minute period.)</description>
                <eventFilters entityVersion="6" xmlId="EventFilter@58542439" ownerId="4600602" lastModified="1301612902537" id="58542439" custId="1" creationTime="1301604439866">
                    <groupBy>hostIpAddr ,hostName ,aspReqQueued ,aspReqExecTimeMs </groupBy>
                    <groupConstraint> MAX ( aspReqQueued )&gt; 20  AND COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>ASPNetPerfCritical</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_APP_ASPNET_MET"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_WINDOWS_SERVER) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>ASP.NET Performance Critical (g)</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@58542439</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>hostIpAddr = ASPNetPerfCritical.hostIpAddr, hostName = ASPNetPerfCritical.hostName, aspReqQueued = ASPNetPerfCritical.aspReqQueued, aspReqExecTimeMs = ASPNetPerfCritical.aspReqExecTimeMs</incidentAttrs>
                <incidentFireFreq>3600</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$ASP_NET_Performance_Critical_g_</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, reptDevIpAddr, hostIpAddr, hostName, aspReqQueued, aspReqExecTimeMs, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Perf_206__DUP_2039_1301613960492" entityVersion="9" xmlId="Rule$PH_Rule_Perf_206__DUP_2039_1301613960492" ownerId="4600602" lastModified="1301614032806" id="53516471" custId="2039" creationTime="1301613960492">
                <collectorId>0</collectorId>
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that server Memory has reached a critical level (greater than 95%) based on 12 successive readings in a 60 minute interval.)</description>
                <eventFilters entityVersion="3" xmlId="EventFilter@58542441" ownerId="4600602" lastModified="1301613960492" id="58542441" custId="2039" creationTime="1301613960492">
                    <collectorId>0</collectorId>
                    <groupBy>hostIpAddr ,hostName </groupBy>
                    <groupConstraint> AVG ( memUtil )&gt; 95  AND COUNT ( * )&gt;= 12 </groupConstraint>
                    <index>0</index>
                    <name>ServMemCrit</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_SYS_MEM_UTIL"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server)  AND  memName = "Physical Memory" </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Server Memory Critical (c)</name>
                <triggerWindow>3600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@58542441</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = ServMemCrit.hostIpAddr, hostName = ServMemCrit.hostName, memUtil = ServMemCrit.AVG(memUtil)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$Server_Memory_Critical_c_</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,memUtil,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Perf_209__DUP_2002_1302365237676" entityVersion="18" xmlId="Rule$PH_Rule_Perf_209__DUP_2002_1302365237676" ownerId="19590364" lastModified="1308594085095" id="75017901" custId="2002" creationTime="1302365237676">
                <collectorId>0</collectorId>
                <activatedTime>1302365246277</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that server disk space usage has reached a warning level (less than 10% and greater than 5% or less than 5 GB free) based on 2 successive readings in a 20 minute interval.</description>
                <eventFilters entityVersion="9" xmlId="EventFilter@75017951" ownerId="19590364" lastModified="1305233557964" id="75017951" custId="2002" creationTime="1302365237678">
                    <collectorId>0</collectorId>
                    <groupBy>hostIpAddr ,hostName ,diskName ,diskUtil </groupBy>
                    <groupConstraint>( AVG ( diskUtil )&gt;= 90  AND AVG ( diskUtil )&lt;= 95 ) OR AVG ( freeDiskMB )&lt; 5120  AND COUNT ( * )&gt;= 2 </groupConstraint>
                    <index>0</index>
                    <name>ServDiskInfo</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_SYS_DISK_UTIL"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server)  AND  diskName NOT IN ("/boot") </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Server Disk Space Informaiton (c)</name>
                <triggerWindow>1200</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@75017951</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>hostIpAddr = ServDiskWarn.hostIpAddr, hostName = ServDiskWarn.hostName, diskName = ServDiskWarn.diskName, diskUtil = ServDiskWarn.AVG(diskUtil)</incidentAttrs>
                <incidentFireFreq>172800</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$Server_Disk_Space_Warning_c_</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, reptDevIpAddr, hostIpAddr, hostName, diskName, diskUtil, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_No_Response_To_Ping_Server__DUP_2007_1302845323604" entityVersion="11" xmlId="Rule$PH_Rule_No_Response_To_Ping_Server__DUP_2007_1302845323604" ownerId="19590364" lastModified="1308178297445" id="75017902" custId="2007" creationTime="1302845323604">
                <collectorId>0</collectorId>
                <activatedTime>1308178297445</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that a device did not respond to ping - 10 out of 10 ping packets were lost - the host could be down or not responding, or there is a network issue.</description>
                <eventFilters entityVersion="6" xmlId="EventFilter@75017952" ownerId="19590364" lastModified="1302845323604" id="75017952" custId="2007" creationTime="1302845323604">
                    <collectorId>0</collectorId>
                    <groupBy>hostIpAddr </groupBy>
                    <groupConstraint> AVG ( pktLossPct )= 100  AND COUNT ( * )&gt;= 2 </groupConstraint>
                    <index>0</index>
                    <name>AllPingLossSrv</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_PING_STAT"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Server Down - No Ping Response (c)</name>
                <triggerWindow>150</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@75017952</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostIpAddr = AllPingLossSrv.hostIpAddr</incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$Server_Down_No_Ping_Response_c_</incidentType>
                <triggerEventAttrList>phRecvTime, reptDevIpAddr, hostIpAddr, hostName, pktLossPct, reptDevIpAddr, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_PH_2__DUP_1_1303511047805" entityVersion="8" xmlId="Rule$PH_Rule_Avail_PH_2__DUP_1_1303511047805" ownerId="4600602" lastModified="1305474407335" id="92890701" custId="0" creationTime="1303511047805">
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that the system is receiving events at a rate that is higher than the license limit. Events beyond the license limit would be dropped unless the license is upgraded.</description>
                <eventFilters entityVersion="3" xmlId="EventFilter@92890752" ownerId="4600602" lastModified="1305474407337" id="92890752" custId="1" creationTime="1303511047806">
                    <groupBy>phCollectorName ,eventsPerSec ,peakEventsPerSec ,notifValue </groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 3 </groupConstraint>
                    <index>0</index>
                    <name>MercuryLicenseHighEventRate</name>
                    <singleConstraint>  eventType = "PH_SYSTEM_EVENT_RATE_EXCEED_LICENSE" </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>System License Warning: High Event Rate (g)</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@92890752</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostIpAddr = AOLicenseExpire.reptDevIpAddr, eventsPerSec = AOLicenseExpire.eventsPerSec</incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$System_License_Warning_High_Event_Rate_g_</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, reptDevIpAddr, rawEventMsg, eventsPerSec</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_SYS_Rule_1303523275918" entityVersion="10" xmlId="Rule$PH_SYS_Rule_1303523275918" ownerId="19590364" lastModified="1307571591974" id="92890704" custId="2002" creationTime="1303523275918">
                <collectorId>0</collectorId>
                <activatedTime>0</activatedTime>
                <active>false</active>
                <category>0</category>
                <custInclusive>false</custInclusive>
                <description>Detects any Windows Error Event and sends an email to alerts-csm@sequoiacap.com</description>
                <eventFilters entityVersion="3" xmlId="EventFilter@92890756" ownerId="19590364" lastModified="1303584269791" id="92890756" custId="2002" creationTime="1303523275918">
                    <collectorId>0</collectorId>
                    <groupBy>eventType ,destName ,eventDesc ,computer </groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>AllWindowsErrors</name>
                    <singleConstraint>  reptDevIpAddr IN (Group@PH_SYS_DEVICE_WINDOWS_SERVER)  AND  type = "Error"  AND  eventType NOT IN (Group@Sequoia%20Filtered%20Events) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>All Windows Errors (c)</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@92890756</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>eventType = AllWindowsErrors.eventType, eventDesc = AllWindowsErrors.eventDesc, destName = AllWindowsErrors.destName</incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$All_Windows_Errors_c_</incidentType>
                <triggerEventAttrList>phRecvTime, destName, reptDevIpAddr, eventType, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_SYS_Rule_1303523275918__DUP_2002_1303523367124" entityVersion="6" xmlId="Rule$PH_SYS_Rule_1303523275918__DUP_2002_1303523367124" ownerId="19590364" lastModified="1307571596569" id="92890705" custId="2002" creationTime="1303523367124">
                <collectorId>0</collectorId>
                <activatedTime>0</activatedTime>
                <active>false</active>
                <category>0</category>
                <custInclusive>false</custInclusive>
                <description>Detects any Windows Warning Event and sends an email to alerts-csm@sequoiacap.com</description>
                <eventFilters entityVersion="3" xmlId="EventFilter@92890757" ownerId="19590364" lastModified="1303584610794" id="92890757" custId="2002" creationTime="1303523367124">
                    <collectorId>0</collectorId>
                    <groupBy>eventType ,eventDesc ,destName </groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>AllWindowsWarnings</name>
                    <singleConstraint>  reptDevIpAddr IN (Group@PH_SYS_DEVICE_WINDOWS_SERVER)  AND  type = "Warning"  AND  eventType NOT IN (Group@Sequoia%20Filtered%20Events) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>All Windows Warnings (c)</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@92890757</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>eventType = AllWindowsWarnings.eventType, eventDesc = AllWindowsWarnings.eventDesc, destName = AllWindowsWarnings.destName</incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$All_Windows_Warnings_c_</incidentType>
                <triggerEventAttrList>phRecvTime, destName, reptDevIpAddr, eventType, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule dataChangeType="ACTIVATION" naturalId="PH_Rule_Perf_209C__DUP_2007_1304465487765" entityVersion="13" xmlId="Rule$PH_Rule_Perf_209C__DUP_2007_1304465487765" ownerId="4600602" lastModified="1305045403937" id="103639551" custId="2007" creationTime="1304465487765">
                <collectorId>0</collectorId>
                <activatedTime>1304465493824</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that server disk I/O latency has reached a critical level (greater  than 200 msec) based on 3 successive readings in a 15 minute interval</description>
                <eventFilters entityVersion="7" xmlId="EventFilter@101354417" ownerId="4600602" lastModified="1305045403940" id="101354417" custId="2007" creationTime="1304465487765">
                    <collectorId>0</collectorId>
                    <groupBy>hostIpAddr ,hostName ,diskName </groupBy>
                    <groupConstraint>( AVG ( devDiskRdLatency )&gt;= 200  OR AVG ( devDiskWrLatency )&gt;= 200 ) AND COUNT ( * )&gt;= 3 </groupConstraint>
                    <index>0</index>
                    <name>ServDiskLatencyCrit</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_DISK_IO_UTIL"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server)  AND  diskName NOT IN ("/boot") </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Server Disk Latency Critical (c)</name>
                <triggerWindow>900</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@101354417</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>hostIpAddr = ServDiskLatencyCrit.hostIpAddr, hostName = ServDiskLatencyCrit.hostName, diskName = ServDiskLatencyCrit.diskName, devDiskRdLatency = ServDiskLatencyCrit.AVG(devDiskRdLatency), devDiskWrLatency = ServDiskLatencyCrit.AVG(devDiskWrLatency)</incidentAttrs>
                <incidentFireFreq>7200</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$Server_Disk_Latency_Critical_c_</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, reptDevIpAddr, hostIpAddr, hostName, diskName, devDiskRdLatency, devDiskWrLatency, diskQLen, diskIOUtil, diskReadReqPerSec, diskWriteReqPerSec, diskReadKBytesPerSec, diskWriteKBytesPerSec</triggerEventAttrList>
            </rule>
            <rule dataChangeType="ACTIVATION" naturalId="PH_Rule_Perf_209C__DUP_2007_1304469534779" entityVersion="16" xmlId="Rule$PH_Rule_Perf_209C__DUP_2007_1304469534779" ownerId="4600602" lastModified="1305307999417" id="103639552" custId="2007" creationTime="1304469534779">
                <collectorId>0</collectorId>
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that server disk queue length reached a critical level (average greater  than 5) based on 2 successive readings in a 10 minute interval</description>
                <eventFilters entityVersion="9" xmlId="EventFilter@101354418" ownerId="4600602" lastModified="1305307999419" id="101354418" custId="2007" creationTime="1304469534779">
                    <collectorId>0</collectorId>
                    <groupBy>hostIpAddr ,hostName ,diskName </groupBy>
                    <groupConstraint> AVG ( diskQLen )&gt; 5  AND COUNT ( * )&gt;= 2 </groupConstraint>
                    <index>0</index>
                    <name>ServDiskQueueCrit</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_DISK_IO_UTIL"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server)  AND  diskName NOT IN ("/boot") </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Server Disk Queue Length Critical (c)</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@101354418</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>hostIpAddr = ServDiskQueueCrit.hostIpAddr, hostName = ServDiskQueueCrit.hostName, diskName = ServDiskQueueCrit.diskName, diskQLen = ServDiskQueueCrit.MAX(diskQLen)</incidentAttrs>
                <incidentFireFreq>7200</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$Server_Disk_Queue_Length_Critical_c_</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, reptDevIpAddr, hostIpAddr, hostName, diskName, devDiskRdLatency, devDiskWrLatency, diskQLen, diskIOUtil, diskReadReqPerSec, diskWriteReqPerSec, diskReadKBytesPerSec, diskWriteKBytesPerSec</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Perf_209__DUP_2007_1304984791907" entityVersion="13" xmlId="Rule$PH_Rule_Perf_209__DUP_2007_1304984791907" ownerId="4600602" lastModified="1304984799310" id="103639553" custId="2007" creationTime="1304984791907">
                <collectorId>0</collectorId>
                <activatedTime>1304984799310</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that server disk space usage has reached a warning level (utilization between 90% and 95%) based on 2 successive readings in a 20 minute interval.</description>
                <eventFilters entityVersion="9" xmlId="EventFilter@101354429" ownerId="4600602" lastModified="1305145825194" id="101354429" custId="2007" creationTime="1304984791907">
                    <collectorId>0</collectorId>
                    <groupBy>hostIpAddr ,hostName ,diskName </groupBy>
                    <groupConstraint>( AVG ( diskUtil )&gt;= 90  AND AVG ( diskUtil )&lt;= 95 ) AND AVG ( freeDiskMB )&lt; 10000  AND COUNT ( * )&gt;= 2 </groupConstraint>
                    <index>0</index>
                    <name>ServDiskWarn</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_SYS_DISK_UTIL"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server)  AND  diskName NOT IN ("/boot")  AND  diskName NOT CONTAIN "Label:VSS" </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Server Disk Space Warning (c)</name>
                <triggerWindow>1200</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@101354429</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>hostIpAddr = ServDiskWarn.hostIpAddr, hostName = ServDiskWarn.hostName, diskName = ServDiskWarn.diskName, diskUtil = ServDiskWarn.AVG(diskUtil)</incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$Server_Disk_Space_Warning_c_</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, reptDevIpAddr, hostIpAddr, hostName, diskName, diskUtil, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Perf_210__DUP_2007_1304984888118" entityVersion="24" xmlId="Rule$PH_Rule_Perf_210__DUP_2007_1304984888118" ownerId="4600602" lastModified="1304984893202" id="103639554" custId="2007" creationTime="1304984888118">
                <collectorId>0</collectorId>
                <activatedTime>1304984893202</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that server disk space usage has reached a critical level (greater than 95% and less than 5GB free) based on 2 successive readings in a 20 minute interval.</description>
                <eventFilters entityVersion="19" xmlId="EventFilter@101354430" ownerId="4600602" lastModified="1305145845645" id="101354430" custId="2007" creationTime="1304984888121">
                    <collectorId>0</collectorId>
                    <groupBy>hostIpAddr ,hostName ,diskName ,freeDiskMB ,diskUtil </groupBy>
                    <groupConstraint> AVG ( diskUtil )&gt; 95  AND AVG ( freeDiskMB )&lt; 5000  AND COUNT ( * )&gt;= 2 </groupConstraint>
                    <index>0</index>
                    <name>ServDiskCrit</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_SYS_DISK_UTIL"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server)  AND  diskName NOT IN ("/boot")  AND  diskName NOT CONTAIN "Label:VSS" </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Server Disk Space Critical (c)</name>
                <triggerWindow>1200</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@101354430</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = ServDiskCrit.hostIpAddr, hostName = ServDiskCrit.hostName, diskName = ServDiskCrit.diskName, diskUtil = ServDiskCrit.AVG(diskUtil)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$Server_Disk_Space_Critical_c_</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,diskName,diskUtil,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Perf_209__DUP_2002_1305163190443" entityVersion="20" xmlId="Rule$PH_Rule_Perf_209__DUP_2002_1305163190443" ownerId="19590364" lastModified="1314147716510" id="103639555" custId="2002" creationTime="1305163190443">
                <collectorId>0</collectorId>
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that server disk space usage has reached a warning level (less than 5% and greater than 2% and less than 2 GB free) based on 2 successive readings in a 20 minute interval.</description>
                <eventFilters entityVersion="13" xmlId="EventFilter@112806294" ownerId="19590364" lastModified="1315599950912" id="112806294" custId="2002" creationTime="1305163190443">
                    <collectorId>0</collectorId>
                    <groupBy>hostIpAddr ,hostName ,diskName ,diskUtil ,reptDevIpAddr </groupBy>
                    <groupConstraint>( AVG ( diskUtil )&gt;= 95  AND AVG ( diskUtil )&lt; 98 ) AND AVG ( freeDiskMB )&lt; 2048  AND COUNT ( * )&gt;= 2 </groupConstraint>
                    <index>0</index>
                    <name>ServDiskWarn</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_SYS_DISK_UTIL"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server)  AND  diskName NOT IN ("/boot") </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Server Disk Space Warning (c)</name>
                <triggerWindow>1200</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@112806294</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>hostIpAddr = ServDiskWarn.hostIpAddr, hostName = ServDiskWarn.hostName, diskName = ServDiskWarn.diskName, diskUtil = ServDiskWarn.AVG(diskUtil)</incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$WARN_Server_Disk_Space_c_</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, reptDevIpAddr, hostIpAddr, hostName, diskName, diskUtil, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Perf_209__DUP_2002_1305163213773" entityVersion="26" xmlId="Rule$PH_Rule_Perf_209__DUP_2002_1305163213773" ownerId="19590364" lastModified="1314133018903" id="103639556" custId="2002" creationTime="1305163213773">
                <collectorId>0</collectorId>
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that server disk space usage has reached a warning level (less than 2% or less than 1 GB free) based on 1 reading in a 5 minute interval.</description>
                <eventFilters entityVersion="11" xmlId="EventFilter@112806295" ownerId="19590364" lastModified="1314132992340" id="112806295" custId="2002" creationTime="1305163213774">
                    <collectorId>0</collectorId>
                    <groupBy>hostIpAddr ,hostName ,diskName ,diskUtil </groupBy>
                    <groupConstraint> AVG ( diskUtil )&gt;= 98  AND AVG ( freeDiskMB )&lt; 1024  AND COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>ServDiskCrit</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_SYS_DISK_UTIL"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server)  AND  diskName NOT IN ("/boot") </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Server Disk Space Critical (c)</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@112806295</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>hostIpAddr = ServDiskWarn.hostIpAddr, hostName = ServDiskWarn.hostName, diskName = ServDiskWarn.diskName, diskUtil = ServDiskWarn.AVG(diskUtil)</incidentAttrs>
                <incidentFireFreq>7200</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$CRIT_Server_Disk_Space_c_</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, reptDevIpAddr, hostIpAddr, hostName, diskName, diskUtil, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Perf_202__DUP_2002_1305166554369" entityVersion="16" xmlId="Rule$PH_Rule_Perf_202__DUP_2002_1305166554369" ownerId="19590364" lastModified="1305167356094" id="103639557" custId="2002" creationTime="1305166554369">
                <collectorId>0</collectorId>
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that server CPU has reached a critical level (greater than 95%) based on 6 successive readings in a 30 minute interval.</description>
                <eventFilters entityVersion="6" xmlId="EventFilter@112806296" ownerId="19590364" lastModified="1305166724716" id="112806296" custId="2002" creationTime="1305166554369">
                    <collectorId>0</collectorId>
                    <groupBy>hostIpAddr ,hostName ,cpuName ,cpuUtil </groupBy>
                    <groupConstraint> AVG ( cpuUtil )&gt; 95  AND COUNT ( * )&gt;= 6 </groupConstraint>
                    <index>0</index>
                    <name>ServCPUCrit</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_SYS_CPU_UTIL"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Server CPU Critical (c)</name>
                <triggerWindow>1800</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@112806296</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>hostIpAddr = ServCPUCrit.hostIpAddr, hostName = ServCPUCrit.hostName, cpuUtil = ServCPUCrit.AVG(cpuUtil)</incidentAttrs>
                <incidentFireFreq>3600</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$Server_CPU_Critical_c_</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, reptDevIpAddr, hostIpAddr, hostName, cpuUtil, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Perf_202__DUP_2002_1305166740062" entityVersion="14" xmlId="Rule$PH_Rule_Perf_202__DUP_2002_1305166740062" ownerId="19590364" lastModified="1305166913328" id="103639558" custId="2002" creationTime="1305166740062">
                <collectorId>0</collectorId>
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that server CPU has reached a critical level (greater than 80% and less than 95%) based on 6 successive readings in a 30 minute interval.</description>
                <eventFilters entityVersion="7" xmlId="EventFilter@112806297" ownerId="19590364" lastModified="1305166867577" id="112806297" custId="2002" creationTime="1305166740062">
                    <collectorId>0</collectorId>
                    <groupBy>hostIpAddr ,hostName ,cpuName ,cpuUtil </groupBy>
                    <groupConstraint>( AVG ( cpuUtil )&gt; 80  AND AVG ( cpuUtil )&lt;= 94 ) AND COUNT ( * )&gt;= 6 </groupConstraint>
                    <index>0</index>
                    <name>ServCPUWarn</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_SYS_CPU_UTIL"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Server CPU Warning (c)</name>
                <triggerWindow>1800</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@112806297</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>hostIpAddr = ServCPUCrit.hostIpAddr, hostName = ServCPUCrit.hostName, cpuUtil = ServCPUCrit.AVG(cpuUtil)</incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$Server_CPU_Warning_c_</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, reptDevIpAddr, hostIpAddr, hostName, cpuUtil, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Perf_206__DUP_2002_1305167071268" entityVersion="11" xmlId="Rule$PH_Rule_Perf_206__DUP_2002_1305167071268" ownerId="19590364" lastModified="1305167379505" id="103639559" custId="2002" creationTime="1305167071268">
                <collectorId>0</collectorId>
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that server Memory has reached a critical level (greater than 95%) based on 6 successive readings in a 30 minute interval.)</description>
                <eventFilters entityVersion="4" xmlId="EventFilter@112806298" ownerId="19590364" lastModified="1305167127506" id="112806298" custId="2002" creationTime="1305167071268">
                    <collectorId>0</collectorId>
                    <groupBy>hostIpAddr ,hostName ,memUtil </groupBy>
                    <groupConstraint> AVG ( memUtil )&gt; 95  AND COUNT ( * )&gt;= 6 </groupConstraint>
                    <index>0</index>
                    <name>ServMemCrit</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_SYS_MEM_UTIL"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server)  AND  memName = "Physical Memory" </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Server Memory Critical (c)</name>
                <triggerWindow>1800</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@112806298</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = ServMemCrit.hostIpAddr, hostName = ServMemCrit.hostName, memUtil = ServMemCrit.AVG(memUtil)
      </incidentAttrs>
                <incidentFireFreq>3600</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$Server_Memory_Critical_c_</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,memUtil,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Perf_206__DUP_2002_1305167140148" entityVersion="14" xmlId="Rule$PH_Rule_Perf_206__DUP_2002_1305167140148" ownerId="19590364" lastModified="1305167295866" id="103639560" custId="2002" creationTime="1305167140148">
                <collectorId>0</collectorId>
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that server Memory has reached a critical level (greater than 80% and less than 95%) based on 6 successive readings in a 30 minute interval.)</description>
                <eventFilters entityVersion="5" xmlId="EventFilter@112806299" ownerId="19590364" lastModified="1305167225524" id="112806299" custId="2002" creationTime="1305167140148">
                    <collectorId>0</collectorId>
                    <groupBy>hostIpAddr ,hostName ,memUtil </groupBy>
                    <groupConstraint>( AVG ( memUtil )&gt; 80 ) AND AVG ( memUtil )&lt;= 94  AND COUNT ( * )&gt;= 6 </groupConstraint>
                    <index>0</index>
                    <name>ServMemWarn</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_SYS_MEM_UTIL"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server)  AND  memName = "Physical Memory" </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Server Memory Warning (c)</name>
                <triggerWindow>1800</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@112806299</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = ServMemCrit.hostIpAddr, hostName = ServMemCrit.hostName, memUtil = ServMemCrit.AVG(memUtil)
      </incidentAttrs>
                <incidentFireFreq>7200</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$Server_Memory_Warning_c_</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,memUtil,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_No_Response_To_Ping_Net__DUP_2002_1305168015723" entityVersion="22" xmlId="Rule$PH_Rule_No_Response_To_Ping_Net__DUP_2002_1305168015723" ownerId="19590364" lastModified="1311975553949" id="103639561" custId="2002" creationTime="1305168015723">
                <collectorId>0</collectorId>
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that a device did not respond to ping - No Ping Response Last 5 Minutes - the host could be down or not responding, or there is a network issue.</description>
                <eventFilters entityVersion="15" xmlId="EventFilter@114467000" ownerId="19590364" lastModified="1311975553954" id="114467000" custId="2002" creationTime="1305168015723">
                    <collectorId>0</collectorId>
                    <groupBy>hostIpAddr </groupBy>
                    <groupConstraint> AVG ( pktLossPct )= 100  AND COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>AllPingLossNetCrit</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_PING_STAT"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Network) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Network Device Down - No Ping Response (c)</name>
                <triggerWindow>200</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@114467000</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostIpAddr = AllPingLossNet.hostIpAddr</incidentAttrs>
                <incidentFireFreq>3600</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$Network_Device_Down_No_Ping_Response_c_</incidentType>
                <triggerEventAttrList>phRecvTime, reptDevIpAddr, hostIpAddr, hostName, pktLossPct, reptDevIpAddr, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_No_Response_To_Ping_Net__DUP_2002_1305168092794" entityVersion="23" xmlId="Rule$PH_Rule_No_Response_To_Ping_Net__DUP_2002_1305168092794" ownerId="19590364" lastModified="1311975623369" id="103639562" custId="2002" creationTime="1305168092795">
                <collectorId>0</collectorId>
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that a device did not respond to ping - 5 out of 5 ping packets were lost during a single polling cycle - the host could be down or not responding, or there is a network issue.</description>
                <eventFilters entityVersion="13" xmlId="EventFilter@114467002" ownerId="19590364" lastModified="1305168291850" id="114467002" custId="2002" creationTime="1305168092795">
                    <collectorId>0</collectorId>
                    <groupBy>hostIpAddr ,destName </groupBy>
                    <groupConstraint> AVG ( pktLossPct )= 100  AND COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>AllPingLossNetWarn</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_PING_STAT"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Network) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Network Device - No Ping Response (c)</name>
                <triggerWindow>200</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@114467002</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostIpAddr = AllPingLossNet.hostIpAddr</incidentAttrs>
                <incidentFireFreq>7200</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$Network_Device_No_Ping_Response_c_</incidentType>
                <triggerEventAttrList>phRecvTime, reptDevIpAddr, hostIpAddr, hostName, pktLossPct, reptDevIpAddr, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Degraded_Ping_Net__DUP_2002_1305168487018" entityVersion="14" xmlId="Rule$PH_Rule_Degraded_Ping_Net__DUP_2002_1305168487018" ownerId="19590364" lastModified="1305473801608" id="103639563" custId="2002" creationTime="1305168487019">
                <collectorId>0</collectorId>
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects a host with degraded ping response - more than 10 ms avg response time over 10 minute period</description>
                <eventFilters entityVersion="4" xmlId="EventFilter@114467004" ownerId="19590364" lastModified="1311983306952" id="114467004" custId="2002" creationTime="1305168487019">
                    <collectorId>0</collectorId>
                    <groupBy>hostName ,hostIpAddr ,avgDurationMSec ,maxDurationMSec ,minDurationMSec </groupBy>
                    <groupConstraint> AVG ( avgDurationMSec )&gt;= 10  AND COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>PingLatencyWarnAvg</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_PING_STAT"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Network) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Network Device Latency Warning - 10m Average (c)</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@114467004</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostIpAddr = PartPingLossNet.hostIpAddr, pktLossPct = PartPingLossNet.AVG(pktLossPct)</incidentAttrs>
                <incidentFireFreq>7200</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$Network_Device_Degraded_High_Latency_c_</incidentType>
                <triggerEventAttrList>phRecvTime, reptDevIpAddr, hostIpAddr, avgDurationMSec, minDurationMSec, pktLossPct, reptDevIpAddr, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Degraded_Ping_Net__DUP_2002_1305169005064" entityVersion="16" xmlId="Rule$PH_Rule_Degraded_Ping_Net__DUP_2002_1305169005064" ownerId="19590364" lastModified="1305473829808" id="103639564" custId="2002" creationTime="1305169005065">
                <collectorId>0</collectorId>
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects a host with degraded ping response - more than 50 ms avg response time over 10 minute period</description>
                <eventFilters entityVersion="6" xmlId="EventFilter@114467006" ownerId="19590364" lastModified="1311975059063" id="114467006" custId="2002" creationTime="1305169005065">
                    <collectorId>0</collectorId>
                    <groupBy>hostName ,hostIpAddr ,avgDurationMSec ,maxDurationMSec ,minDurationMSec </groupBy>
                    <groupConstraint> AVG ( avgDurationMSec )&gt;= 50  AND COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>NetworkDeviceLatencyCrit</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_PING_STAT"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Network) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Network Device Latency Critical (c)</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@114467006</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostIpAddr = PartPingLossNet.hostIpAddr, pktLossPct = PartPingLossNet.AVG(pktLossPct)</incidentAttrs>
                <incidentFireFreq>3600</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$Network_Device_Degraded_High_Latency_c___1</incidentType>
                <triggerEventAttrList>phRecvTime, reptDevIpAddr, hostIpAddr, avgDurationMSec, minDurationMSec, pktLossPct, reptDevIpAddr, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Degraded_Ping_Net__DUP_2002_1305169095342" entityVersion="19" xmlId="Rule$PH_Rule_Degraded_Ping_Net__DUP_2002_1305169095342" ownerId="19590364" lastModified="1305473814244" id="103639565" custId="2002" creationTime="1305169095343">
                <collectorId>0</collectorId>
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects a host with degraded ping response - more than 10 ms avg response time over 5 minute period</description>
                <eventFilters entityVersion="5" xmlId="EventFilter@114467008" ownerId="19590364" lastModified="1311975182403" id="114467008" custId="2002" creationTime="1305169095343">
                    <collectorId>0</collectorId>
                    <groupBy>hostName ,hostIpAddr ,avgDurationMSec ,maxDurationMSec ,minDurationMSec </groupBy>
                    <groupConstraint> AVG ( avgDurationMSec )&gt;= 40  AND COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>NetworkDeviceLatencyWarn</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_PING_STAT"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Network) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Network Device Latency Warning (c)</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@114467008</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostIpAddr = PartPingLossNet.hostIpAddr, pktLossPct = PartPingLossNet.AVG(pktLossPct)</incidentAttrs>
                <incidentFireFreq>7200</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$Network_Device_Degraded_High_Latency_c___2</incidentType>
                <triggerEventAttrList>phRecvTime, reptDevIpAddr, hostIpAddr, avgDurationMSec, minDurationMSec, pktLossPct, reptDevIpAddr, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule dataChangeType="SYSTEM" naturalId="PH_Rule_Mail_1__DUP_2002_1305170272181" entityVersion="4" xmlId="Rule$PH_Rule_Mail_1__DUP_2002_1305170272181" ownerId="19590364" lastModified="1305170493896" id="103639566" custId="2002" creationTime="1305170272181">
                <collectorId>0</collectorId>
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that one or more of SMTP Server queues have crossed critical threshold (greater than 25 for the last 5 minutes)</description>
                <eventFilters entityVersion="1" xmlId="EventFilter@114467010" ownerId="19590364" lastModified="1305170486385" id="114467010" custId="2002" creationTime="1305170272181">
                    <collectorId>0</collectorId>
                    <groupBy>hostName </groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 2  AND( AVG ( exchCatQueue )&gt; 25  OR AVG ( exchSMTPLocalQueue )&gt; 25  OR AVG ( exchSMTPRemoteQueue )&gt; 25 )</groupConstraint>
                    <index>0</index>
                    <name>QueueHighWarn</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_APP_MSEXCH_SMTP_MET" </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Exchange Server SMTP Queue Warning (c)</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@114467010</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>
        hostName = QueueHigh.hostName, 
	exchCatQueue = QueueHigh.AVG(exchCatQueue),
	exchSMTPLocalQueue = QueueHigh.AVG(exchSMTPLocalQueue),
	exchSMTPRemoteQueue = QueueHigh.AVG(exchSMTPRemoteQueue)
      </incidentAttrs>
                <incidentFireFreq>7200</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$Exchange_Server_SMTP_Queue_Warning_c_</incidentType>
                <triggerEventAttrList> phRecvTime,eventType, hostName, exchCatQueue,exchSMTPLocalQueue,exchSMTPRemoteQueue,exchSMTPInConn,exchSMTPOutConn,exchSMTPRetries,exchSMTPLocalRetryQueue,exchSMTPRemoteRetryQueue</triggerEventAttrList>
            </rule>
            <rule dataChangeType="SYSTEM" naturalId="PH_Rule_Mail_1__DUP_2002_1305170295459" entityVersion="4" xmlId="Rule$PH_Rule_Mail_1__DUP_2002_1305170295459" ownerId="19590364" lastModified="1305170496416" id="103639567" custId="2002" creationTime="1305170295459">
                <collectorId>0</collectorId>
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that one or more of SMTP Server queues have crossed critical threshold (greater than 50 for the last 5 minutes)</description>
                <eventFilters entityVersion="1" xmlId="EventFilter@114467011" ownerId="19590364" lastModified="1305170415828" id="114467011" custId="2002" creationTime="1305170295459">
                    <collectorId>0</collectorId>
                    <groupBy>hostName </groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 2  AND( AVG ( exchCatQueue )&gt;= 50  OR AVG ( exchSMTPLocalQueue )&gt;= 50  OR AVG ( exchSMTPRemoteQueue )&gt; 50 )</groupConstraint>
                    <index>0</index>
                    <name>QueueHighCrit</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_APP_MSEXCH_SMTP_MET" </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Exchange Server SMTP Queue Critical (c)</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@114467011</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>
        hostName = QueueHigh.hostName, 
	exchCatQueue = QueueHigh.AVG(exchCatQueue),
	exchSMTPLocalQueue = QueueHigh.AVG(exchSMTPLocalQueue),
	exchSMTPRemoteQueue = QueueHigh.AVG(exchSMTPRemoteQueue)
      </incidentAttrs>
                <incidentFireFreq>3600</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$Exchange_Server_SMTP_Queue_Critical_c_</incidentType>
                <triggerEventAttrList> phRecvTime,eventType, hostName, exchCatQueue,exchSMTPLocalQueue,exchSMTPRemoteQueue,exchSMTPInConn,exchSMTPOutConn,exchSMTPRetries,exchSMTPLocalRetryQueue,exchSMTPRemoteRetryQueue</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Perf_226__DUP_2002_1305171599398" entityVersion="16" xmlId="Rule$PH_Rule_Perf_226__DUP_2002_1305171599398" ownerId="19590364" lastModified="1305172053229" id="103639568" custId="2002" creationTime="1305171599398">
                <collectorId>0</collectorId>
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that ESX CPU utilization has reached a critical level (greater than 90% based on 2 successive readings in a 5 minute interval)</description>
                <eventFilters entityVersion="6" xmlId="EventFilter@114467012" ownerId="19590364" lastModified="1305171742823" id="114467012" custId="2002" creationTime="1305171599398">
                    <collectorId>0</collectorId>
                    <groupBy>hostName ,hostIpAddr </groupBy>
                    <groupConstraint> AVG ( cpuUtil )&gt; 90  AND COUNT ( * )&gt;= 2 </groupConstraint>
                    <index>0</index>
                    <name>ESXCPUCrit</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_SYS_CPU_UTIL"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_VM_SERVER) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>ESX CPU Critical (c)</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@114467012</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = ESXCPUCrit.hostIpAddr,hostName = ESXCPUCrit.hostName,cpuUtil = ESXCPUCrit.AVG(cpuUtil)
      </incidentAttrs>
                <incidentFireFreq>1800</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$ESX_CPU_Critical_c_</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,hostName,hostIpAddr,cpuUtil,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Perf_228__DUP_2002_1305171805222" entityVersion="12" xmlId="Rule$PH_Rule_Perf_228__DUP_2002_1305171805222" ownerId="19590364" lastModified="1305172032582" id="103639570" custId="2002" creationTime="1305171805222">
                <collectorId>0</collectorId>
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that ESX CPU utilization has reached a critical level (greater than 75% based on 2 successive readings in a 5 minute interval)</description>
                <eventFilters entityVersion="5" xmlId="EventFilter@114467014" ownerId="19590364" lastModified="1305171907939" id="114467014" custId="2002" creationTime="1305171805223">
                    <collectorId>0</collectorId>
                    <groupBy>hostName ,hostIpAddr </groupBy>
                    <groupConstraint> AVG ( memUtil )&gt; 75  AND COUNT ( * )&gt;= 2 </groupConstraint>
                    <index>0</index>
                    <name>ESXMemCrit</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_SYS_MEM_UTIL"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_VM_SERVER) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>ESX Memory Critical (c)</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@114467014</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = ESXMemCrit.hostIpAddr,hostName = ESXMemCrit.hostName, memUtil = ESXMemCrit.AVG(memUtil), swapReadKBytesPerSec = ESXMemCrit.AVG(swapReadKBytesPerSec)
      </incidentAttrs>
                <incidentFireFreq>1800</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$ESX_Memory_Critical_c_</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,hostName,hostIpAddr,memUtil,swapReadKBytesPerSec,swapWriteKBytesPerSec,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Degraded_Ping_Net__DUP_2002_1305473110802" entityVersion="16" xmlId="Rule$PH_Rule_Degraded_Ping_Net__DUP_2002_1305473110802" ownerId="19590364" lastModified="1305473806602" id="103639574" custId="2002" creationTime="1305473110802">
                <collectorId>0</collectorId>
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects a host with degraded ping response - more than 10 ms avg response time over 10 minute period</description>
                <eventFilters entityVersion="4" xmlId="EventFilter@114467018" ownerId="19590364" lastModified="1305473196661" id="114467018" custId="2002" creationTime="1305473110802">
                    <collectorId>0</collectorId>
                    <groupBy>hostName ,hostIpAddr ,avgDurationMSec ,maxDurationMSec ,minDurationMSec </groupBy>
                    <groupConstraint> AVG ( avgDurationMSec )&gt;= 10 </groupConstraint>
                    <index>0</index>
                    <name>PingLatencyWarnAvg</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_PING_STAT"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Server Latency Warning - 10m Average (c)</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@114467018</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostIpAddr = PartPingLossNet.hostIpAddr, pktLossPct = PartPingLossNet.AVG(pktLossPct)</incidentAttrs>
                <incidentFireFreq>7200</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$Server_Connectivity_Degraded_High_Latency_10m_Average_c_</incidentType>
                <triggerEventAttrList>phRecvTime, reptDevIpAddr, hostIpAddr, avgDurationMSec, minDurationMSec, pktLossPct, reptDevIpAddr, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Degraded_Ping_Net__DUP_2002_1305473143354" entityVersion="21" xmlId="Rule$PH_Rule_Degraded_Ping_Net__DUP_2002_1305473143354" ownerId="19590364" lastModified="1305473822567" id="103639575" custId="2002" creationTime="1305473143354">
                <collectorId>0</collectorId>
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects a host with degraded ping response - more than 10 ms avg response time over 5 minute period</description>
                <eventFilters entityVersion="5" xmlId="EventFilter@114467020" ownerId="19590364" lastModified="1305473620230" id="114467020" custId="2002" creationTime="1305473143355">
                    <collectorId>0</collectorId>
                    <groupBy>hostName ,hostIpAddr ,avgDurationMSec ,maxDurationMSec ,minDurationMSec </groupBy>
                    <groupConstraint> AVG ( avgDurationMSec )&gt;= 10  AND COUNT ( * )&gt;= 5 </groupConstraint>
                    <index>0</index>
                    <name>ServerLatencyWarn</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_PING_STAT"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Server Latency Warning (c)</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@114467020</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostIpAddr = PartPingLossNet.hostIpAddr, pktLossPct = PartPingLossNet.AVG(pktLossPct)</incidentAttrs>
                <incidentFireFreq>7200</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$Server_Connectivity_Degraded_High_Latency_c_</incidentType>
                <triggerEventAttrList>phRecvTime, reptDevIpAddr, hostIpAddr, avgDurationMSec, minDurationMSec, pktLossPct, reptDevIpAddr, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Degraded_Ping_Net__DUP_2002_1305473172452" entityVersion="18" xmlId="Rule$PH_Rule_Degraded_Ping_Net__DUP_2002_1305473172452" ownerId="19590364" lastModified="1305473838579" id="103639576" custId="2002" creationTime="1305473172452">
                <collectorId>0</collectorId>
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects a host with degraded ping response - more than 50 ms avg response time over 10 minute period</description>
                <eventFilters entityVersion="5" xmlId="EventFilter@114467022" ownerId="19590364" lastModified="1305473531399" id="114467022" custId="2002" creationTime="1305473172452">
                    <collectorId>0</collectorId>
                    <groupBy>hostName ,hostIpAddr ,avgDurationMSec ,maxDurationMSec ,minDurationMSec </groupBy>
                    <groupConstraint> AVG ( avgDurationMSec )&gt;= 50 </groupConstraint>
                    <index>0</index>
                    <name>ServerLatencyCrit</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_PING_STAT"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Server Latency Critical (c)</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@114467022</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostIpAddr = PartPingLossNet.hostIpAddr, pktLossPct = PartPingLossNet.AVG(pktLossPct)</incidentAttrs>
                <incidentFireFreq>3600</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$Server_Connectivity_Degraded_Severe_Latency_c_</incidentType>
                <triggerEventAttrList>phRecvTime, reptDevIpAddr, hostIpAddr, avgDurationMSec, minDurationMSec, pktLossPct, reptDevIpAddr, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Degraded_Ping_Net__DUP_2002_1305474820717" entityVersion="19" xmlId="Rule$PH_Rule_Degraded_Ping_Net__DUP_2002_1305474820717" ownerId="19590364" lastModified="1305475234433" id="103639577" custId="2002" creationTime="1305474820717">
                <collectorId>0</collectorId>
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects a host with degraded ping response - more than 1% average dropped packets over 10 minute period</description>
                <eventFilters entityVersion="6" xmlId="EventFilter@114467024" ownerId="19590364" lastModified="1305475187896" id="114467024" custId="2002" creationTime="1305474820718">
                    <collectorId>0</collectorId>
                    <groupBy>hostName ,hostIpAddr ,pktLossPct </groupBy>
                    <groupConstraint> AVG ( pktLossPct )&gt;= 6  AND COUNT ( * )&gt;= 5 </groupConstraint>
                    <index>0</index>
                    <name>NetworkDevicePcktLossWarn</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_PING_STAT"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Network) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Network Device Packet Loss Warning (c)</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@114467024</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostIpAddr = PartPingLossNet.hostIpAddr, pktLossPct = PartPingLossNet.AVG(pktLossPct)</incidentAttrs>
                <incidentFireFreq>7200</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$Network_Device_Packet_Loss_Warning_c_</incidentType>
                <triggerEventAttrList>phRecvTime, reptDevIpAddr, hostIpAddr, avgDurationMSec, minDurationMSec, pktLossPct, reptDevIpAddr, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Degraded_Ping_Net__DUP_2002_1305475059687" entityVersion="21" xmlId="Rule$PH_Rule_Degraded_Ping_Net__DUP_2002_1305475059687" ownerId="19590364" lastModified="1305475242111" id="103639578" custId="2002" creationTime="1305475059688">
                <collectorId>0</collectorId>
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects a host with degraded ping response - more than 1% average dropped packets over 10 minute period</description>
                <eventFilters entityVersion="8" xmlId="EventFilter@114467026" ownerId="19590364" lastModified="1305475230784" id="114467026" custId="2002" creationTime="1305475059688">
                    <collectorId>0</collectorId>
                    <groupBy>hostName ,hostIpAddr ,pktLossPct </groupBy>
                    <groupConstraint> AVG ( pktLossPct )&gt;= 6  AND COUNT ( * )&gt;= 5 </groupConstraint>
                    <index>0</index>
                    <name>ServerPcktLossWarn</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_PING_STAT"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Server Packet Loss Warning (c)</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@114467026</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostIpAddr = PartPingLossNet.hostIpAddr, pktLossPct = PartPingLossNet.AVG(pktLossPct)</incidentAttrs>
                <incidentFireFreq>7200</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$Server_Packet_Loss_Warning_c_</incidentType>
                <triggerEventAttrList>phRecvTime, reptDevIpAddr, hostIpAddr, avgDurationMSec, minDurationMSec, pktLossPct, reptDevIpAddr, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_No_Response_To_Ping_Net__DUP_2002_1305489844287" entityVersion="26" xmlId="Rule$PH_Rule_No_Response_To_Ping_Net__DUP_2002_1305489844287" ownerId="19590364" lastModified="1311975467374" id="103639579" custId="2002" creationTime="1305489844287">
                <collectorId>0</collectorId>
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that a device did not respond to ping - No Ping Response Last 5 Minutes - the host could be down or not responding, or there is a network issue.</description>
                <eventFilters entityVersion="17" xmlId="EventFilter@114467028" ownerId="19590364" lastModified="1311975467378" id="114467028" custId="2002" creationTime="1305489844287">
                    <collectorId>0</collectorId>
                    <groupBy>hostIpAddr ,hostName </groupBy>
                    <groupConstraint> AVG ( pktLossPct )= 100  AND COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>AllPingLossServerCrit</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_PING_STAT"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server)  AND  hostIpAddr NOT IN (Group@Sequoia%20Server%20Pairs)  AND  hostIpAddr NOT IN (Group@Safe%20Servers) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Critical Server Down - No Ping Response (c)</name>
                <triggerWindow>200</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@114467028</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostIpAddr = AllPingLossNet.hostIpAddr</incidentAttrs>
                <incidentFireFreq>3600</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$Server_Down_No_Ping_Response_c_</incidentType>
                <triggerEventAttrList>phRecvTime, reptDevIpAddr, hostIpAddr, hostName, pktLossPct, reptDevIpAddr, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_No_Response_To_Ping_Net__DUP_2002_1305492978817" entityVersion="28" xmlId="Rule$PH_Rule_No_Response_To_Ping_Net__DUP_2002_1305492978817" ownerId="19590364" lastModified="1311975521716" id="103639580" custId="2002" creationTime="1305492978817">
                <collectorId>0</collectorId>
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that a device did not respond to ping - No Ping Response Last 5 Minutes - the host could be down or not responding, or there is a network issue.</description>
                <eventFilters entityVersion="18" xmlId="EventFilter@114467030" ownerId="19590364" lastModified="1311975521734" id="114467030" custId="2002" creationTime="1305492978817">
                    <collectorId>0</collectorId>
                    <groupBy>hostIpAddr ,hostName </groupBy>
                    <groupConstraint> AVG ( pktLossPct )= 100  AND COUNT ( * )&gt;= 2 </groupConstraint>
                    <index>0</index>
                    <name>AllPingLossServerNonCrit</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_PING_STAT"  AND  hostIpAddr IN (Group@Safe%20Servers) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Non-Critical Server Down - No Ping Response (c)</name>
                <triggerWindow>400</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@114467030</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostIpAddr = AllPingLossNet.hostIpAddr</incidentAttrs>
                <incidentFireFreq>3600</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$Non_Critical_Server_Down_No_Ping_Response_c_</incidentType>
                <triggerEventAttrList>phRecvTime, reptDevIpAddr, hostIpAddr, hostName, pktLossPct, reptDevIpAddr, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_No_Response_To_Ping_Net__DUP_2002_1305498913498" entityVersion="33" xmlId="Rule$PH_Rule_No_Response_To_Ping_Net__DUP_2002_1305498913498" ownerId="19590364" lastModified="1305499175840" id="103639582" custId="2002" creationTime="1305498913498">
                <collectorId>0</collectorId>
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that a device did not respond to ping - No Ping Response Last 5 Minutes - the host could be down or not responding, or there is a network issue.</description>
                <eventFilters entityVersion="21" xmlId="EventFilter@114467034" ownerId="19590364" lastModified="1311983344020" id="114467034" custId="2002" creationTime="1305498913499">
                    <collectorId>0</collectorId>
                    <groupBy>hostIpAddr ,hostName </groupBy>
                    <groupConstraint> AVG ( pktLossPct )= 100  AND COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>AllPingLossFileServerCrit</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_PING_STAT"  AND  hostIpAddr IN (Group@Sequoia%20Server%20Pairs) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Redundant Node Down - No Ping Response (c)</name>
                <triggerWindow>330</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@114467034</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostIpAddr = AllPingLossNet.hostIpAddr</incidentAttrs>
                <incidentFireFreq>7200</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$Redundant_Node_Down_No_Ping_Response_c___1</incidentType>
                <triggerEventAttrList>phRecvTime, reptDevIpAddr, hostIpAddr, hostName, pktLossPct, reptDevIpAddr, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Change_1__DUP_2007_1305904392602" entityVersion="8" xmlId="Rule$PH_Rule_Change_1__DUP_2007_1305904392602" ownerId="4600602" lastModified="1305904409529" id="103639583" custId="2007" creationTime="1305904392602">
                <collectorId>0</collectorId>
                <activatedTime>1305904409529</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that the startup and running configurations of a network device (router or firewall) are different. This is achieved via logging in.</description>
                <eventFilters entityVersion="2" xmlId="EventFilter@122545302" ownerId="4600602" lastModified="1305904392602" id="122545302" custId="2007" creationTime="1305904392602">
                    <collectorId>0</collectorId>
                    <groupBy>hostIpAddr, hostName, addedItem, deletedItem</groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>StartupRunDelta</name>
                    <singleConstraint>  hostIpAddr IN (Group@PH_SYS_DEVICE_ROUTER_SWITCH,Group@PH_SYS_DEVICE_FIREWALL)  AND  eventType = "PH_DEV_MON_DELTA_CONFIG" </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Difference in Running and Startup Config (c)</name>
                <triggerWindow>1800</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@122545302</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = StartupRunDelta.hostIpAddr, hostName = StartupRunDelta.hostName, addedItem = StartupRunDelta.addedItem, deletedItem = StartupRunDelta.deletedItem
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$Difference_in_Running_and_Startup_Config_c_</incidentType>
                <triggerEventAttrList> phRecvTime,hostName,hostIpAddr,eventType,startUpConfVer,runningConfVer,addedItem, deletedItem </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Access_51C__DUP_2007_1306176543230" entityVersion="9" xmlId="Rule$PH_Rule_Access_51C__DUP_2007_1306176543230" ownerId="4600602" lastModified="1306177086320" id="103639584" custId="2007" creationTime="1306176543230">
                <collectorId>0</collectorId>
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects a failure of the IMAService on a Citrix Application Server</description>
                <eventFilters entityVersion="5" xmlId="EventFilter@122545303" ownerId="4600602" lastModified="1306178444386" id="122545303" custId="2007" creationTime="1306176543230">
                    <collectorId>0</collectorId>
                    <groupBy>reptDevIpAddr ,user </groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>IMAFail</name>
                    <singleConstraint>  eventType = "Win-System-3635"  AND  reptDevIpAddr IN (Group@PH_SYS_DEVICE_Server) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>IMA Service Failure (c)</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@122545303</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        destIpAddr = ServerAcctLockout.reptDevIpAddr, user = ServerAcctLockout.user, incidentCount = ServerAcctLockout.COUNT(*)
      </incidentAttrs>
                <incidentFireFreq>3600</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$IMA_Service_Failure</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,user,computer,winLogonType,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_No_Response_To_Ping_Net__DUP_2002_1306900430758" entityVersion="23" xmlId="Rule$PH_Rule_No_Response_To_Ping_Net__DUP_2002_1306900430758" ownerId="19590364" lastModified="1306900431021" id="143090950" custId="2002" creationTime="1306900430758">
                <collectorId>0</collectorId>
                <active>false</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that a device did not respond to ping - 5 out of 5 ping packets were lost during a single polling cycle - the host could be down or not responding, or there is a network issue.</description>
                <eventFilters entityVersion="13" xmlId="EventFilter@136895022" ownerId="19590364" lastModified="1306900430759" id="136895022" custId="2002" creationTime="1306900430759">
                    <collectorId>0</collectorId>
                    <groupBy>hostIpAddr ,destName </groupBy>
                    <groupConstraint> AVG ( pktLossPct )= 100  AND COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>AllPingLossNetWarn</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_PING_STAT"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Network) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Google - No Ping Response Warning (c)</name>
                <triggerWindow>75</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@136895022</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostIpAddr = AllPingLossNet.hostIpAddr</incidentAttrs>
                <incidentFireFreq>7200</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$Google_No_Ping_Response_Warning_c_</incidentType>
                <triggerEventAttrList>phRecvTime, reptDevIpAddr, hostIpAddr, hostName, pktLossPct, reptDevIpAddr, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_No_Response_To_Ping_Net__DUP_2002_1306900475912" entityVersion="24" xmlId="Rule$PH_Rule_No_Response_To_Ping_Net__DUP_2002_1306900475912" ownerId="19590364" lastModified="1315588118736" id="143090951" custId="2002" creationTime="1306900475912">
                <collectorId>0</collectorId>
                <activatedTime>1315588118735</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that a device did not respond to ping - 5 out of 5 ping packets were lost during a single polling cycle - the host could be down or not responding, or there is a network issue.</description>
                <eventFilters entityVersion="13" xmlId="EventFilter@136895024" ownerId="19590364" lastModified="1306900475912" id="136895024" custId="2002" creationTime="1306900475912">
                    <collectorId>0</collectorId>
                    <groupBy>hostIpAddr ,destName </groupBy>
                    <groupConstraint> AVG ( pktLossPct )= 100  AND COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>AllPingLossNetWarn</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_PING_STAT"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Network) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>dns11.cotdns.net - No Ping Response Warning (c)</name>
                <triggerWindow>75</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@136895024</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostIpAddr = AllPingLossNet.hostIpAddr</incidentAttrs>
                <incidentFireFreq>7200</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$dns11_cotdns_net_No_Ping_Response_Warning_c_</incidentType>
                <triggerEventAttrList>phRecvTime, reptDevIpAddr, hostIpAddr, hostName, pktLossPct, reptDevIpAddr, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_No_Response_To_Ping_Net__DUP_2002_1306900607521" entityVersion="23" xmlId="Rule$PH_Rule_No_Response_To_Ping_Net__DUP_2002_1306900607521" ownerId="19590364" lastModified="1306900607632" id="143090952" custId="2002" creationTime="1306900607521">
                <collectorId>0</collectorId>
                <active>false</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that a device did not respond to ping - 5 out of 5 ping packets were lost during a single polling cycle - the host could be down or not responding, or there is a network issue.</description>
                <eventFilters entityVersion="13" xmlId="EventFilter@136895026" ownerId="19590364" lastModified="1306900607521" id="136895026" custId="2002" creationTime="1306900607521">
                    <collectorId>0</collectorId>
                    <groupBy>hostIpAddr ,destName </groupBy>
                    <groupConstraint> AVG ( pktLossPct )= 100  AND COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>AllPingLossNetWarn</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_PING_STAT"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Network) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>seqdc03.sequoiacap.com - No Ping Response Warning (c)</name>
                <triggerWindow>75</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@136895026</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostIpAddr = AllPingLossNet.hostIpAddr</incidentAttrs>
                <incidentFireFreq>7200</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$seqdc03_sequoiacap_com_No_Ping_Response_Warning_c_</incidentType>
                <triggerEventAttrList>phRecvTime, reptDevIpAddr, hostIpAddr, hostName, pktLossPct, reptDevIpAddr, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Perf_209__DUP_2002_1307563084268" entityVersion="21" xmlId="Rule$PH_Rule_Perf_209__DUP_2002_1307563084268" ownerId="5818478" lastModified="1310057127020" id="143090956" custId="2002" creationTime="1307563084268">
                <collectorId>0</collectorId>
                <activatedTime>0</activatedTime>
                <active>false</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that server disk space usage has reached a warning level (less than 10% )</description>
                <eventFilters entityVersion="9" xmlId="EventFilter@146994810" ownerId="5818478" lastModified="1307563084268" id="146994810" custId="2002" creationTime="1307563084268">
                    <collectorId>0</collectorId>
                    <groupBy>hostIpAddr ,hostName ,diskName ,diskUtil </groupBy>
                    <groupConstraint>( AVG ( diskUtil )&gt;= 90  AND AVG ( diskUtil )&lt;= 95 ) OR AVG ( freeDiskMB )&lt; 5120  AND COUNT ( * )&gt;= 2 </groupConstraint>
                    <index>0</index>
                    <name>ServDiskInfo</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_SYS_DISK_UTIL"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server)  AND  diskName NOT IN ("/boot") </singleConstraint>
                </eventFilters>
                <eventFilters entityVersion="0" xmlId="EventFilter@203019151" ownerId="5818478" lastModified="1310057127019" id="203019151" custId="2002" creationTime="1310057127019">
                    <collectorId>0</collectorId>
                    <groupBy></groupBy>
                    <groupConstraint></groupConstraint>
                    <index>1</index>
                    <name>12GB_Servers_Group</name>
                    <singleConstraint>  hostIpAddr IN (Group@12GB%20C%20Drive%20Servers) </singleConstraint>
                </eventFilters>
                <filterOperators>
                    <rank>0</rank>
                    <type>AND</type>
                </filterOperators>
                <globalConstraint></globalConstraint>
                <name>Server Disk Space Below 10% (c)</name>
                <rawFOString>AND:0</rawFOString>
                <triggerWindow>1200</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@146994810</eventFilters>
                <eventFilters>EventFilter@203019151</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs></incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$Disk_Space_Below_10_c_</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, reptDevIpAddr, hostIpAddr, hostName, diskName, diskUtil, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_SYS_Rule_1300487763541__DUP_2007_1308864928480" entityVersion="2" xmlId="Rule$PH_SYS_Rule_1300487763541__DUP_2007_1308864928480" ownerId="4600602" lastModified="1308864933647" id="179457200" custId="2007" creationTime="1308864928480">
                <collectorId>0</collectorId>
                <activatedTime>1308864933647</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>false</custInclusive>
                <description>The process restarted</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@169011243" ownerId="4600602" lastModified="1308864928481" id="169011243" custId="2007" creationTime="1308864928481">
                    <collectorId>0</collectorId>
                    <groupBy>reptDevIpAddr ,procName </groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>Process_Restarted_Events</name>
                    <singleConstraint>  phEventCategory = 3  AND  rawEventMsg CONTAIN "PHL_ERROR"  AND  rawEventMsg CONTAIN "Restart" </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Mercury System Process Restarted (c)</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@169011243</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>reptDevIpAddr = Process_Restarted_Events.reptDevIpAddr, procName = Process_Restarted_Events.procName</incidentAttrs>
                <incidentFireFreq>3600</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$Mercury_System_Process_Restarted_c_</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, reptDevIpAddr, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_SYS_Rule_1300838190692__DUP_2007_1308876188086" entityVersion="23" xmlId="Rule$PH_SYS_Rule_1300838190692__DUP_2007_1308876188086" ownerId="4600602" lastModified="1308876414360" id="179457202" custId="2007" creationTime="1308876188086">
                <collectorId>0</collectorId>
                <activatedTime>1308876198295</activatedTime>
                <active>false</active>
                <category>0</category>
                <custInclusive>false</custInclusive>
                <description>Detects when any Windows System Log has an Error that matches the criteria.</description>
                <eventFilters entityVersion="15" xmlId="EventFilter@169011246" ownerId="4600602" lastModified="1308876188086" id="169011246" custId="2007" creationTime="1308876188086">
                    <collectorId>0</collectorId>
                    <groupBy>hostName ,eventType ,eventSeverity ,eventAction ,rawEventMsg </groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>WindowsSystemError</name>
                    <singleConstraint>  eventType CONTAIN "Win-System"  AND  rawEventMsg CONTAIN "Error"  AND  reptDevIpAddr IN (Group@PH_SYS_DEVICE_WINDOWS_SERVER) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Windows System Error (c)</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@169011246</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostName = WindowsSystemError.hostName, msg = WindowsSystemError.msg</incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$Windows_System_Error_c_</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, deviceTime, hostName, msg, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_SYS_Rule_1300838190692__DUP_2007_1308876314357" entityVersion="27" xmlId="Rule$PH_SYS_Rule_1300838190692__DUP_2007_1308876314357" ownerId="4600602" lastModified="1316641521746" id="179457203" custId="2007" creationTime="1308876314357">
                <collectorId>0</collectorId>
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>false</custInclusive>
                <description>Detects when any Windows System Log has an Error that matches the criteria.</description>
                <eventFilters entityVersion="19" xmlId="EventFilter@169011248" ownerId="4600602" lastModified="1316641521752" id="169011248" custId="2007" creationTime="1308876314357">
                    <collectorId>0</collectorId>
                    <groupBy>hostName ,eventType ,eventSeverity ,eventAction ,rawEventMsg </groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>WindowsSystemError</name>
                    <singleConstraint>(  reptDevIpAddr = 10.140.3.40  OR  reptDevIpAddr = 10.140.3.41 ) AND  rawEventMsg CONTAIN "DCS"  AND  eventType CONTAIN "Win-System"  AND  type CONTAIN "Error" </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Datacore System Error (c)</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@169011248</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>hostName = WindowsSystemError.hostName, msg = WindowsSystemError.msg</incidentAttrs>
                <incidentFireFreq>3600</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$Datacore_System_Error_c_</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, deviceTime, hostName, msg, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_SYS_Rule_1309280165281" entityVersion="1" xmlId="Rule$PH_SYS_Rule_1309280165281" ownerId="5818478" lastModified="1309280175555" id="187700300" custId="2002" creationTime="1309280165281">
                <collectorId>0</collectorId>
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>false</custInclusive>
                <description></description>
                <eventFilters entityVersion="0" xmlId="EventFilter@180981127" ownerId="5818478" lastModified="1309280165282" id="180981127" custId="2002" creationTime="1309280165282">
                    <collectorId>0</collectorId>
                    <groupBy>hostName ,hostIpAddr ,eventDesc </groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>BES_event_Error</name>
                    <singleConstraint>  reptDevIpAddr = Device@seqbes01.sequoiacap.com  AND  eventId = 15000 </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>BES Event Error</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@180981127</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>hostName = BES_event_Error.hostName, eventDesc = BES_event_Error.eventDesc</incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$BES_Event_Error</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, reptDevIpAddr, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Perf_209__DUP_2002_1310055834557" entityVersion="20" xmlId="Rule$PH_Rule_Perf_209__DUP_2002_1310055834557" ownerId="5818478" lastModified="1310055834884" id="203019100" custId="2002" creationTime="1310055834558">
                <collectorId>0</collectorId>
                <active>false</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that server disk space usage has reached a warning level (less than 5% and greater than 2% or less than 2 GB free) based on 2 successive readings in a 20 minute interval.</description>
                <eventFilters entityVersion="11" xmlId="EventFilter@203019150" ownerId="5818478" lastModified="1310055834559" id="203019150" custId="2002" creationTime="1310055834559">
                    <collectorId>0</collectorId>
                    <groupBy>hostIpAddr ,hostName ,diskName ,diskUtil ,reptDevIpAddr </groupBy>
                    <groupConstraint>( AVG ( diskUtil )&gt;= 95  AND AVG ( diskUtil )&lt;= 98 ) OR AVG ( freeDiskMB )&lt; 2048  AND COUNT ( * )&gt;= 2 </groupConstraint>
                    <index>0</index>
                    <name>ServDiskWarn</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_SYS_DISK_UTIL"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server)  AND  diskName NOT IN ("/boot") </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Server Disk Space Warning  &lt; %10  (c)</name>
                <triggerWindow>1200</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@203019150</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>hostIpAddr = ServDiskWarn.hostIpAddr, hostName = ServDiskWarn.hostName, diskName = ServDiskWarn.diskName, diskUtil = ServDiskWarn.AVG(diskUtil)</incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$Server_Disk_Space_Warning_10_c_</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, reptDevIpAddr, hostIpAddr, hostName, diskName, diskUtil, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule dataChangeType="SYSTEM" naturalId="PH_Rule_Environ_1__DUP_2130_1311218568191" entityVersion="25" xmlId="Rule$PH_Rule_Environ_1__DUP_2130_1311218568191" ownerId="16845515" lastModified="1311218776872" id="226820401" custId="2130" creationTime="1311218568191">
                <collectorId>0</collectorId>
                <activatedTime>1311218588955</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that key UPS operational metrics are outside of normal operational range.  Load &gt;= 95%.</description>
                <eventFilters entityVersion="16" xmlId="EventFilter@226820451" ownerId="16845515" lastModified="1311218568191" id="226820451" custId="2130" creationTime="1311218568191">
                    <collectorId>0</collectorId>
                    <groupBy>hostIpAddr ,hostName </groupBy>
                    <groupConstraint>( COUNT ( * )&gt;= 1  AND AVG ( upsAdvOutputLoad )&gt; 95 )</groupConstraint>
                    <index>0</index>
                    <name>LowBattery1</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_UPS_METRIC" </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>UPS Status Warning : UPS greater than 95% load (c)</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@226820451</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostIpAddr = LowBattery1.hostIpAddr, hostName = LowBattery1.hostName, upsAdvOutputLoad = LowBattery1.AVG(upsAdvOutputLoad)</incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$UPS_Status_Warning_UPS_greater_than_95_load_c_07_20_2011</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, hostName, upsRemainBatteryChargePct, upsBatteryStatus, upsReplaceBatteryIndicator, upsTimeOnBattery, upsBasicOutputStatus, upsAdvOutputLoad, upsAdvOutputVoltage, upsAdvOutputFreq</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_No_Response_To_Ping_Server__DUP_2022_1311621364850" entityVersion="17" xmlId="Rule$PH_Rule_No_Response_To_Ping_Server__DUP_2022_1311621364850" ownerId="19590364" lastModified="1315412604684" id="226820402" custId="2022" creationTime="1311621364850">
                <collectorId>0</collectorId>
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that a device did not respond to ping - 2 out of 5 ping packets were lost - the host could be down or not responding, or there is a network issue.</description>
                <eventFilters entityVersion="10" xmlId="EventFilter@226820452" ownerId="19590364" lastModified="1315412604687" id="226820452" custId="2022" creationTime="1311621364851">
                    <collectorId>0</collectorId>
                    <groupBy>hostIpAddr </groupBy>
                    <groupConstraint> AVG ( pktLossPct )&gt;= 40  AND COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>AllPingLossSrv</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_PING_STAT"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Server Down - No Ping Response (c)</name>
                <triggerWindow>150</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@226820452</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostIpAddr = AllPingLossSrv.hostIpAddr</incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$Server_Down_No_Ping_Response_c_</incidentType>
                <triggerEventAttrList>phRecvTime, reptDevIpAddr, hostIpAddr, hostName, pktLossPct, reptDevIpAddr, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_SYS_Rule_1311972610402" entityVersion="0" xmlId="Rule$PH_SYS_Rule_1311972610402" ownerId="5815115" lastModified="1311972610402" id="226820404" custId="2002" creationTime="1311972610402">
                <collectorId>0</collectorId>
                <activatedTime>0</activatedTime>
                <active>false</active>
                <category>1</category>
                <custInclusive>false</custInclusive>
                <eventFilters entityVersion="0" xmlId="EventFilter@226820465" ownerId="5815115" lastModified="1311972610402" id="226820465" custId="2002" creationTime="1311972610402">
                    <collectorId>0</collectorId>
                    <groupBy>hostIpAddr</groupBy>
                    <groupConstraint>( AVG ( pktLossPct )&gt; 0  AND AVG ( avgDurationMSec )&gt; 50 ) AND COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>Filter</name>
                    <singleConstraint>  hostIpAddr IN (ALL, Device@HOST%2d10.1.67.1, Device@HOST%2d10.1.66.1, Device@wan.bei.sequoiacap.com) </singleConstraint>
                </eventFilters>
                <name>Monitor WAN Packet Loss</name>
                <triggerWindow>60</triggerWindow>
                <advanced>false</advanced>
                <eventFilters>EventFilter@226820465</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>pktLossPct = Filter.AVG(pktLossPct), avgDurationMSec = Filter.AVG(avgDurationMSec), incidentCount = Filter.COUNT(*)</incidentAttrs>
                <incidentFireFreq>3600</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$Monitor_WAN_Packet_Loss</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, reptDevIpAddr, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Degraded_Ping_Net__DUP_2002_1311980862148" entityVersion="19" xmlId="Rule$PH_Rule_Degraded_Ping_Net__DUP_2002_1311980862148" ownerId="5815115" lastModified="1311981162539" id="226820405" custId="2002" creationTime="1311980862148">
                <collectorId>0</collectorId>
                <activatedTime>1311980872770</activatedTime>
                <active>true</active>
                <category>1</category>
                <custInclusive>true</custInclusive>
                <description>Detects a host with degraded ping response - more than 50 ms avg response time over 10 minute period</description>
                <eventFilters entityVersion="7" xmlId="EventFilter@226820466" ownerId="5815115" lastModified="1311981162542" id="226820466" custId="2002" creationTime="1311980862148">
                    <collectorId>0</collectorId>
                    <groupBy>hostName ,hostIpAddr ,avgDurationMSec ,maxDurationMSec ,minDurationMSec </groupBy>
                    <groupConstraint> AVG ( avgDurationMSec )&gt;= 10  AND COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>NetworkDeviceLatencyCrit_CN</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_PING_STAT"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Network)  AND  hostLocation CONTAIN "SHA" </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Network Device Latency Critical 210ms (c)</name>
                <triggerWindow>180</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@226820466</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>hostIpAddr = PartPingLossNet.hostIpAddr, pktLossPct = PartPingLossNet.AVG(pktLossPct)</incidentAttrs>
                <incidentFireFreq>3600</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$Network_Device_Latency_Critical_210ms_c_</incidentType>
                <triggerEventAttrList>phRecvTime, reptDevIpAddr, hostIpAddr, avgDurationMSec, minDurationMSec, pktLossPct, reptDevIpAddr, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Perf_210__DUP_2109_1312523764986" entityVersion="27" xmlId="Rule$PH_Rule_Perf_210__DUP_2109_1312523764986" ownerId="19590364" lastModified="1312523841099" id="252744200" custId="2109" creationTime="1312523764986">
                <collectorId>0</collectorId>
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that server disk space usage has reached a critical level (greater than 95% and less than 15GB free) based on 2 successive readings in a 20 minute interval.</description>
                <eventFilters entityVersion="21" xmlId="EventFilter@248595024" ownerId="19590364" lastModified="1312523837470" id="248595024" custId="2109" creationTime="1312523764990">
                    <collectorId>0</collectorId>
                    <groupBy>hostIpAddr ,hostName ,diskName ,freeDiskMB ,diskUtil </groupBy>
                    <groupConstraint> AVG ( diskUtil )&gt; 95  AND AVG ( freeDiskMB )&lt; 15360  AND COUNT ( * )&gt;= 2 </groupConstraint>
                    <index>0</index>
                    <name>ServDiskCrit</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_SYS_DISK_UTIL"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server)  AND  diskName NOT IN ("/boot") </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Server Disk Space Critical (c)</name>
                <triggerWindow>1200</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@248595024</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>hostIpAddr = ServDiskCrit.hostIpAddr, hostName = ServDiskCrit.hostName, diskName = ServDiskCrit.diskName, diskUtil = ServDiskCrit.AVG(diskUtil), freeDiskMB = ServDiskCrit.freeDiskMB</incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$Server_Disk_Space_Critical_c_</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, reptDevIpAddr, hostIpAddr, hostName, diskName, diskUtil, freeDiskMB, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Perf_210__DUP_2148_1313382064871" entityVersion="26" xmlId="Rule$PH_Rule_Perf_210__DUP_2148_1313382064871" ownerId="19590364" lastModified="1313382070111" id="269363250" custId="2148" creationTime="1313382064871">
                <collectorId>0</collectorId>
                <activatedTime>1313382070111</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that server disk space usage has reached a critical level (greater than 95% and less than 5GB free) based on 2 successive readings in a 20 minute interval.</description>
                <eventFilters entityVersion="20" xmlId="EventFilter@265621358" ownerId="19590364" lastModified="1313382064872" id="265621358" custId="2148" creationTime="1313382064872">
                    <collectorId>0</collectorId>
                    <groupBy>hostIpAddr ,hostName ,diskName ,freeDiskMB ,diskUtil </groupBy>
                    <groupConstraint> AVG ( diskUtil )&gt; 95  AND AVG ( freeDiskMB )&lt; 5000  AND COUNT ( * )&gt;= 2 </groupConstraint>
                    <index>0</index>
                    <name>ServDiskCrit</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_SYS_DISK_UTIL"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server)  AND  diskName NOT IN ("/boot") </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Server Disk Space Critical (c)</name>
                <triggerWindow>1200</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@265621358</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>hostIpAddr = ServDiskCrit.hostIpAddr, hostName = ServDiskCrit.hostName, diskName = ServDiskCrit.diskName, diskUtil = ServDiskCrit.AVG(diskUtil), freeDiskMB = ServDiskCrit.freeDiskMB</incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$Server_Disk_Space_Critical_c_</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, reptDevIpAddr, hostIpAddr, hostName, diskName, diskUtil, freeDiskMB, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Perf_210__DUP_2148_1313382162836" entityVersion="29" xmlId="Rule$PH_Rule_Perf_210__DUP_2148_1313382162836" ownerId="19590364" lastModified="1313382254978" id="269363251" custId="2148" creationTime="1313382162836">
                <collectorId>0</collectorId>
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that server disk space usage has reached a critical level (greater than 98% and less than 1.5GB free) based on 2 successive readings in a 20 minute interval.</description>
                <eventFilters entityVersion="21" xmlId="EventFilter@265621359" ownerId="19590364" lastModified="1313382245564" id="265621359" custId="2148" creationTime="1313382162836">
                    <collectorId>0</collectorId>
                    <groupBy>hostIpAddr ,hostName ,diskName ,freeDiskMB ,diskUtil </groupBy>
                    <groupConstraint> AVG ( diskUtil )&gt; 98  AND AVG ( freeDiskMB )&lt; 1536  AND COUNT ( * )&gt;= 2 </groupConstraint>
                    <index>0</index>
                    <name>ServDiskCrit</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_SYS_DISK_UTIL"  AND  hostIpAddr IN (Group@Low%20Disk%20Space%20Servers)  AND  diskName NOT IN ("/boot") </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Server Disk Space Alert (c)</name>
                <triggerWindow>1200</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@265621359</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>hostIpAddr = ServDiskCrit.hostIpAddr, hostName = ServDiskCrit.hostName, diskName = ServDiskCrit.diskName, diskUtil = ServDiskCrit.AVG(diskUtil), freeDiskMB = ServDiskCrit.freeDiskMB</incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$Server_Disk_Space_Alert_c_</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, reptDevIpAddr, hostIpAddr, hostName, diskName, diskUtil, freeDiskMB, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Access_51A__DUP_2107_1313793980520" entityVersion="11" xmlId="Rule$PH_Rule_Access_51A__DUP_2107_1313793980520" ownerId="16845515" lastModified="1313794469010" id="269363252" custId="2107" creationTime="1313793980520">
                <collectorId>0</collectorId>
                <activatedTime>1313794469010</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects account lockout caused by excessive logon failures.</description>
                <eventFilters entityVersion="5" xmlId="EventFilter@265621377" ownerId="16845515" lastModified="1313793980521" id="265621377" custId="2107" creationTime="1313793980521">
                    <collectorId>0</collectorId>
                    <groupBy>reptDevIpAddr ,user </groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>DomainAcctLockout</name>
                    <singleConstraint>  eventType IN (Group@PH_SYS_EVENT_DomainAccountLocked)  AND  reptDevIpAddr IN (Group@PH_SYS_APP_DOMAIN_CONTROLLER)  AND  user NOT CONTAIN "$" </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Domain Account Lockout (c)</name>
                <triggerWindow>600</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@265621377</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>
        destIpAddr = DomainAcctLockout.reptDevIpAddr, user = DomainAcctLockout.user, incidentCount = DomainAcctLockout.COUNT(*)
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$Domain_Account_Lockout_c_</incidentType>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,user,computer,winLogonType,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_SYS_Rule_1314136241283" entityVersion="2" xmlId="Rule$PH_SYS_Rule_1314136241283" ownerId="19590364" lastModified="1315589135159" id="269363253" custId="2002" creationTime="1314136241282">
                <collectorId>0</collectorId>
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>false</custInclusive>
                <description>Detects if the BlackBerry Alert Service is in the stopped state.</description>
                <eventFilters entityVersion="3" xmlId="EventFilter@265621378" ownerId="19590364" lastModified="1315589290721" id="265621378" custId="2002" creationTime="1314136241283">
                    <collectorId>0</collectorId>
                    <groupBy>hostName ,eventId ,eventDesc </groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>BlackBerryAlertAlerts</name>
                    <singleConstraint>  hostIpAddr IN (Group@PH_SYS_DEVICE_Server)  AND  rawEventMsg CONTAIN "7036"  AND  rawEventMsg CONTAIN "BlackBerry Alert service entered the stopped state" </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>BlackBerry Alert Service Stopped (c)</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@265621378</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostName = BlackBerryAlerts.hostName, eventId = BlackBerryAlerts.eventId, eventDesc = BlackBerryAlerts.eventDesc</incidentAttrs>
                <incidentFireFreq>1800</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$BlackBerry_Service_Stopped_c_</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, hostName, eventId, eventDesc</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_Rule_Change_3__DUP_2007_1314385297383" entityVersion="11" xmlId="Rule$PH_Rule_Change_3__DUP_2007_1314385297383" ownerId="4600602" lastModified="1316644444844" id="287987000" custId="2007" creationTime="1314385297383">
                <collectorId>0</collectorId>
                <activatedTime>1314385305348</activatedTime>
                <active>false</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects user/group configuration in a domain controller.</description>
                <eventFilters entityVersion="4" xmlId="EventFilter@287987050" ownerId="4600602" lastModified="1314385297384" id="287987050" custId="2007" creationTime="1314385297384">
                    <collectorId>0</collectorId>
                    <groupBy>reptDevIpAddr ,user ,computer ,domain ,targetUser ,targetDomain </groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>DCUserGrpChange</name>
                    <singleConstraint>  reptDevIpAddr IN (Group@PH_SYS_APP_DOMAIN_CONTROLLER)  AND  eventType IN (Group@PH_SYS_EVENT_AccountChanged)  AND  targetUser NOT CONTAIN "$"  AND  user NOT CONTAIN "$" </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Domain Controller User/Group Modification (g)_Test</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@287987050</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>user = DCUserGrpChange.user, computer = DCUserGrpChange.computer, domain = DCUserGrpChange.domain, targetUser = DCUserGrpChange.targetUser, targetDomain = DCUserGrpChange.targetDomain</incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$Domain_Controller_User_Group_Modification_g_Test</incidentType>
                <triggerEventAttrList>phRecvTime, reptDevIpAddr, eventType, user, computer, domain, targetUser, targetDomain, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule dataChangeType="SYSTEM" naturalId="PH_Rule_Perf_29__DUP_1_1314652003375" entityVersion="7" xmlId="Rule$PH_Rule_Perf_29__DUP_1_1314652003375" ownerId="53543399" lastModified="1314739022412" id="292760250" custId="0" creationTime="1314652003375">
                <activatedTime>0</activatedTime>
                <active>false</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Added by support to test customer case.</description>
                <eventFilters entityVersion="4" xmlId="EventFilter@292679856" ownerId="53543399" lastModified="1314739022414" id="292679856" custId="1" creationTime="1314652003385">
                    <groupBy>hostIpAddr,hostName</groupBy>
                    <groupConstraint></groupConstraint>
                    <index>0</index>
                    <name>WinHealthWarn</name>
                    <singleConstraint>  eventType IN ("PH_RULE_SERVER_CPU_WARN","PH_RULE_SERVER_MEM_WARN","PH_RULE_SERVER_DISK_SPACE_WARN","PH_RULE_SERVER_INTF_UTIL_WARN","PH_RULE_SERVER_INTF_ERR_WARN")  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_WINDOWS_SERVER) </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Windows Server Health: Warning_Test</name>
                <triggerWindow>542</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@292679856</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = WinHealthWarn.hostIpAddr, hostName = WinHealthWarn.hostName
      </incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$Windows_Server_Health_Warning_08_29_2011</incidentType>
                <phEventCategory>1</phEventCategory>
                <triggerEventAttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,cpuUtil,memUtil,diskUtil,diskIOUtil,intfName,inIntfUtil,outIntfUtil,inIntfPktErrPct,outIntfPktErrPct,reptDevIpAddr,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_SYS_Rule_1314136241283__DUP_2002_1315588245617" entityVersion="3" xmlId="Rule$PH_SYS_Rule_1314136241283__DUP_2002_1315588245617" ownerId="19590364" lastModified="1315588380027" id="308473400" custId="2002" creationTime="1315588245617">
                <collectorId>0</collectorId>
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>false</custInclusive>
                <description>Detects if the BlackBerry Router Service is in the stopped state.</description>
                <eventFilters entityVersion="3" xmlId="EventFilter@297116402" ownerId="19590364" lastModified="1315589426510" id="297116402" custId="2002" creationTime="1315588245619">
                    <collectorId>0</collectorId>
                    <groupBy>hostName ,eventId ,eventDesc </groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>BlackBerryRouterServiceAlerts</name>
                    <singleConstraint>  hostIpAddr IN (Group@PH_SYS_DEVICE_Server)  AND  rawEventMsg CONTAIN "7036"  AND  rawEventMsg CONTAIN "BlackBerry Router service entered the stopped state" </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>BlackBerry Router Service Stopped (c)</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@297116402</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostName = BlackBerryAlerts.hostName, eventId = BlackBerryAlerts.eventId, eventDesc = BlackBerryAlerts.eventDesc</incidentAttrs>
                <incidentFireFreq>1800</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$BlackBerry_Service_Stopped_c_09_09_2011</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, hostName, eventId, eventDesc</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_SYS_Rule_1314136241283__DUP_2002_1315588390312" entityVersion="4" xmlId="Rule$PH_SYS_Rule_1314136241283__DUP_2002_1315588390312" ownerId="19590364" lastModified="1315588649534" id="308473401" custId="2002" creationTime="1315588390312">
                <collectorId>0</collectorId>
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>false</custInclusive>
                <description>Detects if the BlackBerry MDS Connection Service is in the stopped state.</description>
                <eventFilters entityVersion="3" xmlId="EventFilter@297116403" ownerId="19590364" lastModified="1315589304545" id="297116403" custId="2002" creationTime="1315588390312">
                    <collectorId>0</collectorId>
                    <groupBy>hostName ,eventId ,eventDesc </groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>BlackBerryMDSConnectionAlerts</name>
                    <singleConstraint>  hostIpAddr IN (Group@PH_SYS_DEVICE_Server)  AND  rawEventMsg CONTAIN "7036"  AND  rawEventMsg CONTAIN "BlackBerry MDS Connection Service service entered the stopped state" </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>BlackBerry MDS Connection Service Stopped (c)</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@297116403</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostName = BlackBerryAlerts.hostName, eventId = BlackBerryAlerts.eventId, eventDesc = BlackBerryAlerts.eventDesc</incidentAttrs>
                <incidentFireFreq>1800</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$BlackBerry_Service_Stopped_c_09_09_2011__1</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, hostName, eventId, eventDesc</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_SYS_Rule_1314136241283__DUP_2002_1315588392521" entityVersion="5" xmlId="Rule$PH_SYS_Rule_1314136241283__DUP_2002_1315588392521" ownerId="19590364" lastModified="1315588829144" id="308473402" custId="2002" creationTime="1315588392521">
                <collectorId>0</collectorId>
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>false</custInclusive>
                <description>Detects if the BlackBerry Attachment Service is in the stopped state.</description>
                <eventFilters entityVersion="3" xmlId="EventFilter@297116404" ownerId="19590364" lastModified="1315589334886" id="297116404" custId="2002" creationTime="1315588392522">
                    <collectorId>0</collectorId>
                    <groupBy>hostName ,eventId ,eventDesc </groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>BlackBerryAttachmentAlerts</name>
                    <singleConstraint>  hostIpAddr IN (Group@PH_SYS_DEVICE_Server)  AND  rawEventMsg CONTAIN "7036"  AND  rawEventMsg CONTAIN "BlackBerry Attachment Service service entered the stopped state" </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>BlackBerry Attachment Service Stopped (c)</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@297116404</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostName = BlackBerryAlerts.hostName, eventId = BlackBerryAlerts.eventId, eventDesc = BlackBerryAlerts.eventDesc</incidentAttrs>
                <incidentFireFreq>1800</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$BlackBerry_Service_Stopped_c_09_09_2011_09_09_2011</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, hostName, eventId, eventDesc</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_SYS_Rule_1314136241283__DUP_2002_1315588394689" entityVersion="6" xmlId="Rule$PH_SYS_Rule_1314136241283__DUP_2002_1315588394689" ownerId="19590364" lastModified="1315588933116" id="308473403" custId="2002" creationTime="1315588394689">
                <collectorId>0</collectorId>
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>false</custInclusive>
                <description>Detects if the BlackBerry Synchronization Service is in the stopped state.</description>
                <eventFilters entityVersion="3" xmlId="EventFilter@297116405" ownerId="19590364" lastModified="1315589365166" id="297116405" custId="2002" creationTime="1315588394689">
                    <collectorId>0</collectorId>
                    <groupBy>hostName ,eventId ,eventDesc </groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>BlackBerrySynchronizationAlerts</name>
                    <singleConstraint>  hostIpAddr IN (Group@PH_SYS_DEVICE_Server)  AND  rawEventMsg CONTAIN "7036"  AND  rawEventMsg CONTAIN "BlackBerry Synchronization Service service entered the stopped state" </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>BlackBerry Synchronization Service Stopped (c)</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@297116405</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostName = BlackBerryAlerts.hostName, eventId = BlackBerryAlerts.eventId, eventDesc = BlackBerryAlerts.eventDesc</incidentAttrs>
                <incidentFireFreq>1800</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$BlackBerry_Service_Stopped_c_09_09_2011_09_09_2011_09_09_2011</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, hostName, eventId, eventDesc</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_SYS_Rule_1314136241283__DUP_2002_1315588396735" entityVersion="6" xmlId="Rule$PH_SYS_Rule_1314136241283__DUP_2002_1315588396735" ownerId="19590364" lastModified="1315589018313" id="308473404" custId="2002" creationTime="1315588396735">
                <collectorId>0</collectorId>
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>false</custInclusive>
                <description>Detects if the BlackBerry Policy Service is in the stopped state.</description>
                <eventFilters entityVersion="3" xmlId="EventFilter@297116406" ownerId="19590364" lastModified="1315589381088" id="297116406" custId="2002" creationTime="1315588396735">
                    <collectorId>0</collectorId>
                    <groupBy>hostName ,eventId ,eventDesc </groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>BlackBerryPolicyAlerts</name>
                    <singleConstraint>  hostIpAddr IN (Group@PH_SYS_DEVICE_Server)  AND  rawEventMsg CONTAIN "7036"  AND  rawEventMsg CONTAIN "BlackBerry Policy Service service entered the stopped state" </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>BlackBerry Policy Service Stopped (c)</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@297116406</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostName = BlackBerryAlerts.hostName, eventId = BlackBerryAlerts.eventId, eventDesc = BlackBerryAlerts.eventDesc</incidentAttrs>
                <incidentFireFreq>1800</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$BlackBerry_Service_Stopped_c_09_09_2011_09_09_2011_09_09_2011_09_09_2011</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, hostName, eventId, eventDesc</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_SYS_Rule_1314136241283__DUP_2002_1315588398372" entityVersion="7" xmlId="Rule$PH_SYS_Rule_1314136241283__DUP_2002_1315588398372" ownerId="19590364" lastModified="1315589077505" id="308473405" custId="2002" creationTime="1315588398372">
                <collectorId>0</collectorId>
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>false</custInclusive>
                <description>Detects if the BlackBerry Controller Service is in the stopped state.</description>
                <eventFilters entityVersion="3" xmlId="EventFilter@297116407" ownerId="19590364" lastModified="1315589397198" id="297116407" custId="2002" creationTime="1315588398372">
                    <collectorId>0</collectorId>
                    <groupBy>hostName ,eventId ,eventDesc </groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>BlackBerryControllerAlerts</name>
                    <singleConstraint>  hostIpAddr IN (Group@PH_SYS_DEVICE_Server)  AND  rawEventMsg CONTAIN "7036"  AND  rawEventMsg CONTAIN "BlackBerry Controller service entered the stopped state" </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>BlackBerry Controller Service Stopped (c)</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@297116407</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostName = BlackBerryAlerts.hostName, eventId = BlackBerryAlerts.eventId, eventDesc = BlackBerryAlerts.eventDesc</incidentAttrs>
                <incidentFireFreq>1800</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$BlackBerry_Service_Stopped_c_09_09_2011_09_09_2011_09_09_2011_09_09_2011_09_09_2011</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, hostName, eventId, eventDesc</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_SYS_Rule_1314136241283__DUP_2002_1315588458933" entityVersion="5" xmlId="Rule$PH_SYS_Rule_1314136241283__DUP_2002_1315588458933" ownerId="19590364" lastModified="1315588526169" id="308473406" custId="2002" creationTime="1315588458933">
                <collectorId>0</collectorId>
                <activatedTime>1315588468927</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>false</custInclusive>
                <description>Detects if the BlackBerry Mail Store Service is in the stopped state.</description>
                <eventFilters entityVersion="2" xmlId="EventFilter@297116408" ownerId="19590364" lastModified="1315589320722" id="297116408" custId="2002" creationTime="1315588458933">
                    <collectorId>0</collectorId>
                    <groupBy>hostName ,eventId ,eventDesc </groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>BlackBerryMailStoreAlerts</name>
                    <singleConstraint>  hostIpAddr IN (Group@PH_SYS_DEVICE_Server)  AND  rawEventMsg CONTAIN "7036"  AND  rawEventMsg CONTAIN "BlackBerry Mail Store Service service entered the stopped state" </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>BlackBerry Mail Store Service Stopped (c)</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@297116408</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostName = BlackBerryAlerts.hostName, eventId = BlackBerryAlerts.eventId, eventDesc = BlackBerryAlerts.eventDesc</incidentAttrs>
                <incidentFireFreq>1800</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$BlackBerry_Mail_Store_Service_Stopped_c_</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, hostName, eventId, eventDesc</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_SYS_Rule_1314136241283__DUP_2002_1315588748717" entityVersion="5" xmlId="Rule$PH_SYS_Rule_1314136241283__DUP_2002_1315588748717" ownerId="19590364" lastModified="1315588759848" id="308473407" custId="2002" creationTime="1315588748717">
                <collectorId>0</collectorId>
                <activatedTime>1315588759848</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>false</custInclusive>
                <description>Detects if the BlackBerry Dispatcher Service is in the stopped state.</description>
                <eventFilters entityVersion="2" xmlId="EventFilter@297116409" ownerId="19590364" lastModified="1315589351643" id="297116409" custId="2002" creationTime="1315588748717">
                    <collectorId>0</collectorId>
                    <groupBy>hostName ,eventId ,eventDesc </groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>BlackBerryDispatcherAlerts</name>
                    <singleConstraint>  hostIpAddr IN (Group@PH_SYS_DEVICE_Server)  AND  rawEventMsg CONTAIN "7036"  AND  rawEventMsg CONTAIN "BlackBerry Dispatcher service entered the stopped state" </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>BlackBerry Dispatcher Service Stopped (c)</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@297116409</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostName = BlackBerryAlerts.hostName, eventId = BlackBerryAlerts.eventId, eventDesc = BlackBerryAlerts.eventDesc</incidentAttrs>
                <incidentFireFreq>1800</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$BlackBerry_Dispatcher_Service_Stopped_c_</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, hostName, eventId, eventDesc</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_SYS_Rule_1314136241283__DUP_2002_1315590015555" entityVersion="4" xmlId="Rule$PH_SYS_Rule_1314136241283__DUP_2002_1315590015555" ownerId="19590364" lastModified="1315590129546" id="308473408" custId="2002" creationTime="1315590015555">
                <collectorId>0</collectorId>
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>false</custInclusive>
                <description>Detects if the Microsoft Exchange Replication Service is in the stopped state.</description>
                <eventFilters entityVersion="4" xmlId="EventFilter@297116410" ownerId="19590364" lastModified="1315590129548" id="297116410" custId="2002" creationTime="1315590015555">
                    <collectorId>0</collectorId>
                    <groupBy>hostName ,eventId ,eventDesc </groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>MicrosoftExchReplService</name>
                    <singleConstraint>  hostIpAddr IN (Group@PH_SYS_DEVICE_Server)  AND  rawEventMsg CONTAIN "7036"  AND  rawEventMsg CONTAIN "The Microsoft Exchange Replication Service service entered the stopped state" </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Microsoft Exchange Replication Service Stopped (c)</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@297116410</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostName = BlackBerryAlerts.hostName, eventId = BlackBerryAlerts.eventId, eventDesc = BlackBerryAlerts.eventDesc</incidentAttrs>
                <incidentFireFreq>1800</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$Microsoft_Exchange_Replication_Service_Stopped_c_</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, hostName, eventId, eventDesc</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_SYS_Rule_1315591107067" entityVersion="1" xmlId="Rule$PH_SYS_Rule_1315591107067" ownerId="19590364" lastModified="1315591151227" id="308473409" custId="2002" creationTime="1315591107067">
                <collectorId>0</collectorId>
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>false</custInclusive>
                <description>Detects if the Log file action LogCopy failed for a storage group.</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@297116411" ownerId="19590364" lastModified="1315591107067" id="297116411" custId="2002" creationTime="1315591107067">
                    <collectorId>0</collectorId>
                    <groupBy>phRecvTime ,eventDesc ,hostName ,hostIpAddr </groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>MSExchReplLogFailure</name>
                    <singleConstraint>  hostIpAddr IN (Group@Exchange%20Servers)  AND  eventType = "Win-App-MSExchangeRepl-2104" </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Microsoft Exchange Replication Log Failure (c)</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@297116411</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostIpAddr = MSExchReplLogFailure.hostIpAddr, hostName = MSExchReplLogFailure.hostName</incidentAttrs>
                <incidentFireFreq>7200</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$Microsoft_Exchange_Replication_Log_Failure_c_</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, hostName, hostIpAddr, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_SYS_Rule_1316016785822" entityVersion="0" xmlId="Rule$PH_SYS_Rule_1316016785822" ownerId="19590364" lastModified="1316016785822" id="317025150" custId="0" creationTime="1316016785822">
                <activatedTime>0</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>false</custInclusive>
                <description>Detects when an Axcient backup jobs fails</description>
                <eventFilters entityVersion="0" xmlId="EventFilter@317025200" ownerId="19590364" lastModified="1316016785822" id="317025200" custId="1" creationTime="1316016785822">
                    <groupBy>phRecvTime ,eventDesc ,hostName ,hostIpAddr ,rawEventMsg </groupBy>
                    <groupConstraint> COUNT ( * )&gt;= 1 </groupConstraint>
                    <index>0</index>
                    <name>AxcientBackupFailure</name>
                    <singleConstraint>  rawEventMsg CONTAIN "BACKUP_FAILED" </singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Axcient Backup Failure (g)</name>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@317025200</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostIpAddr = AxcientBackupFailure.hostIpAddr, hostName = AxcientBackupFailure.hostName, phRecvTime = AxcientBackupFailure.phRecvTime, eventDesc = AxcientBackupFailure.eventDesc</incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$Axcient_Backup_Failure_g_</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, hostName, hostIpAddr, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule dataChangeType="SYSTEM" naturalId="PH_Rule_Avail_15__DUP_2007_1316212016387" entityVersion="9" xmlId="Rule$PH_Rule_Avail_15__DUP_2007_1316212016387" ownerId="4600602" lastModified="1316212024202" id="321020550" custId="2007" creationTime="1316212016388">
                <collectorId>0</collectorId>
                <activatedTime>1316212024202</activatedTime>
                <active>true</active>
                <category>0</category>
                <custInclusive>true</custInclusive>
                <description>Detects that an important server process staying down - that is didn't come up within 5 minutes of going down</description>
                <eventFilters entityVersion="3" xmlId="EventFilter@320928351" ownerId="4600602" lastModified="1316212016396" id="320928351" custId="2007" creationTime="1316212016396">
                    <collectorId>0</collectorId>
                    <groupBy>hostIpAddr ,appName ,swProcName </groupBy>
                    <groupConstraint></groupConstraint>
                    <index>0</index>
                    <name>AppDownSrv</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_PROC_STOP"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server) </singleConstraint>
                </eventFilters>
                <eventFilters entityVersion="3" xmlId="EventFilter@320928352" ownerId="4600602" lastModified="1316212016396" id="320928352" custId="2007" creationTime="1316212016396">
                    <collectorId>0</collectorId>
                    <groupBy>hostIpAddr ,appName ,swProcName </groupBy>
                    <groupConstraint></groupConstraint>
                    <index>1</index>
                    <name>AppUpSrv</name>
                    <singleConstraint>  eventType = "PH_DEV_MON_PROC_START"  AND  hostIpAddr IN (Group@PH_SYS_DEVICE_Server) </singleConstraint>
                </eventFilters>
                <filterOperators>
                    <rank>0</rank>
                    <type>NOT_FOLLOWED_BY</type>
                </filterOperators>
                <globalConstraint>AppDownSrv.hostIpAddr = AppUpSrv.hostIpAddr, AppDownSrv.appName = AppUpSrv.appName</globalConstraint>
                <name>Important Process Stopped (c)</name>
                <rawFOString>NOT_FOLLOWED_BY:0</rawFOString>
                <triggerWindow>300</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@320928351</eventFilters>
                <eventFilters>EventFilter@320928352</eventFilters>
                <fireInternalIncident>true</fireInternalIncident>
                <incidentAttrs>
        hostIpAddr = AppDownSrv.hostIpAddr, appName = AppDownSrv.appName, swProcName = AppDownSrv.swProcName
      </incidentAttrs>
                <incidentFireFreq>3600</incidentFireFreq>
                <incidentFired>true</incidentFired>
                <incidentType>EventType$Important_Process_Stopped_c_</incidentType>
                <triggerEventAttrList> phRecvTime,reptDevIpAddr,hostIpAddr,hostName,appName,rawEventMsg </triggerEventAttrList>
            </rule>
            <rule naturalId="PH_SYS_Rule_1316792820736" entityVersion="2" xmlId="Rule$PH_SYS_Rule_1316792820736" ownerId="19590364" lastModified="1316800198132" id="330801100" custId="0" creationTime="1316792820735">
                <activatedTime>0</activatedTime>
                <active>false</active>
                <category>0</category>
                <custInclusive>false</custInclusive>
                <description>Detects when a Compushare Access account successfully logs on to a server or workstation.</description>
                <eventFilters entityVersion="2" xmlId="EventFilter@330801150" ownerId="19590364" lastModified="1316800198135" id="330801150" custId="1" creationTime="1316792820736">
                    <groupBy>phRecvTime ,eventType ,reptDevIpAddr ,hostName ,rawEventMsg </groupBy>
                    <groupConstraint> COUNT ( * )= 1 </groupConstraint>
                    <index>0</index>
                    <name>CSAccessAccountLogon</name>
                    <singleConstraint>  reptDevIpAddr IN (Group@PH_SYS_APP_DOMAIN_CONTROLLER)  AND  rawEventMsg CONTAIN "Successful Logon"  AND(  rawEventMsg CONTAIN "528"  OR  rawEventMsg CONTAIN "4624" ) AND(  rawEventMsg CONTAIN "cshare"  OR  rawEventMsg CONTAIN "mwservice"  OR  rawEventMsg CONTAIN "dataassurance"  OR  rawEventMsg CONTAIN "besadmin" )</singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Successful Compushare Access Account Logon (g)</name>
                <triggerWindow>60</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@330801150</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostName = CSAccessAccountLogon.hostName, eventType = CSAccessAccountLogon.eventType, phRecvTime = CSAccessAccountLogon.phRecvTime, reptDevIpAddr = CSAccessAccountLogon.reptDevIpAddr, rawEventMsg = CSAccessAccountLogon.rawEventMsg</incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$Successful_Compushare_Access_Account_Logon_g_</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, hostName, reptDevIpAddr, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_SYS_Rule_1316792820736__DUP_1_1316792895427" entityVersion="4" xmlId="Rule$PH_SYS_Rule_1316792820736__DUP_1_1316792895427" ownerId="19590364" lastModified="1316795329988" id="330801101" custId="0" creationTime="1316792895427">
                <activatedTime>0</activatedTime>
                <active>false</active>
                <category>0</category>
                <custInclusive>false</custInclusive>
                <description>Detects when a new Domain User Account has been created.</description>
                <eventFilters entityVersion="3" xmlId="EventFilter@330801152" ownerId="19590364" lastModified="1316795329991" id="330801152" custId="1" creationTime="1316792895427">
                    <groupBy>phRecvTime ,eventType ,reptDevIpAddr ,hostName ,rawEventMsg </groupBy>
                    <groupConstraint> COUNT ( * )= 1 </groupConstraint>
                    <index>0</index>
                    <name>UserAccountCreated</name>
                    <singleConstraint>  reptDevIpAddr IN (Group@PH_SYS_APP_DOMAIN_CONTROLLER)  AND  rawEventMsg CONTAIN "User Account Created"  AND(  rawEventMsg CONTAIN "624"  OR  rawEventMsg CONTAIN "4720" )</singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Domain User Account Created (g)</name>
                <triggerWindow>60</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@330801152</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostName = UserAccountCreated.hostName, eventType = UserAccountCreated.eventType, phRecvTime = UserAccountCreated.phRecvTime, reptDevIpAddr = UserAccountCreated.reptDevIpAddr, rawEventMsg = UserAccountCreated.rawEventMsg</incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$User_Account_Created_g_</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, hostName, reptDevIpAddr, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_SYS_Rule_1316792820736__DUP_1_1316793561986" entityVersion="5" xmlId="Rule$PH_SYS_Rule_1316792820736__DUP_1_1316793561986" ownerId="19590364" lastModified="1316795296943" id="330801102" custId="0" creationTime="1316793561986">
                <activatedTime>0</activatedTime>
                <active>false</active>
                <category>0</category>
                <custInclusive>false</custInclusive>
                <description>Detects when a new Domain User Account has been enabled.</description>
                <eventFilters entityVersion="3" xmlId="EventFilter@330801154" ownerId="19590364" lastModified="1316795296946" id="330801154" custId="1" creationTime="1316793561986">
                    <groupBy>phRecvTime ,eventType ,reptDevIpAddr ,hostName ,rawEventMsg </groupBy>
                    <groupConstraint> COUNT ( * )= 1 </groupConstraint>
                    <index>0</index>
                    <name>UserAccountEnabled</name>
                    <singleConstraint>  reptDevIpAddr IN (Group@PH_SYS_APP_DOMAIN_CONTROLLER)  AND  rawEventMsg CONTAIN "User Account Enabled"  AND(  rawEventMsg CONTAIN "626"  OR  rawEventMsg CONTAIN "4722" )</singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Domain User Account Enabled (g)</name>
                <triggerWindow>60</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@330801154</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostName = UserAccountEnabled.hostName, eventType = UserAccountEnabled.eventType, phRecvTime = UserAccountEnabled.phRecvTime, reptDevIpAddr = UserAccountEnabled.reptDevIpAddr, rawEventMsg = UserAccountEnabled.rawEventMsg</incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$Domain_User_Account_Enabled_g_</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, hostName, reptDevIpAddr, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_SYS_Rule_1316792820736__DUP_1_1316795433794" entityVersion="8" xmlId="Rule$PH_SYS_Rule_1316792820736__DUP_1_1316795433794" ownerId="19590364" lastModified="1316798625675" id="330801103" custId="0" creationTime="1316795433794">
                <activatedTime>0</activatedTime>
                <active>false</active>
                <category>0</category>
                <custInclusive>false</custInclusive>
                <description>Detects when an account has been added to a Global Group.</description>
                <eventFilters entityVersion="5" xmlId="EventFilter@330801156" ownerId="19590364" lastModified="1316798625682" id="330801156" custId="1" creationTime="1316795433794">
                    <groupBy>phRecvTime ,eventType ,reptDevIpAddr ,hostName ,rawEventMsg </groupBy>
                    <groupConstraint> COUNT ( * )= 1 </groupConstraint>
                    <index>0</index>
                    <name>GlobalGroupMembershipUserAdded</name>
                    <singleConstraint>  reptDevIpAddr IN (Group@PH_SYS_APP_DOMAIN_CONTROLLER)  AND  rawEventMsg CONTAIN "Security Enabled Global Group Member Added"  AND(  rawEventMsg CONTAIN "632"  OR  rawEventMsg CONTAIN "4728" )</singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Global Group Membership - User Added (g)</name>
                <triggerWindow>60</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@330801156</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostName = UserAccountEnabled.hostName, eventType = UserAccountEnabled.eventType, phRecvTime = UserAccountEnabled.phRecvTime, reptDevIpAddr = UserAccountEnabled.reptDevIpAddr, rawEventMsg = UserAccountEnabled.rawEventMsg</incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$Global_Group_Membership_Changed_g_</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, hostName, reptDevIpAddr, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_SYS_Rule_1316792820736__DUP_1_1316798435412" entityVersion="10" xmlId="Rule$PH_SYS_Rule_1316792820736__DUP_1_1316798435412" ownerId="19590364" lastModified="1316798643062" id="330801104" custId="0" creationTime="1316798435412">
                <activatedTime>0</activatedTime>
                <active>false</active>
                <category>0</category>
                <custInclusive>false</custInclusive>
                <description>Detects when an account has been removed from a Global Group.</description>
                <eventFilters entityVersion="6" xmlId="EventFilter@330801158" ownerId="19590364" lastModified="1316798643064" id="330801158" custId="1" creationTime="1316798435412">
                    <groupBy>phRecvTime ,eventType ,reptDevIpAddr ,hostName ,rawEventMsg </groupBy>
                    <groupConstraint> COUNT ( * )= 1 </groupConstraint>
                    <index>0</index>
                    <name>GlobalGroupMembershipUserRemoved</name>
                    <singleConstraint>  reptDevIpAddr IN (Group@PH_SYS_APP_DOMAIN_CONTROLLER)  AND  rawEventMsg CONTAIN "Security Enabled Global Group Member Removed"  AND(  rawEventMsg CONTAIN "633"  OR  rawEventMsg CONTAIN "4729" )</singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Global Group Membership - User Removed (g)</name>
                <triggerWindow>60</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@330801158</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostName = UserAccountEnabled.hostName, eventType = UserAccountEnabled.eventType, phRecvTime = UserAccountEnabled.phRecvTime, reptDevIpAddr = UserAccountEnabled.reptDevIpAddr, rawEventMsg = UserAccountEnabled.rawEventMsg</incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$Global_Group_Membership_User_Removed_g_</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, hostName, reptDevIpAddr, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_SYS_Rule_1316792820736__DUP_1_1316798714619" entityVersion="9" xmlId="Rule$PH_SYS_Rule_1316792820736__DUP_1_1316798714619" ownerId="19590364" lastModified="1316799031054" id="330801105" custId="0" creationTime="1316798714619">
                <activatedTime>0</activatedTime>
                <active>false</active>
                <category>0</category>
                <custInclusive>false</custInclusive>
                <description>Detects when a new Domain User Account has been changed.</description>
                <eventFilters entityVersion="6" xmlId="EventFilter@330801160" ownerId="19590364" lastModified="1316799031056" id="330801160" custId="1" creationTime="1316798714619">
                    <groupBy>phRecvTime ,eventType ,reptDevIpAddr ,hostName ,rawEventMsg </groupBy>
                    <groupConstraint> COUNT ( * )= 1 </groupConstraint>
                    <index>0</index>
                    <name>UserAccountChanged</name>
                    <singleConstraint>  reptDevIpAddr IN (Group@PH_SYS_APP_DOMAIN_CONTROLLER)  AND  rawEventMsg CONTAIN "User Account Changed"  AND(  rawEventMsg CONTAIN "642"  OR  rawEventMsg CONTAIN "4738" )</singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Domain User Account Changed (g)</name>
                <triggerWindow>60</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@330801160</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostName = UserAccountEnabled.hostName, eventType = UserAccountEnabled.eventType, phRecvTime = UserAccountEnabled.phRecvTime, reptDevIpAddr = UserAccountEnabled.reptDevIpAddr, rawEventMsg = UserAccountEnabled.rawEventMsg</incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$Domain_User_Account_Changed_g_</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, hostName, reptDevIpAddr, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_SYS_Rule_1316792820736__DUP_1_1316798903021" entityVersion="10" xmlId="Rule$PH_SYS_Rule_1316792820736__DUP_1_1316798903021" ownerId="19590364" lastModified="1316799019735" id="330801106" custId="0" creationTime="1316798903021">
                <activatedTime>0</activatedTime>
                <active>false</active>
                <category>0</category>
                <custInclusive>false</custInclusive>
                <description>Detects when a Domain User Account has been locked out.</description>
                <eventFilters entityVersion="6" xmlId="EventFilter@330801162" ownerId="19590364" lastModified="1316799019741" id="330801162" custId="1" creationTime="1316798903022">
                    <groupBy>phRecvTime ,eventType ,reptDevIpAddr ,hostName ,rawEventMsg </groupBy>
                    <groupConstraint> COUNT ( * )= 1 </groupConstraint>
                    <index>0</index>
                    <name>UserAccountLockedOut</name>
                    <singleConstraint>  reptDevIpAddr IN (Group@PH_SYS_APP_DOMAIN_CONTROLLER)  AND  rawEventMsg CONTAIN "User Account Locked Out"  AND(  rawEventMsg CONTAIN "644"  OR  rawEventMsg CONTAIN "4740" )</singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Domain User Account Locked Out (g)</name>
                <triggerWindow>60</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@330801162</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostName = UserAccountEnabled.hostName, eventType = UserAccountEnabled.eventType, phRecvTime = UserAccountEnabled.phRecvTime, reptDevIpAddr = UserAccountEnabled.reptDevIpAddr, rawEventMsg = UserAccountEnabled.rawEventMsg</incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$Domain_User_Account_Locked_Out_g_</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, hostName, reptDevIpAddr, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_SYS_Rule_1316792820736__DUP_1_1316799079959" entityVersion="10" xmlId="Rule$PH_SYS_Rule_1316792820736__DUP_1_1316799079959" ownerId="19590364" lastModified="1316799145084" id="330801107" custId="0" creationTime="1316799079959">
                <activatedTime>0</activatedTime>
                <active>false</active>
                <category>0</category>
                <custInclusive>false</custInclusive>
                <description>Detects when an account has been added to a Universal Group.</description>
                <eventFilters entityVersion="6" xmlId="EventFilter@330801164" ownerId="19590364" lastModified="1316799145087" id="330801164" custId="1" creationTime="1316799079960">
                    <groupBy>phRecvTime ,eventType ,reptDevIpAddr ,hostName ,rawEventMsg </groupBy>
                    <groupConstraint> COUNT ( * )= 1 </groupConstraint>
                    <index>0</index>
                    <name>UniversalGroupMembershipUserAdded</name>
                    <singleConstraint>  reptDevIpAddr IN (Group@PH_SYS_APP_DOMAIN_CONTROLLER)  AND  rawEventMsg CONTAIN "Security Enabled Universal Group Member Added"  AND(  rawEventMsg CONTAIN "660"  OR  rawEventMsg CONTAIN "4756" )</singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Universal Group Membership - User Added (g)</name>
                <triggerWindow>60</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@330801164</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostName = UserAccountEnabled.hostName, eventType = UserAccountEnabled.eventType, phRecvTime = UserAccountEnabled.phRecvTime, reptDevIpAddr = UserAccountEnabled.reptDevIpAddr, rawEventMsg = UserAccountEnabled.rawEventMsg</incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$Universal_Group_Membership_User_Added_g_</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, hostName, reptDevIpAddr, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_SYS_Rule_1316792820736__DUP_1_1316799161087" entityVersion="12" xmlId="Rule$PH_SYS_Rule_1316792820736__DUP_1_1316799161087" ownerId="19590364" lastModified="1316799542576" id="330801108" custId="0" creationTime="1316799161087">
                <activatedTime>0</activatedTime>
                <active>false</active>
                <category>0</category>
                <custInclusive>false</custInclusive>
                <description>Detects when an account has been removed from a Universal Group.</description>
                <eventFilters entityVersion="7" xmlId="EventFilter@330801166" ownerId="19590364" lastModified="1316799542578" id="330801166" custId="1" creationTime="1316799161087">
                    <groupBy>phRecvTime ,eventType ,reptDevIpAddr ,hostName ,rawEventMsg </groupBy>
                    <groupConstraint> COUNT ( * )= 1 </groupConstraint>
                    <index>0</index>
                    <name>UniversalGroupMembershipUserRemoved</name>
                    <singleConstraint>  reptDevIpAddr IN (Group@PH_SYS_APP_DOMAIN_CONTROLLER)  AND  rawEventMsg CONTAIN "Security Enabled Universal Group Member Removed"  AND(  rawEventMsg CONTAIN "661"  OR  rawEventMsg CONTAIN "4757" )</singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Universal Group Membership - User Removed (g)</name>
                <triggerWindow>60</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@330801166</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostName = UserAccountEnabled.hostName, eventType = UserAccountEnabled.eventType, phRecvTime = UserAccountEnabled.phRecvTime, reptDevIpAddr = UserAccountEnabled.reptDevIpAddr, rawEventMsg = UserAccountEnabled.rawEventMsg</incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$Universal_Group_Membership_User_Removed_g_</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, hostName, reptDevIpAddr, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_SYS_Rule_1316792820736__DUP_1_1316799641296" entityVersion="13" xmlId="Rule$PH_SYS_Rule_1316792820736__DUP_1_1316799641296" ownerId="19590364" lastModified="1316800008533" id="330801109" custId="0" creationTime="1316799641296">
                <activatedTime>0</activatedTime>
                <active>false</active>
                <category>0</category>
                <custInclusive>false</custInclusive>
                <description>Detects when an account has opened an object.</description>
                <eventFilters entityVersion="8" xmlId="EventFilter@330801168" ownerId="19590364" lastModified="1316800008535" id="330801168" custId="1" creationTime="1316799641297">
                    <groupBy>phRecvTime ,eventType ,reptDevIpAddr ,hostName ,rawEventMsg </groupBy>
                    <groupConstraint> COUNT ( * )= 1 </groupConstraint>
                    <index>0</index>
                    <name>FolderRightsAssignmentObjectOpened</name>
                    <singleConstraint>  reptDevIpAddr IN (Group@PH_SYS_APP_DOMAIN_CONTROLLER)  AND  rawEventMsg CONTAIN "Object Open"  AND(  rawEventMsg CONTAIN "560"  OR  rawEventMsg CONTAIN "4656" )</singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Folder Rights Assignment - Object Opened (g)</name>
                <triggerWindow>60</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@330801168</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostName = UserAccountEnabled.hostName, eventType = UserAccountEnabled.eventType, phRecvTime = UserAccountEnabled.phRecvTime, reptDevIpAddr = UserAccountEnabled.reptDevIpAddr, rawEventMsg = UserAccountEnabled.rawEventMsg</incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$Folder_Rights_Assignment_Permission_Granted_g_</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, hostName, reptDevIpAddr, rawEventMsg</triggerEventAttrList>
            </rule>
            <rule naturalId="PH_SYS_Rule_1316792820736__DUP_1_1316799804354" entityVersion="15" xmlId="Rule$PH_SYS_Rule_1316792820736__DUP_1_1316799804354" ownerId="19590364" lastModified="1316799966796" id="330801110" custId="0" creationTime="1316799804354">
                <activatedTime>0</activatedTime>
                <active>false</active>
                <category>0</category>
                <custInclusive>false</custInclusive>
                <description>Detects when an account has closed an opened object.</description>
                <eventFilters entityVersion="9" xmlId="EventFilter@330801170" ownerId="19590364" lastModified="1316799966798" id="330801170" custId="1" creationTime="1316799804354">
                    <groupBy>phRecvTime ,eventType ,reptDevIpAddr ,hostName ,rawEventMsg </groupBy>
                    <groupConstraint> COUNT ( * )= 1 </groupConstraint>
                    <index>0</index>
                    <name>FolderRightsAssignmentObjectClosed</name>
                    <singleConstraint>  reptDevIpAddr IN (Group@PH_SYS_APP_DOMAIN_CONTROLLER)  AND  rawEventMsg CONTAIN "Handle Closed"  AND(  rawEventMsg CONTAIN "562"  OR  rawEventMsg CONTAIN "4658" )</singleConstraint>
                </eventFilters>
                <globalConstraint></globalConstraint>
                <name>Folder Rights Assignment - Object Closed (g)</name>
                <triggerWindow>60</triggerWindow>
                <advanced>true</advanced>
                <eventFilters>EventFilter@330801170</eventFilters>
                <fireInternalIncident>false</fireInternalIncident>
                <incidentAttrs>hostName = UserAccountEnabled.hostName, eventType = UserAccountEnabled.eventType, phRecvTime = UserAccountEnabled.phRecvTime, reptDevIpAddr = UserAccountEnabled.reptDevIpAddr, rawEventMsg = UserAccountEnabled.rawEventMsg</incidentAttrs>
                <incidentFireFreq>86400</incidentFireFreq>
                <incidentFired>false</incidentFired>
                <incidentType>EventType$Folder_Rights_Assignment_Permission_Revoked_g_</incidentType>
                <triggerEventAttrList>phRecvTime, eventType, hostName, reptDevIpAddr, rawEventMsg</triggerEventAttrList>
            </rule>
        </rules>
    </result>
</response>
